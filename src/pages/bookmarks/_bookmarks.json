{
  "lastUpdate": "2024-06-19T12:55:43.790Z",
  "data": [
    {
      "id": "c8cbc2c2-fe53-4571-a888-17258a3ff787",
      "title": "Richard Hamming: You and Your Research",
      "url": "https://paulgraham.com/hamming.html",
      "savedAt": "2024-06-18T00:40:21.000Z",
      "description": "Talk at Bellcore, 7 March 1986The title of my talk is \"You and Your Research.\" It is not about managing research, it is about how you individually do your research. I could give a talk on the other subject — but it's not, it's about you. I'm not talking about ordinary run-of-the-mill research; I'm talking about great research. And for the sake of describing great research I'll occasionally say Nobel-Prize type of work. It doesn't have to gain the Nobel Prize, but I mean those kinds of things which we perceive are significant things. Relativity, if you want, Shannon's information theory, any number of outstanding theories — that's the kind of thing I'm talking about.Now, how did I come to do this study? At Los Alamos I was brought in to run the computing machines which other people had got going, so those scientists and physicists could get back to business. I saw I was a stooge. I saw that although physically I was the same, they were different. And to put the thing bluntly, I was envious. I wanted to know why they were so different from me. I saw Feynman up close. I saw Fermi and Teller. I saw Oppenheimer. I saw Hans Bethe: he was my boss. I saw quite a few very capable people. I became very interested in the difference between those who do and those who might have done.When I came to Bell Labs, I came into a very productive department. Bode was the department head at the time; Shannon was there, and there were other people. I continued examining the questions, \"Why?\" and \"What is the difference?\" I continued subsequently by reading biographies, autobiographies, asking people questions such as: \"How did you come to do this?\" I tried to find out what are the differences. And that's what this talk is about.Now, why is this talk important? I think it is important because, as far as I know, each of you has one life to live. Even if you believe in reincarnation it doesn't do you any good from one life to the next! Why shouldn't you do significant things in this one life, however you define significant? I'm not going to define it — you know what I mean. I will talk mainly about science because that is what I have studied. But so far as I know, and I've been told by others, much of what I say applies to many fields. Outstanding work is characterized very much the same way in most fields, but I will confine myself to science.In order to get at you individually, I must talk in the first person. I have to get you to drop modesty and say to yourself, \"Yes, I would like to do first-class work.\" Our society frowns on people who set out to do really good work. You're not supposed to; luck is supposed to descend on you and you do great things by chance. Well, that's a kind of dumb thing to say. I say, why shouldn't you set out to do something significant. You don't have to tell other people, but shouldn't you say to yourself, \"Yes, I would like to do something significant.\"In order to get to the second stage, I have to drop modesty and talk in the first person about what I've seen, what I've done, and what I've heard. I'm going to talk about people, some of whom you know, and I trust that when we leave, you won't quote me as saying some of the things I said.Let me start not logically, but psychologically. I find that the major objection is that people think great science is done by luck. It's all a matter of luck. Well, consider Einstein. Note how many different things he did that were good. Was it all luck? Wasn't it a little too repetitive? Consider Shannon. He didn't do just information theory. Several years before, he did some other good things and some which are still locked up in the security of cryptography. He did many good things.You see again and again that it is more than one thing from a good person. Once in a while a person does only one thing in his whole life, and we'll talk about that later, but a lot of times there is repetition. I claim that luck will not cover everything. And I will cite Pasteur who said, \"Luck favors the prepared mind.\" And I think that says it the way I believe it. There is indeed an element of luck, and no, there isn't. The prepared mind sooner or later finds something important and does it. So yes, it is luck. The particular thing you do is luck, but that you do something is not.For example, when I came to Bell Labs, I shared an office for a while with Shannon. At the same time he was doing information theory, I was doing coding theory. It is suspicious that the two of us did it at the same place and at the same time — it was in the atmosphere. And you can say, \"Yes, it was luck.\" On the other hand you can say, \"But why of all the people in Bell Labs then were those the two who did it?\" Yes, it is partly luck, and partly it is the prepared mind; but \"partly\" is the other thing I'm going to talk about. So, although I'll come back several more times to luck, I want to dispose of this matter of luck as being the sole criterion whether you do great work or not. I claim you have some, but not total, control over it. And I will quote, finally, Newton on the matter. Newton said, \"If others would think as hard as I did, then they would get similar results.\"One of the characteristics you see, and many people have it including great scientists, is that usually when they were young they had independent thoughts and had the courage to pursue them. For example, Einstein, somewhere around 12 or 14, asked himself the question, \"What would a light wave look like if I went with the velocity of light to look at it?\" Now he knew that electromagnetic theory says you cannot have a stationary local maximum. But if he moved along with the velocity of light, he would see a local maximum. He could see a contradiction at the age of 12, 14, or somewhere around there, that everything was not right and that the velocity of light had something peculiar. Is it luck that he finally created special relativity? Early on, he had laid down some of the pieces by thinking of the fragments. Now that's the necessary but not sufficient condition. All of these items I will talk about are both luck and not luck.How about having lots of brains? It sounds good. Most of you in this room probably have more than enough brains to do first-class work. But great work is something else than mere brains. Brains are measured in various ways. In mathematics, theoretical physics, astrophysics, typically brains correlates to a great extent with the ability to manipulate symbols. And so the typical IQ test is apt to score them fairly high. On the other hand, in other fields it is something different. For example, Bill Pfann, the fellow who did zone melting, came into my office one day. He had this idea dimly in his mind about what he wanted and he had some equations. It was pretty clear to me that this man didn't know much mathematics and he wasn't really articulate. His problem seemed interesting so I took it home and did a little work. I finally showed him how to run computers so he could compute his own answers. I gave him the power to compute. He went ahead, with negligible recognition from his own department, but ultimately he has collected all the prizes in the field. Once he got well started, his shyness, his awkwardness, his inarticulateness, fell away and he became much more productive in many other ways. Certainly he became much more articulate.And I can cite another person in the same way. I trust he isn't in the audience, i.e. a fellow named Clogston. I met him when I was working on a problem with John Pierce's group and I didn't think he had much. I asked my friends who had been with him at school, \"Was he like that in graduate school?\" \"Yes,\" they replied. Well I would have fired the fellow, but J. R. Pierce was smart and kept him on. Clogston finally did the Clogston cable. After that there was a steady stream of good ideas. One success brought him confidence and courage.One of the characteristics of successful scientists is having courage. Once you get your courage up and believe that you can do important problems, then you can. If you think you can't, almost surely you are not going to. Courage is one of the things that Shannon had supremely. You have only to think of his major theorem. He wants to create a method of coding, but he doesn't know what to do so he makes a random code. Then he is stuck. And then he asks the impossible question, \"What would the average random code do?\" He then proves that the average code is arbitrarily good, and that therefore there must be at least one good code. Who but a man of infinite courage could have dared to think those thoughts? That is the characteristic of great scientists; they have courage. They will go forward under incredible circumstances; they think and continue to think.Age is another factor which the physicists particularly worry about. They always are saying that you have got to do it when you are young or you will never do it. Einstein did things very early, and all the quantum mechanic fellows were disgustingly young when they did their best work. Most mathematicians, theoretical physicists, and astrophysicists do what we consider their best work when they are young. It is not that they don't do good work in their old age but what we value most is often what they did early. On the other hand, in music, politics and literature, often what we consider their best work was done late. I don't know how whatever field you are in fits this scale, but age has some effect.But let me say why age seems to have the effect it does. In the first place if you do some good work you will find yourself on all kinds of committees and unable to do any more work. You may find yourself as I saw Brattain when he got a Nobel Prize. The day the prize was announced we all assembled in Arnold Auditorium; all three winners got up and made speeches. The third one, Brattain, practically with tears in his eyes, said, \"I know about this Nobel-Prize effect and I am not going to let it affect me; I am going to remain good old Walter Brattain.\" Well I said to myself, \"That is nice.\" But in a few weeks I saw it was affecting him. Now he could only work on great problems.When you are famous it is hard to work on small problems. This is what did Shannon in. After information theory, what do you do for an encore? The great scientists often make this error. They fail to continue to plant the little acorns from which the mighty oak trees grow. They try to get the big thing right off. And that isn't the way things go. So that is another reason why you find that when you get early recognition it seems to sterilize you. In fact I will give you my favorite quotation of many years. The Institute for Advanced Study in Princeton, in my opinion, has ruined more good scientists than any institution has created, judged by what they did before they came and judged by what they did after. Not that they weren't good afterwards, but they were superb before they got there and were only good afterwards.This brings up the subject, out of order perhaps, of working conditions. What most people think are the best working conditions, are not. Very clearly they are not because people are often most productive when working conditions are bad. One of the better times of the Cambridge Physical Laboratories was when they had practically shacks — they did some of the best physics ever.I give you a story from my own private life. Early on it became evident to me that Bell Laboratories was not going to give me the conventional acre of programming people to program computing machines in absolute binary. It was clear they weren't going to. But that was the way everybody did it. I could go to the West Coast and get a job with the airplane companies without any trouble, but the exciting people were at Bell Labs and the fellows out there in the airplane companies were not. I thought for a long while about, \"Did I want to go or not?\" and I wondered how I could get the best of two possible worlds. I finally said to myself, \"Hamming, you think the machines can do practically everything. Why can't you make them write programs?\" What appeared at first to me as a defect forced me into automatic programming very early. What appears to be a fault, often, by a change of viewpoint, turns out to be one of the greatest assets you can have. But you are not likely to think that when you first look the thing and say, \"Gee, I'm never going to get enough programmers, so how can I ever do any great programming?\"And there are many other stories of the same kind; Grace Hopper has similar ones. I think that if you look carefully you will see that often the great scientists, by turning the problem around a bit, changed a defect to an asset. For example, many scientists when they found they couldn't do a problem finally began to study why not. They then turned it around the other way and said, \"But of course, this is what it is\" and got an important result. So ideal working conditions are very strange. The ones you want aren't always the best ones for you.Now for the matter of drive. You observe that most great scientists have tremendous drive. I worked for ten years with John Tukey at Bell Labs. He had tremendous drive. One day about three or four years after I joined, I discovered that John Tukey was slightly younger than I was. John was a genius and I clearly was not. Well I went storming into Bode's office and said, \"How can anybody my age know as much as John Tukey does?\" He leaned back in his chair, put his hands behind his head, grinned slightly, and said, \"You would be surprised Hamming, how much you would know if you worked as hard as he did that many years.\" I simply slunk out of the office!What Bode was saying was this: Knowledge and productivity are like compound interest. Given two people of approximately the same ability and one person who works ten percent more than the other, the latter will more than twice outproduce the former. The more you know, the more you learn; the more you learn, the more you can do; the more you can do, the more the opportunity — it is very much like compound interest. I don't want to give you a rate, but it is a very high rate. Given two people with exactly the same ability, the one person who manages day in and day out to get in one more hour of thinking will be tremendously more productive over a lifetime. I took Bode's remark to heart; I spent a good deal more of my time for some years trying to work a bit harder and I found, in fact, I could get more work done. I don't like to say it in front of my wife, but I did sort of neglect her sometimes; I needed to study. You have to neglect things if you intend to get what you want done. There's no question about this.On this matter of drive Edison says, \"Genius is 99% perspiration and 1% inspiration.\" He may have been exaggerating, but the idea is that solid work, steadily applied, gets you surprisingly far. The steady application of effort with a little bit more work, intelligently applied is what does it. That's the trouble; drive, misapplied, doesn't get you anywhere. I've often wondered why so many of my good friends at Bell Labs who worked as hard or harder than I did, didn't have so much to show for it. The misapplication of effort is a very serious matter. Just hard work is not enough - it must be applied sensibly.There's another trait on the side which I want to talk about; that trait is ambiguity. It took me a while to discover its importance. Most people like to believe something is or is not true. Great scientists tolerate ambiguity very well. They believe the theory enough to go ahead; they doubt it enough to notice the errors and faults so they can step forward and create the new replacement theory. If you believe too much you'll never notice the flaws; if you doubt too much you won't get started. It requires a lovely balance. But most great scientists are well aware of why their theories are true and they are also well aware of some slight misfits which don't quite fit and they don't forget it. Darwin writes in his autobiography that he found it necessary to write down every piece of evidence which appeared to contradict his beliefs because otherwise they would disappear from his mind. When you find apparent flaws you've got to be sensitive and keep track of those things, and keep an eye out for how they can be explained or how the theory can be changed to fit them. Those are often the great contributions. Great contributions are rarely done by adding another decimal place. It comes down to an emotional commitment. Most great scientists are completely committed to their problem. Those who don't become committed seldom produce outstanding, first-class work.Now again, emotional commitment is not enough. It is a necessary condition apparently. And I think I can tell you the reason why. Everybody who has studied creativity is driven finally to saying, \"creativity comes out of your subconscious.\" Somehow, suddenly, there it is. It just appears. Well, we know very little about the subconscious; but one thing you are pretty well aware of is that your dreams also come out of your subconscious. And you're aware your dreams are, to a fair extent, a reworking of the experiences of the day. If you are deeply immersed and committed to a topic, day after day after day, your subconscious has nothing to do but work on your problem. And so you wake up one morning, or on some afternoon, and there's the answer. For those who don't get committed to their current problem, the subconscious goofs off on other things and doesn't produce the big result. So the way to manage yourself is that when you have a real important problem you don't let anything else get the center of your attention — you keep your thoughts on the problem. Keep your subconscious starved so it has to work on your problem, so you can sleep peacefully and get the answer in the morning, free.Now Alan Chynoweth mentioned that I used to eat at the physics table. I had been eating with the mathematicians and I found out that I already knew a fair amount of mathematics; in fact, I wasn't learning much. The physics table was, as he said, an exciting place, but I think he exaggerated on how much I contributed. It was very interesting to listen to Shockley, Brattain, Bardeen, J. B. Johnson, Ken McKay and other people, and I was learning a lot. But unfortunately a Nobel Prize came, and a promotion came, and what was left was the dregs. Nobody wanted what was left. Well, there was no use eating with them!Over on the other side of the dining hall was a chemistry table. I had worked with one of the fellows, Dave McCall; furthermore he was courting our secretary at the time. I went over and said, \"Do you mind if I join you?\" They can't say no, so I started eating with them for a while. And I started asking, \"What are the important problems of your field?\" And after a week or so, \"What important problems are you working on?\" And after some more time I came in one day and said, \"If what you are doing is not important, and if you don't think it is going to lead to something important, why are you at Bell Labs working on it?\" I wasn't welcomed after that; I had to find somebody else to eat with! That was in the spring.In the fall, Dave McCall stopped me in the hall and said, \"Hamming, that remark of yours got underneath my skin. I thought about it all summer, i.e. what were the important problems in my field. I haven't changed my research,\" he says, \"but I think it was well worthwhile.\" And I said, \"Thank you Dave,\" and went on. I noticed a couple of months later he was made the head of the department. I noticed the other day he was a Member of the National Academy of Engineering. I noticed he has succeeded. I have never heard the names of any of the other fellows at that table mentioned in science and scientific circles. They were unable to ask themselves, \"What are the important problems in my field?\"If you do not work on an important problem, it's unlikely you'll do important work. It's perfectly obvious. Great scientists have thought through, in a careful way, a number of important problems in their field, and they keep an eye on wondering how to attack them. Let me warn you, \"important problem\" must be phrased carefully. The three outstanding problems in physics, in a certain sense, were never worked on while I was at Bell Labs. By important I mean guaranteed a Nobel Prize and any sum of money you want to mention. We didn't work on (1) time travel, (2) teleportation, and (3) antigravity. They are not important problems because we do not have an attack. It's not the consequence that makes a problem important, it is that you have a reasonable attack. That is what makes a problem important. When I say that most scientists don't work on important problems, I mean it in that sense. The average scientist, so far as I can make out, spends almost all his time working on problems which he believes will not be important and he also doesn't believe that they will lead to important problems.I spoke earlier about planting acorns so that oaks will grow. You can't always know exactly where to be, but you can keep active in places where something might happen. And even if you believe that great science is a matter of luck, you can stand on a mountain top where lightning strikes; you don't have to hide in the valley where you're safe. But the average scientist does routine safe work almost all the time and so he (or she) doesn't produce much. It's that simple. If you want to do great work, you clearly must work on important problems, and you should have an idea.Along those lines at some urging from John Tukey and others, I finally adopted what I called \"Great Thoughts Time.\" When I went to lunch Friday noon, I would only discuss great thoughts after that. By great thoughts I mean ones like: \"What will be the role of computers in all of AT&T?\", \"How will computers change science?\" For example, I came up with the observation at that time that nine out of ten experiments were done in the lab and one in ten on the computer. I made a remark to the vice presidents one time, that it would be reversed, i.e. nine out of ten experiments would be done on the computer and one in ten in the lab. They knew I was a crazy mathematician and had no sense of reality. I knew they were wrong and they've been proved wrong while I have been proved right. They built laboratories when they didn't need them. I saw that computers were transforming science because I spent a lot of time asking \"What will be the impact of computers on science and how can I change it?\" I asked myself, \"How is it going to change Bell Labs?\" I remarked one time, in the same address, that more than one-half of the people at Bell Labs will be interacting closely with computing machines before I leave. Well, you all have terminals now. I thought hard about where was my field going, where were the opportunities, and what were the important things to do. Let me go there so there is a chance I can do important things.Most great scientists know many important problems. They have something between 10 and 20 important problems for which they are looking for an attack. And when they see a new idea come up, one hears them say \"Well that bears on this problem.\" They drop all the other things and get after it. Now I can tell you a horror story that was told to me but I can't vouch for the truth of it. I was sitting in an airport talking to a friend of mine from Los Alamos about how it was lucky that the fission experiment occurred over in Europe when it did because that got us working on the atomic bomb here in the US. He said \"No; at Berkeley we had gathered a bunch of data; we didn't get around to reducing it because we were building some more equipment, but if we had reduced that data we would have found fission.\" They had it in their hands and they didn't pursue it. They came in second!The great scientists, when an opportunity opens up, get after it and they pursue it. They drop all other things. They get rid of other things and they get after an idea because they had already thought the thing through. Their minds are prepared; they see the opportunity and they go after it. Now of course lots of times it doesn't work out, but you don't have to hit many of them to do some great science. It's kind of easy. One of the chief tricks is to live a long time!Another trait, it took me a while to notice. I noticed the following facts about people who work with the door open or the door closed. I notice that if you have the door to your office closed, you get more work done today and tomorrow, and you are more productive than most. But 10 years later somehow you don't know quite know what problems are worth working on; all the hard work you do is sort of tangential in importance. He who works with the door open gets all kinds of interruptions, but he also occasionally gets clues as to what the world is and what might be important. Now I cannot prove the cause and effect sequence because you might say, \"The closed door is symbolic of a closed mind.\" I don't know. But I can say there is a pretty good correlation between those who work with the doors open and those who ultimately do important things, although people who work with doors closed often work harder. Somehow they seem to work on slightly the wrong thing — not much, but enough that they miss fame.I want to talk on another topic. It is based on the song which I think many of you know, \"It ain't what you do, it's the way that you do it.\" I'll start with an example of my own. I was conned into doing on a digital computer, in the absolute binary days, a problem which the best analog computers couldn't do. And I was getting an answer. When I thought carefully and said to myself, \"You know, Hamming, you're going to have to file a report on this military job; after you spend a lot of money you're going to have to account for it and every analog installation is going to want the report to see if they can't find flaws in it.\" I was doing the required integration by a rather crummy method, to say the least, but I was getting the answer. And I realized that in truth the problem was not just to get the answer; it was to demonstrate for the first time, and beyond question, that I could beat the analog computer on its own ground with a digital machine. I reworked the method of solution, created a theory which was nice and elegant, and changed the way we computed the answer; the results were no different. The published report had an elegant method which was later known for years as \"Hamming's Method of Integrating Differential Equations.\" It is somewhat obsolete now, but for a while it was a very good method. By changing the problem slightly, I did important work rather than trivial work.In the same way, when using the machine up in the attic in the early days, I was solving one problem after another after another; a fair number were successful and there were a few failures. I went home one Friday after finishing a problem, and curiously enough I wasn't happy; I was depressed. I could see life being a long sequence of one problem after another after another. After quite a while of thinking I decided, \"No, I should be in the mass production of a variable product. I should be concerned with all of next year's problems, not just the one in front of my face.\" By changing the question I still got the same kind of results or better, but I changed things and did important work. I attacked the major problem — How do I conquer machines and do all of next year's problems when I don't know what they are going to be? How do I prepare for it? How do I do this one so I'll be on top of it? How do I obey Newton's rule? He said, \"If I have seen further than others, it is because I've stood on the shoulders of giants.\" These days we stand on each other's feet!You should do your job in such a fashion that others can build on top of it, so they will indeed say, \"Yes, I've stood on so and so's shoulders and I saw further.\" The essence of science is cumulative. By changing a problem slightly you can often do great work rather than merely good work. Instead of attacking isolated problems, I made the resolution that I would never again solve an isolated problem except as characteristic of a class.Now if you are much of a mathematician you know that the effort to generalize often means that the solution is simple. Often by stopping and saying, \"This is the problem he wants but this is characteristic of so and so. Yes, I can attack the whole class with a far superior method than the particular one because I was earlier embedded in needless detail.\" The business of abstraction frequently makes things simple. Furthermore, I filed away the methods and prepared for the future problems.To end this part, I'll remind you, \"It is a poor workman who blames his tools — the good man gets on with the job, given what he's got, and gets the best answer he can.\" And I suggest that by altering the problem, by looking at the thing differently, you can make a great deal of difference in your final productivity because you can either do it in such a fashion that people can indeed build on what you've done, or you can do it in such a fashion that the next person has to essentially duplicate again what you've done. It isn't just a matter of the job, it's the way you write the report, the way you write the paper, the whole attitude. It's just as easy to do a broad, general job as one very special case. And it's much more satisfying and rewarding!I have now come down to a topic which is very distasteful; it is not sufficient to do a job, you have to sell it. \"Selling\" to a scientist is an awkward thing to do. It's very ugly; you shouldn't have to do it. The world is supposed to be waiting, and when you do something great, they should rush out and welcome it. But the fact is everyone is busy with their own work. You must present it so well that they will set aside what they are doing, look at what you've done, read it, and come back and say, \"Yes, that was good.\" I suggest that when you open a journal, as you turn the pages, you ask why you read some articles and not others. You had better write your report so when it is published in the Physical Review, or wherever else you want it, as the readers are turning the pages they won't just turn your pages but they will stop and read yours. If they don't stop and read it, you won't get credit.There are three things you have to do in selling. You have to learn to write clearly and well so that people will read it, you must learn to give reasonably formal talks, and you also must learn to give informal talks. We had a lot of so-called `back room scientists.' In a conference, they would keep quiet. Three weeks later after a decision was made they filed a report saying why you should do so and so. Well, it was too late. They would not stand up right in the middle of a hot conference, in the middle of activity, and say, \"We should do this for these reasons.\" You need to master that form of communication as well as prepared speeches.When I first started, I got practically physically ill while giving a speech, and I was very, very nervous. I realized I either had to learn to give speeches smoothly or I would essentially partially cripple my whole career. The first time IBM asked me to give a speech in New York one evening, I decided I was going to give a really good speech, a speech that was wanted, not a technical one but a broad one, and at the end if they liked it, I'd quietly say, \"Any time you want one I'll come in and give you one.\" As a result, I got a great deal of practice giving speeches to a limited audience and I got over being afraid. Furthermore, I could also then study what methods were effective and what were ineffective.While going to meetings I had already been studying why some papers are remembered and most are not. The technical person wants to give a highly limited technical talk. Most of the time the audience wants a broad general talk and wants much more survey and background than the speaker is willing to give. As a result, many talks are ineffective. The speaker names a topic and suddenly plunges into the details he's solved. Few people in the audience may follow. You should paint a general picture to say why it's important, and then slowly give a sketch of what was done. Then a larger number of people will say, \"Yes, Joe has done that,\" or \"Mary has done that; I really see where it is; yes, Mary really gave a good talk; I understand what Mary has done.\" The tendency is to give a highly restricted, safe talk; this is usually ineffective. Furthermore, many talks are filled with far too much information. So I say this idea of selling is obvious.Let me summarize. You've got to work on important problems. I deny that it is all luck, but I admit there is a fair element of luck. I subscribe to Pasteur's \"Luck favors the prepared mind.\" I favor heavily what I did. Friday afternoons for years — great thoughts only — means that I committed 10% of my time trying to understand the bigger problems in the field, i.e. what was and what was not important. I found in the early days I had believed `this' and yet had spent all week marching in `that' direction. It was kind of foolish. If I really believe the action is over there, why do I march in this direction? I either had to change my goal or change what I did. So I changed something I did and I marched in the direction I thought was important. It's that easy.Now you might tell me you haven't got control over what you have to work on. Well, when you first begin, you may not. But once you're moderately successful, there are more people asking for results than you can deliver and you have some power of choice, but not completely. I'll tell you a story about that, and it bears on the subject of educating your boss. I had a boss named Schelkunoff; he was, and still is, a very good friend of mine. Some military person came to me and demanded some answers by Friday. Well, I had already dedicated my computing resources to reducing data on the fly for a group of scientists; I was knee deep in short, small, important problems. This military person wanted me to solve his problem by the end of the day on Friday. I said, \"No, I'll give it to you Monday. I can work on it over the weekend. I'm not going to do it now.\" He goes down to my boss, Schelkunoff, and Schelkunoff says, \"You must run this for him; he's got to have it by Friday.\" I tell him, \"Why do I?\" He says, \"You have to.\" I said, \"Fine, Sergei, but you're sitting in your office Friday afternoon catching the late bus home to watch as this fellow walks out that door.\" I gave the military person the answers late Friday afternoon. I then went to Schelkunoff's office and sat down; as the man goes out I say, \"You see Schelkunoff, this fellow has nothing under his arm; but I gave him the answers.\" On Monday morning Schelkunoff called him up and said, \"Did you come in to work over the weekend?\" I could hear, as it were, a pause as the fellow ran through his mind of what was going to happen; but he knew he would have had to sign in, and he'd better not say he had when he hadn't, so he said he hadn't. Ever after that Schelkunoff said, \"You set your deadlines; you can change them.\"One lesson was sufficient to educate my boss as to why I didn't want to do big jobs that displaced exploratory research and why I was justified in not doing crash jobs which absorb all the research computing facilities. I wanted instead to use the facilities to compute a large number of small problems. Again, in the early days, I was limited in computing capacity and it was clear, in my area, that a \"mathematician had no use for machines.\" But I needed more machine capacity. Every time I had to tell some scientist in some other area, \"No I can't; I haven't the machine capacity,\" he complained. I said \"Go tell your Vice President that Hamming needs more computing capacity.\" After a while I could see what was happening up there at the top; many people said to my Vice President, \"Your man needs more computing capacity.\" I got it!I also did a second thing. When I loaned what little programming power we had to help in the early days of computing, I said, \"We are not getting the recognition for our programmers that they deserve. When you publish a paper you will thank that programmer or you aren't getting any more help from me. That programmer is going to be thanked by name; she's worked hard.\" I waited a couple of years. I then went through a year of BSTJ articles and counted what fraction thanked some programmer. I took it into the boss and said, \"That's the central role computing is playing in Bell Labs; if the BSTJ is important, that's how important computing is.\" He had to give in. You can educate your bosses. It's a hard job. In this talk I'm only viewing from the bottom up; I'm not viewing from the top down. But I am telling you how you can get what you want in spite of top management. You have to sell your ideas there also.Well I now come down to the topic, \"Is the effort to be a great scientist worth it?\" To answer this, you must ask people. When you get beyond their modesty, most people will say, \"Yes, doing really first-class work, and knowing it, is as good as wine, women and song put together,\" or if it's a woman she says, \"It is as good as wine, men and song put together.\" And if you look at the bosses, they tend to come back or ask for reports, trying to participate in those moments of discovery. They're always in the way. So evidently those who have done it, want to do it again. But it is a limited survey. I have never dared to go out and ask those who didn't do great work how they felt about the matter. It's a biased sample, but I still think it is worth the struggle. I think it is very definitely worth the struggle to try and do first-class work because the truth is, the value is in the struggle more than it is in the result. The struggle to make something of yourself seems to be worthwhile in itself. The success and fame are sort of dividends, in my opinion.I've told you how to do it. It is so easy, so why do so many people, with all their talents, fail? For example, my opinion, to this day, is that there are in the mathematics department at Bell Labs quite a few people far more able and far better endowed than I, but they didn't produce as much. Some of them did produce more than I did; Shannon produced more than I did, and some others produced a lot, but I was highly productive against a lot of other fellows who were better equipped. Why is it so? What happened to them? Why do so many of the people who have great promise, fail?Well, one of the reasons is drive and commitment. The people who do great work with less ability but who are committed to it, get more done that those who have great skill and dabble in it, who work during the day and go home and do other things and come back and work the next day. They don't have the deep commitment that is apparently necessary for really first-class work. They turn out lots of good work, but we were talking, remember, about first-class work. There is a difference. Good people, very talented people, almost always turn out good work. We're talking about the outstanding work, the type of work that gets the Nobel Prize and gets recognition.The second thing is, I think, the problem of personality defects. Now I'll cite a fellow whom I met out in Irvine. He had been the head of a computing center and he was temporarily on assignment as a special assistant to the president of the university. It was obvious he had a job with a great future. He took me into his office one time and showed me his method of getting letters done and how he took care of his correspondence. He pointed out how inefficient the secretary was. He kept all his letters stacked around there; he knew where everything was. And he would, on his word processor, get the letter out. He was bragging how marvelous it was and how he could get so much more work done without the secretary's interference. Well, behind his back, I talked to the secretary. The secretary said, \"Of course I can't help him; I don't get his mail. He won't give me the stuff to log in; I don't know where he puts it on the floor. Of course I can't help him.\" So I went to him and said, \"Look, if you adopt the present method and do what you can do single-handedly, you can go just that far and no farther than you can do single-handedly. If you will learn to work with the system, you can go as far as the system will support you.\" And, he never went any further. He had his personality defect of wanting total control and was not willing to recognize that you need the support of the system.You find this happening again and again; good scientists will fight the system rather than learn to work with the system and take advantage of all the system has to offer. It has a lot, if you learn how to use it. It takes patience, but you can learn how to use the system pretty well, and you can learn how to get around it. After all, if you want a decision `No', you just go to your boss and get a `No' easy. If you want to do something, don't ask, do it. Present him with an accomplished fact. Don't give him a chance to tell you `No'. But if you want a `No', it's easy to get a `No'.Another personality defect is ego assertion and I'll speak in this case of my own experience. I came from Los Alamos and in the early days I was using a machine in New York at 590 Madison Avenue where we merely rented time. I was still dressing in western clothes, big slash pockets, a bolo and all those things. I vaguely noticed that I was not getting as good service as other people. So I set out to measure. You came in and you waited for your turn; I felt I was not getting a fair deal. I said to myself, \"Why? No Vice President at IBM said, `Give Hamming a bad time'. It is the secretaries at the bottom who are doing this. When a slot appears, they'll rush to find someone to slip in, but they go out and find somebody else. Now, why? I haven't mistreated them.\" Answer: I wasn't dressing the way they felt somebody in that situation should. It came down to just that — I wasn't dressing properly. I had to make the decision — was I going to assert my ego and dress the way I wanted to and have it steadily drain my effort from my professional life, or was I going to appear to conform better? I decided I would make an effort to appear to conform properly. The moment I did, I got much better service. And now, as an old colorful character, I get better service than other people.You should dress according to the expectations of the audience spoken to. If I am going to give an address at the MIT computer center, I dress with a bolo and an old corduroy jacket or something else. I know enough not to let my clothes, my appearance, my manners get in the way of what I care about. An enormous number of scientists feel they must assert their ego and do their thing their way. They have got to be able to do this, that, or the other thing, and they pay a steady price.John Tukey almost always dressed very casually. He would go into an important office and it would take a long time before the other fellow realized that this is a first-class man and he had better listen. For a long time John has had to overcome this kind of hostility. It's wasted effort! I didn't say you should conform; I said \"The appearance of conforming gets you a long way.\" If you chose to assert your ego in any number of ways, \"I am going to do it my way,\" you pay a small steady price throughout the whole of your professional career. And this, over a whole lifetime, adds up to an enormous amount of needless trouble.By taking the trouble to tell jokes to the secretaries and being a little friendly, I got superb secretarial help. For instance, one time for some idiot reason all the reproducing services at Murray Hill were tied up. Don't ask me how, but they were. I wanted something done. My secretary called up somebody at Holmdel, hopped the company car, made the hour-long trip down and got it reproduced, and then came back. It was a payoff for the times I had made an effort to cheer her up, tell her jokes and be friendly; it was that little extra work that later paid off for me. By realizing you have to use the system and studying how to get the system to do your work, you learn how to adapt the system to your desires. Or you can fight it steadily, as a small undeclared war, for the whole of your life.And I think John Tukey paid a terrible price needlessly. He was a genius anyhow, but I think it would have been far better, and far simpler, had he been willing to conform a little bit instead of ego asserting. He is going to dress the way he wants all of the time. It applies not only to dress but to a thousand other things; people will continue to fight the system. Not that you shouldn't occasionally!When they moved the library from the middle of Murray Hill to the far end, a friend of mine put in a request for a bicycle. Well, the organization was not dumb. They waited awhile and sent back a map of the grounds saying, \"Will you please indicate on this map what paths you are going to take so we can get an insurance policy covering you.\" A few more weeks went by. They then asked, \"Where are you going to store the bicycle and how will it be locked so we can do so and so.\" He finally realized that of course he was going to be red-taped to death so he gave in. He rose to be the President of Bell Laboratories.Barney Oliver was a good man. He wrote a letter one time to the IEEE. At that time the official shelf space at Bell Labs was so much and the height of the IEEE Proceedings at that time was larger; and since you couldn't change the size of the official shelf space he wrote this letter to the IEEE Publication person saying, since so many IEEE members were at Bell Labs and since the official space was so high the journal size should be changed. He sent it for his boss's signature. Back came a carbon with his signature, but he still doesn't know whether the original was sent or not. I am not saying you shouldn't make gestures of reform. I am saying that my study of able people is that they don't get themselves committed to that kind of warfare. They play it a little bit and drop it and get on with their work.Many a second-rate fellow gets caught up in some little twitting of the system, and carries it through to warfare. He expends his energy in a foolish project. Now you are going to tell me that somebody has to change the system. I agree; somebody's has to. Which do you want to be? The person who changes the system or the person who does first-class science? Which person is it that you want to be? Be clear, when you fight the system and struggle with it, what you are doing, how far to go out of amusement, and how much to waste your effort fighting the system. My advice is to let somebody else do it and you get on with becoming a first-class scientist. Very few of you have the ability to both reform the system and become a first-class scientist.On the other hand, we can't always give in. There are times when a certain amount of rebellion is sensible. I have observed almost all scientists enjoy a certain amount of twitting the system for the sheer love of it. What it comes down to basically is that you cannot be original in one area without having originality in others. Originality is being different. You can't be an original scientist without having some other original characteristics. But many a scientist has let his quirks in other places make him pay a far higher price than is necessary for the ego satisfaction he or she gets. I'm not against all ego assertion; I'm against some.Another fault is anger. Often a scientist becomes angry, and this is no way to handle things. Amusement, yes, anger, no. Anger is misdirected. You should follow and cooperate rather than struggle against the system all the time.Another thing you should look for is the positive side of things instead of the negative. I have already given you several examples, and there are many, many more; how, given the situation, by changing the way I looked at it, I converted what was apparently a defect to an asset. I'll give you another example. I am an egotistical person; there is no doubt about it. I knew that most people who took a sabbatical to write a book, didn't finish it on time. So before I left, I told all my friends that when I come back, that book was going to be done! Yes, I would have it done — I'd have been ashamed to come back without it! I used my ego to make myself behave the way I wanted to. I bragged about something so I'd have to perform. I found out many times, like a cornered rat in a real trap, I was surprisingly capable. I have found that it paid to say, ``Oh yes, I'll get the answer for you Tuesday,'' not having any idea how to do it. By Sunday night I was really hard thinking on how I was going to deliver by Tuesday. I often put my pride on the line and sometimes I failed, but as I said, like a cornered rat I'm surprised how often I did a good job. I think you need to learn to use yourself. I think you need to know how to convert a situation from one view to another which would increase the chance of success.Now self-delusion in humans is very, very common. There are innumerable ways of you changing a thing and kidding yourself and making it look some other way. When you ask, \"Why didn't you do such and such,\" the person has a thousand alibis. If you look at the history of science, usually these days there are ten people right there ready, and we pay off for the person who is there first. The other nine fellows say, \"Well, I had the idea but I didn't do it and so on and so on.\" There are so many alibis. Why weren't you first? Why didn't you do it right? Don't try an alibi. Don't try and kid yourself. You can tell other people all the alibis you want. I don't mind. But to yourself try to be honest.If you really want to be a first-class scientist you need to know yourself, your weaknesses, your strengths, and your bad faults, like my egotism. How can you convert a fault to an asset? How can you convert a situation where you haven't got enough manpower to move into a direction when that's exactly what you need to do? I say again that I have seen, as I studied the history, the successful scientist changed the viewpoint and what was a defect became an asset.In summary, I claim that some of the reasons why so many people who have greatness within their grasp don't succeed are: they don't work on important problems, they don't become emotionally involved, they don't try and change what is difficult to some other situation which is easily done but is still important, and they keep giving themselves alibis why they don't. They keep saying that it is a matter of luck. I've told you how easy it is; furthermore I've told you how to reform. Therefore, go forth and become great scientists!Questions and AnswersA. G. Chynoweth: Well that was 50 minutes of concentrated wisdom and observations accumulated over a fantastic career; I lost track of all the observations that were striking home. Some of them are very very timely. One was the plea for more computer capacity; I was hearing nothing but that this morning from several people, over and over again. So that was right on the mark today even though here we are 20 – 30 years after when you were making similar remarks, Dick. I can think of all sorts of lessons that all of us can draw from your talk. And for one, as I walk around the halls in the future I hope I won't see as many closed doors in Bellcore. That was one observation I thought was very intriguing.Thank you very, very much indeed Dick; that was a wonderful recollection. I'll now open it up for questions. I'm sure there are many people who would like to take up on some of the points that Dick was making.Hamming: First let me respond to Alan Chynoweth about computing. I had computing in research and for 10 years I kept telling my management, ``Get that !&@#% machine out of research. We are being forced to run problems all the time. We can't do research because were too busy operating and running the computing machines.'' Finally the message got through. They were going to move computing out of research to someplace else. I was persona non grata to say the least and I was surprised that people didn't kick my shins because everybody was having their toy taken away from them. I went in to Ed David's office and said, ``Look Ed, you've got to give your researchers a machine. If you give them a great big machine, we'll be back in the same trouble we were before, so busy keeping it going we can't think. Give them the smallest machine you can because they are very able people. They will learn how to do things on a small machine instead of mass computing.'' As far as I'm concerned, that's how UNIX arose. We gave them a moderately small machine and they decided to make it do great things. They had to come up with a system to do it on. It is called UNIX!A. G. Chynoweth: I just have to pick up on that one. In our present environment, Dick, while we wrestle with some of the red tape attributed to, or required by, the regulators, there is one quote that one exasperated AVP came up with and I've used it over and over again. He growled that, \"UNIX was never a deliverable!\"Question: What about personal stress? Does that seem to make a difference?Hamming: Yes, it does. If you don't get emotionally involved, it doesn't. I had incipient ulcers most of the years that I was at Bell Labs. I have since gone off to the Naval Postgraduate School and laid back somewhat, and now my health is much better. But if you want to be a great scientist you're going to have to put up with stress. You can lead a nice life; you can be a nice guy or you can be a great scientist. But nice guys end last, is what Leo Durocher said. If you want to lead a nice happy life with a lot of recreation and everything else, you'll lead a nice life.Question: The remarks about having courage, no one could argue with; but those of us who have gray hairs or who are well established don't have to worry too much. But what I sense among the young people these days is a real concern over the risk taking in a highly competitive environment. Do you have any words of wisdom on this?Hamming: I'll quote Ed David more. Ed David was concerned about the general loss of nerve in our society. It does seem to me that we've gone through various periods. Coming out of the war, coming out of Los Alamos where we built the bomb, coming out of building the radars and so on, there came into the mathematics department, and the research area, a group of people with a lot of guts. They've just seen things done; they've just won a war which was fantastic. We had reasons for having courage and therefore we did a great deal. I can't arrange that situation to do it again. I cannot blame the present generation for not having it, but I agree with what you say; I just cannot attach blame to it. It doesn't seem to me they have the desire for greatness; they lack the courage to do it. But we had, because we were in a favorable circumstance to have it; we just came through a tremendously successful war. In the war we were looking very, very bad for a long while; it was a very desperate struggle as you well know. And our success, I think, gave us courage and self confidence; that's why you see, beginning in the late forties through the fifties, a tremendous productivity at the labs which was stimulated from the earlier times. Because many of us were earlier forced to learn other things — we were forced to learn the things we didn't want to learn, we were forced to have an open door — and then we could exploit those things we learned. It is true, and I can't do anything about it; I cannot blame the present generation either. It's just a fact.Question: Is there something management could or should do?Hamming: Management can do very little. If you want to talk about managing research, that's a totally different talk. I'd take another hour doing that. This talk is about how the individual gets very successful research done in spite of anything the management does or in spite of any other opposition. And how do you do it? Just as I observe people doing it. It's just that simple and that hard!Question: Is brainstorming a daily process?Hamming: Once that was a very popular thing, but it seems not to have paid off. For myself I find it desirable to talk to other people; but a session of brainstorming is seldom worthwhile. I do go in to strictly talk to somebody and say, \"Look, I think there has to be something here. Here's what I think I see ...\" and then begin talking back and forth. But you want to pick capable people. To use another analogy, you know the idea called the `critical mass.' If you have enough stuff you have critical mass. There is also the idea I used to call `sound absorbers'. When you get too many sound absorbers, you give out an idea and they merely say, \"Yes, yes, yes.\" What you want to do is get that critical mass in action; \"Yes, that reminds me of so and so,\" or, \"Have you thought about that or this?\" When you talk to other people, you want to get rid of those sound absorbers who are nice people but merely say, \"Oh yes,\" and to find those who will stimulate you right back.For example, you couldn't talk to John Pierce without being stimulated very quickly. There were a group of other people I used to talk with. For example there was Ed Gilbert; I used to go down to his office regularly and ask him questions and listen and come back stimulated. I picked my people carefully with whom I did or whom I didn't brainstorm because the sound absorbers are a curse. They are just nice guys; they fill the whole space and they contribute nothing except they absorb ideas and the new ideas just die away instead of echoing on. Yes, I find it necessary to talk to people. I think people with closed doors fail to do this so they fail to get their ideas sharpened, such as \"Did you ever notice something over here?\" I never knew anything about it — I can go over and look. Somebody points the way. On my visit here, I have already found several books that I must read when I get home. I talk to people and ask questions when I think they can answer me and give me clues that I do not know about. I go out and look!Question: What kind of tradeoffs did you make in allocating your time for reading and writing and actually doing research?Hamming: I believed, in my early days, that you should spend at least as much time in the polish and presentation as you did in the original research. Now at least 50% of the time must go for the presentation. It's a big, big number.Question: How much effort should go into library work?Hamming: It depends upon the field. I will say this about it. There was a fellow at Bell Labs, a very, very, smart guy. He was always in the library; he read everything. If you wanted references, you went to him and he gave you all kinds of references. But in the middle of forming these theories, I formed a proposition: there would be no effect named after him in the long run. He is now retired from Bell Labs and is an Adjunct Professor. He was very valuable; I'm not questioning that. He wrote some very good Physical Review articles; but there's no effect named after him because he read too much. If you read all the time what other people have done you will think the way they thought. If you want to think new thoughts that are different, then do what a lot of creative people do — get the problem reasonably clear and then refuse to look at any answers until you've thought the problem through carefully how you would do it, how you could slightly change the problem to be the correct one. So yes, you need to keep up. You need to keep up more to find out what the problems are than to read to find the solutions. The reading is necessary to know what is going on and what is possible. But reading to get the solutions does not seem to be the way to do great research. So I'll give you two answers. You read; but it is not the amount, it is the way you read that counts.Question: How do you get your name attached to things?Hamming: By doing great work. I'll tell you the hamming window one. I had given Tukey a hard time, quite a few times, and I got a phone call from him from Princeton to me at Murray Hill. I knew that he was writing up power spectra and he asked me if I would mind if he called a certain window a \"hamming window.\" And I said to him, \"Come on, John; you know perfectly well I did only a small part of the work but you also did a lot.\" He said, \"Yes, Hamming, but you contributed a lot of small things; you're entitled to some credit.\" So he called it the hamming window. Now, let me go on. I had twitted John frequently about true greatness. I said true greatness is when your name is like ampere, watt, and fourier — when it's spelled with a lower case letter. That's how the hamming window came about.Question: Dick, would you care to comment on the relative effectiveness between giving talks, writing papers, and writing books?Hamming: In the short-haul, papers are very important if you want to stimulate someone tomorrow. If you want to get recognition long-haul, it seems to me writing books is more contribution because most of us need orientation. In this day of practically infinite knowledge, we need orientation to find our way. Let me tell you what infinite knowledge is. Since from the time of Newton to now, we have come close to doubling knowledge every 17 years, more or less. And we cope with that, essentially, by specialization. In the next 340 years at that rate, there will be 20 doublings, i.e. a million, and there will be a million fields of specialty for every one field now. It isn't going to happen. The present growth of knowledge will choke itself off until we get different tools. I believe that books which try to digest, coordinate, get rid of the duplication, get rid of the less fruitful methods and present the underlying ideas clearly of what we know now, will be the things the future generations will value. Public talks are necessary; private talks are necessary; written papers are necessary. But I am inclined to believe that, in the long-haul, books which leave out what's not essential are more important than books which tell you everything because you don't want to know everything. I don't want to know that much about penguins is the usual reply. You just want to know the essence.Question: You mentioned the problem of the Nobel Prize and the subsequent notoriety of what was done to some of the careers. Isn't that kind of a much more broad problem of fame? What can one do?Hamming: Some things you could do are the following. Somewhere around every seven years make a significant, if not complete, shift in your field. Thus, I shifted from numerical analysis, to hardware, to software, and so on, periodically, because you tend to use up your ideas. When you go to a new field, you have to start over as a baby. You are no longer the big mukity muk and you can start back there and you can start planting those acorns which will become the giant oaks. Shannon, I believe, ruined himself. In fact when he left Bell Labs, I said, \"That's the end of Shannon's scientific career.\" I received a lot of flak from my friends who said that Shannon was just as smart as ever. I said, \"Yes, he'll be just as smart, but that's the end of his scientific career,\" and I truly believe it was.You have to change. You get tired after a while; you use up your originality in one field. You need to get something nearby. I'm not saying that you shift from music to theoretical physics to English literature; I mean within your field you should shift areas so that you don't go stale. You couldn't get away with forcing a change every seven years, but if you could, I would require a condition for doing research, being that you will change your field of research every seven years with a reasonable definition of what it means, or at the end of 10 years, management has the right to compel you to change. I would insist on a change because I'm serious. What happens to the old fellows is that they get a technique going; they keep on using it. They were marching in that direction which was right then, but the world changes. There's the new direction; but the old fellows are still marching in their former direction.You need to get into a new field to get new viewpoints, and before you use up all the old ones. You can do something about this, but it takes effort and energy. It takes courage to say, ``Yes, I will give up my great reputation.'' For example, when error correcting codes were well launched, having these theories, I said, \"Hamming, you are going to quit reading papers in the field; you are going to ignore it completely; you are going to try and do something else other than coast on that.\" I deliberately refused to go on in that field. I wouldn't even read papers to try to force myself to have a chance to do something else. I managed myself, which is what I'm preaching in this whole talk. Knowing many of my own faults, I manage myself. I have a lot of faults, so I've got a lot of problems, i.e. a lot of possibilities of management.Question: Would you compare research and management?Hamming: If you want to be a great researcher, you won't make it being president of the company. If you want to be president of the company, that's another thing. I'm not against being president of the company. I just don't want to be. I think Ian Ross does a good job as President of Bell Labs. I'm not against it; but you have to be clear on what you want. Furthermore, when you're young, you may have picked wanting to be a great scientist, but as you live longer, you may change your mind. For instance, I went to my boss, Bode, one day and said, \"Why did you ever become department head? Why didn't you just be a good scientist?\" He said, \"Hamming, I had a vision of what mathematics should be in Bell Laboratories. And I saw if that vision was going to be realized, I had to make it happen; I had to be department head.\" When your vision of what you want to do is what you can do single-handedly, then you should pursue it. The day your vision, what you think needs to be done, is bigger than what you can do single-handedly, then you have to move toward management. And the bigger the vision is, the farther in management you have to go. If you have a vision of what the whole laboratory should be, or the whole Bell System, you have to get there to make it happen. You can't make it happen from the bottom very easily. It depends upon what goals and what desires you have. And as they change in life, you have to be prepared to change. I chose to avoid management because I preferred to do what I could do single-handedly. But that's the choice that I made, and it is biased. Each person is entitled to their choice. Keep an open mind. But when you do choose a path, for heaven's sake be aware of what you have done and the choice you have made. Don't try to do both sides.Question: How important is one's own expectation or how important is it to be in a group or surrounded by people who expect great work from you?Hamming: At Bell Labs everyone expected good work from me — it was a big help. Everybody expects you to do a good job, so you do, if you've got pride. I think it's very valuable to have first-class people around. I sought out the best people. The moment that physics table lost the best people, I left. The moment I saw that the same was true of the chemistry table, I left. I tried to go with people who had great ability so I could learn from them and who would expect great results out of me. By deliberately managing myself, I think I did much better than laissez faire.Question: You, at the outset of your talk, minimized or played down luck; but you seemed also to gloss over the circumstances that got you to Los Alamos, that got you to Chicago, that got you to Bell Laboratories.Hamming: There was some luck. On the other hand I don't know the alternate branches. Until you can say that the other branches would not have been equally or more successful, I can't say. Is it luck the particular thing you do? For example, when I met Feynman at Los Alamos, I knew he was going to get a Nobel Prize. I didn't know what for. But I knew darn well he was going to do great work. No matter what directions came up in the future, this man would do great work. And sure enough, he did do great work. It isn't that you only do a little great work at this circumstance and that was luck, there are many opportunities sooner or later. There are a whole pail full of opportunities, of which, if you're in this situation, you seize one and you're great over there instead of over here. There is an element of luck, yes and no. Luck favors a prepared mind; luck favors a prepared person. It is not guaranteed; I don't guarantee success as being absolutely certain. I'd say luck changes the odds, but there is some definite control on the part of the individual.Go forth, then, and do great work!",
      "tags": [
        "favorites",
        "self-improvement"
      ]
    },
    {
      "id": "c49e4bc1-b3df-4055-9083-1181663fc11e",
      "title": "Good and Bad Procrastination",
      "url": "https://paulgraham.com/procrastination.html",
      "savedAt": "2024-06-18T00:27:14.000Z",
      "description": "December 2005The most impressive people I know are all terrible procrastinators.\nSo could it be that procrastination isn't always bad?Most people who write about procrastination write about how to cure\nit.  But this is, strictly speaking, impossible.  There are an\ninfinite number of things you could be doing.  No matter what you\nwork on, you're not working on everything else.  So the question\nis not how to avoid procrastination, but how to procrastinate well.There are three variants of procrastination, depending on what you\ndo instead of working on something: you could work on (a) nothing,\n(b) something less important, or (c) something more important.  That\nlast type, I'd argue, is good procrastination.That's the \"absent-minded professor,\" who forgets to shave, or eat,\nor even perhaps look where he's going while he's thinking about\nsome interesting question.   His mind is absent from the everyday\nworld because it's hard at work in another.That's the sense in which the most impressive people I know are all\nprocrastinators.  They're type-C procrastinators:  they put off\nworking on small stuff to work on big stuff.What's \"small stuff?\"  Roughly, work that has zero chance of being\nmentioned in your obituary.  It's hard to say at the time what will\nturn out to be your best work (will it be your magnum opus on\nSumerian temple architecture, or the detective thriller you wrote\nunder a pseudonym?), but there's a whole class of tasks you can\nsafely rule out: shaving, doing your laundry, cleaning the house,\nwriting thank-you notes—anything that might be called an errand.Good procrastination is avoiding errands to do real work.Good in a sense, at least.  The people who want you to do the errands\nwon't think it's good.  But you probably have to annoy them if you\nwant to get anything done.  The mildest seeming people, if they\nwant to do real work, all have a certain degree of ruthlessness\nwhen it comes to avoiding errands.Some errands, like replying to letters, go away if you\nignore them (perhaps taking friends with them).  Others, like mowing\nthe lawn, or filing tax returns, only get worse if you put them\noff.  In principle it shouldn't work to put off the second kind of\nerrand.  You're going to have to do whatever it is eventually.  Why\nnot (as past-due notices are always saying) do it now?The reason it pays to put off even those errands is that real work\nneeds two things errands don't: big chunks of time, and the\nright mood.  If you get inspired by some project, it can be a net\nwin to blow off everything you were supposed to do for the next few\ndays to work on it.  Yes, those errands may cost you more time when\nyou finally get around to them.  But if you get a lot done during\nthose few days, you will be net more productive.In fact, it may not be a difference in degree, but a difference in\nkind.  There may be types of work that can only be done in long,\nuninterrupted stretches, when inspiration hits, rather than dutifully\nin scheduled little slices.  Empirically it seems to be so.  When\nI think of the people I know who've done great things, I don't\nimagine them dutifully crossing items off to-do lists.  I imagine\nthem sneaking off to work on some new idea.Conversely, forcing someone to perform errands synchronously is\nbound to limit their productivity.  The cost of an interruption is\nnot just the time it takes, but that it breaks the time on either\nside in half.  You probably only have to interrupt someone a couple\ntimes a day before they're unable to work on hard problems at all.I've wondered a lot about why \nstartups are most productive at the\nvery beginning, when they're just a couple guys in an apartment.\nThe main reason may be that there's no one to interrupt them yet.\nIn theory it's good when the founders finally get enough money to\nhire people to do some of the work for them.  But it may be better\nto be overworked than interrupted.  Once you dilute a startup with\nordinary office workers—with type-B procrastinators—the whole\ncompany starts to resonate at their frequency.  They're interrupt-driven,\nand soon you are too.Errands are so effective at killing great projects that a lot of\npeople use them for that purpose.  Someone who has decided to write\na novel, for example, will suddenly find that the house needs\ncleaning. People who fail to write novels don't do it by sitting\nin front of a blank page for days without writing anything.  They\ndo it by feeding the cat, going out to buy something they need for\ntheir apartment, meeting a friend for coffee, checking email.  \"I\ndon't have time to work,\" they say.  And they don't; they've made\nsure of that.(There's also a variant where one has no place to work.  The cure\nis to visit the places where famous people worked, and see how\nunsuitable they were.)I've used both these excuses at one time or another.  I've learned\na lot of tricks for making myself work over the last 20 years, but\neven now I don't win consistently.  Some days I get real work done.\nOther days are eaten up by errands.  And I know it's usually my\nfault: I let errands eat up the day, to avoid\nfacing some hard problem.The most dangerous form of procrastination is unacknowledged type-B\nprocrastination, because it doesn't feel like procrastination.\nYou're \"getting things done.\"  Just the wrong things.Any advice about procrastination that concentrates on crossing\nthings off your to-do list is not only incomplete, but positively\nmisleading, if it doesn't consider the possibility that the to-do\nlist is itself a form of type-B procrastination.  In fact, possibility\nis too weak a word.  Nearly everyone's is.  Unless you're working\non the biggest things you could be working on, you're type-B\nprocrastinating, no matter how much you're getting done.In his famous essay You and Your Research \n(which I recommend to\nanyone ambitious, no matter what they're working on), Richard Hamming\nsuggests that you ask yourself three questions:\n\n What are the most important problems in your field? Are you working on one of them? Why not?\n\nHamming was at Bell Labs when he started asking such questions.  In\nprinciple anyone there ought to have been able to work on the most\nimportant problems in their field.  Perhaps not everyone can make\nan equally dramatic mark on the world; I don't know; but whatever\nyour capacities, there are projects that stretch them.  So Hamming's\nexercise can be generalized to:\n\n  What's the best thing you could be working on, and why aren't\n  you?\n\nMost people will shy away from this question.  I shy away from it\nmyself; I see it there on the page and quickly move on to the next\nsentence.  Hamming used to go around actually asking people this,\nand it didn't make him popular.  But it's a question anyone ambitious\nshould face.The trouble is, you may end up hooking a very big fish with this\nbait.  To do good work, you need to do more than find good projects.\nOnce you've found them, you have to get yourself to work on them,\nand that can be hard.  The bigger the problem, the harder it is to\nget yourself to work on it.Of course, the main reason people find it difficult to work on a\nparticular problem is that they don't \nenjoy it.  When you're young,\nespecially, you often find yourself working on stuff you don't\nreally like-- because it seems impressive, for example, or because\nyou've been assigned to work on it.  Most grad students are stuck\nworking on big problems they don't really like, and grad school is\nthus synonymous with procrastination.But even when you like what you're working on, it's easier to get\nyourself to work on small problems than big ones.  Why?  Why is it\nso hard to work on big problems?  One reason is that you may not\nget any reward in the forseeable future.  If you work on something\nyou can finish in a day or two, you can expect to have a nice feeling\nof accomplishment fairly soon.  If the reward is indefinitely far\nin the future, it seems less real.Another reason people don't work on big projects is, ironically,\nfear of wasting time.  What if they fail?  Then all the time they\nspent on it will be wasted.  (In fact it probably won't be, because\nwork on hard projects almost always leads somewhere.)But the trouble with big problems can't be just that they promise\nno immediate reward and might cause you to waste a lot of time.  If\nthat were all, they'd be no worse than going to visit your in-laws.\nThere's more to it than that.  Big problems are terrifying.\nThere's an almost physical pain in facing them.  It's like having\na vacuum cleaner hooked up to your imagination.   All your initial\nideas get sucked out immediately, and you don't have any more, and\nyet the vacuum cleaner is still sucking.You can't look a big problem too directly in the eye. You have to\napproach it somewhat obliquely.  But you have to adjust the angle\njust right: you have to be facing the big problem directly enough\nthat you catch some of the excitement radiating from it, but not\nso much that it paralyzes you.  You can tighten the angle once you\nget going, just as a sailboat can sail closer to the wind once it\ngets underway.If you want to work on big things, you seem to have to trick yourself\ninto doing it.  You have to work on small things that could grow\ninto big things, or work on successively larger things, or split\nthe moral load with collaborators.  It's not a sign of weakness to\ndepend on such tricks.  The very best work has been done this way.When I talk to people who've managed to make themselves work on big\nthings, I find that all blow off errands, and all feel guilty about\nit.  I don't think they should feel guilty.  There's more to do\nthan anyone could.  So someone doing the best work they can is\ninevitably going to leave a lot of errands undone.  It seems a\nmistake to feel bad about that.I think the way to \"solve\" the problem of procrastination is to let\ndelight pull you instead of making a to-do list push you.  Work on\nan ambitious project you really enjoy, and sail as close to the\nwind as you can, and you'll leave the right things undone.Thanks to Trevor Blackwell, Jessica Livingston, and Robert\nMorris for reading drafts of this.",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "07772a78-9d02-41d3-8a2c-a2b35cbb7553",
      "title": "Ship something every day",
      "url": "https://maxleiter.com/blog/ship-every-day",
      "savedAt": "2024-06-17T01:01:12.000Z",
      "description": "Edit: A better title would've been \"commit every day that you work\". I don't mean you should work on weekends or not take time off, and\nwhatever you work on doesn't need to \"ship to prod\".",
      "tags": [
        "career"
      ]
    },
    {
      "id": "b7d2d7e4-8e02-48a4-8145-58619881dd48",
      "title": "A few words on taking notes | All Things Distributed",
      "url": "https://www.allthingsdistributed.com/2023/06/a-few-words-on-taking-notes.html",
      "savedAt": "2024-06-17T00:52:11.000Z",
      "description": "As we are about to start the planning meetings for 2024 at AWS, I’ve been thinking a lot about how I take notes.",
      "tags": [
        "note-taking"
      ]
    },
    {
      "id": "e9e21c0f-bc5e-4262-b87c-b2f105ac8fe9",
      "title": "Simple sabotage for software · Erik Bernhardsson",
      "url": "https://erikbern.com/2023/12/13/simple-sabotage-for-software.html",
      "savedAt": "2024-06-17T00:34:07.000Z",
      "description": "How to sabotage software productivity, in the style of CIA",
      "tags": [
        "career"
      ]
    },
    {
      "id": "a360cea1-0dfb-43f0-afbe-2b0014ce677c",
      "title": "Internet Search Tips · Gwern.net",
      "url": "https://gwern.net/search",
      "savedAt": "2024-06-16T20:20:17.000Z",
      "description": "A description of advanced tips and tricks for effective Internet research of papers/books, with real-world examples.",
      "tags": [
        "interesting",
        "web"
      ]
    },
    {
      "id": "b1aa7c35-9330-435b-b406-db50a653c0d0",
      "title": "(1) Do Ten Times as Much - by Bryan Caplan - Bet On It",
      "url": "https://www.betonit.ai/p/do-ten-times-as-much",
      "savedAt": "2024-06-16T15:25:57.000Z",
      "description": "Unpleasant advice that works",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "db6374f4-d751-4a22-8331-5e5b094548b6",
      "title": "Ordinary Incompetence · Gwern.net",
      "url": "https://gwern.net/note/competence",
      "savedAt": "2024-06-16T15:19:18.000Z",
      "description": "Incompetence is the norm; most people who engage in a task (even when incentivized for performance or engaging in it for countless hours) may still be making basic errors which could be remedied with coaching or deliberate practice.",
      "tags": [
        "psychology",
        "self-improvement"
      ]
    },
    {
      "id": "01d7b399-ae24-423f-849e-62d3e8888302",
      "title": "(1) So you wanna de-bog yourself - by Adam Mastroianni",
      "url": "https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself",
      "savedAt": "2024-06-16T15:17:03.000Z",
      "description": "What I found in the mire",
      "tags": [
        "for-later",
        "self-improvement"
      ]
    },
    {
      "id": "a3f1974f-d238-4623-a60f-d5d6beab77fa",
      "title": "On Having Enough Socks · Gwern.net",
      "url": "https://gwern.net/socks",
      "savedAt": "2024-06-16T14:59:53.000Z",
      "description": "Personal experience and surveys on running out of socks; discussion of socks as small example of human procrastination and irrationality, caused by lack of explicit deliberative thought where no natural triggers or habits exist.",
      "tags": [
        "favorites",
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "df80372f-9d97-40c3-b861-bb06233ae599",
      "title": "The simple genius of checklists, from B-17 to the Apollo missions | Inside Nuclino",
      "url": "https://blog.nuclino.com/the-simple-genius-of-checklists-from-b-17-to-the-apollo-missions",
      "savedAt": "2024-06-16T06:09:56.000Z",
      "description": "The year is 1935, and the U.S. Army Air Corps is holding a competition for airplane manufacturers vying to secure a contract to build the military’s...",
      "tags": [
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "746c62a8-46d8-4213-a84f-6291206e9132",
      "title": "Don’t Shave That Yak! | Seth's Blog",
      "url": "https://seths.blog/2005/03/dont_shave_that/",
      "savedAt": "2024-06-16T05:53:53.000Z",
      "description": "Seth Godin's Blog on marketing, tribes and respect",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "6174e358-2ba4-11ef-9044-ff96047c4cdb",
      "title": "2000-cook",
      "url": "https://gwern.net/doc/technology/2000-cook.pdf",
      "savedAt": "2024-06-16T05:50:55.000Z",
      "description": null,
      "tags": [
        "systems-theory"
      ]
    },
    {
      "id": "2b27f6c0-c0c7-41e0-ad44-28b649f4c552",
      "title": "Useful and Overlooked Skills · Collab Fund",
      "url": "https://collabfund.com/blog/useful-and-overlooked-skills/",
      "savedAt": "2024-06-15T19:35:52.000Z",
      "description": "On his way to be sworn in as the most powerful man in the world, Franklin Delano Roosevelt had to…",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "a4493fbb-0ccf-4167-825d-da390d74f99c",
      "title": "The Law of Leaky Abstractions – Joel on Software",
      "url": "https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/",
      "savedAt": "2024-06-15T16:35:26.000Z",
      "description": "There's a key piece of magic in the engineering of the Internet which you rely on every single day. It happens in the TCP protocol, one of the fundamental building blocks of the Internet. TCP is a way to transmit data that is reliable. By this I mean: if you send a message over a…",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "47c3df56-fef1-435f-9b24-8edf7b24feda",
      "title": "The Book of Shaders",
      "url": "https://thebookofshaders.com",
      "savedAt": "2024-06-15T14:57:11.000Z",
      "description": "Gentle step-by-step guide through the abstract and complex universe of Fragment Shaders.",
      "tags": [
        "books",
        "cs/computer-graphics"
      ]
    },
    {
      "id": "e09af48b-9a72-4fab-896d-2d4702871531",
      "title": "Exponentially Better Rotations",
      "url": "https://thenumb.at/Exponential-Rotations/",
      "savedAt": "2024-06-15T14:56:51.000Z",
      "description": "If you’ve done any 3D programming, you’ve likely encountered the zoo of techniques and representations used when working with 3D rotations. Some of them are better than others, depending on the situation.\n\nBased on CMU 15-462 course materials by Keenan Crane.\n\n\n  Representations\n    \n      Rotation Matrices\n      Euler Angles\n      Quaternions\n      Axis/Angle\n    \n  \n  The Exponential and Logarithmic Maps\n    \n      Axis/Angle in 2D\n      Axis/Angle in 3D\n      Averaging Rotations\n      Quaternions (Again)\n    \n  \n  Further Reading\n\n\nRepresentations\n\nRotation Matrices\n\nLinear-algebra-wise, the most straightforward representation is an orthonormal 3x3 matrix (with positive determinant). The three columns of a rotation matrix specify where the x, y, and z axes end up after the rotation.\n\nRotation matrices are particularly useful for transforming points: just multiply! Even better, rotation matrices can be composed with any other linear transformations via matrix multiplication. That’s why we use rotation matrices when actually drawing things on screen: only one matrix multiplication is required to transform a point from world-space to the screen. However, rotation matrices are not so useful for actually working with rotations: because they don’t form a vector space, adding together two rotation matrices will not give you a rotation matrix back. For example, animating an object by linearly interpolating between two rotation matrices adds scaling:\n\n\n\n\n\n\n\nRandomize\n\n\n\n$$ R_0 = \\begin{bmatrix}1&0&0\\\\0&1&0\\\\0&0&1\\end{bmatrix} $$\n$$ R(0.00) = \\begin{bmatrix}\\phantom{-}1.00&\\phantom{-}0.00&\\phantom{-}0.00\\\\\\phantom{-}0.00&\\phantom{-}1.00&\\phantom{-}0.00\\\\\\phantom{-}0.00&\\phantom{-}0.00&\\phantom{-}1.00\\end{bmatrix} $$\n$$ R_1 = \\begin{bmatrix}-1&0&0\\\\0&1&0\\\\0&0&-1\\end{bmatrix} $$\n\n\nEuler Angles\n\nAnother common representation is Euler angles, which specify three separate rotations about the x, y, and z axes (also known as pitch, yaw, and roll). The order in which the three component rotations are applied is an arbitrary convention—here we’ll apply x, then y, then z.\n\n\n\n$$\\theta_x$$\n$$\\theta_y$$Lock\n$$\\theta_z$$\n\n\nEuler angles are generally well-understood and often used for authoring rotations. However, using them for anything else comes with some significant pitfalls. While it’s possible to manually create splines that nicely interpolate Euler angles, straightforward interpolation often produces undesirable results.\n\nEuler angles suffer from gimbal lock when one component causes the other two axes of rotation to become parallel. Such configurations are called singularities. At a singularity, changing either of two ‘locked’ angles will cause the same output rotation. You can demonstrate this phenomenon above by pressing the ‘lock’ button and adjusting the x/z rotations (a quarter rotation about y aligns the z axis with the x axis).\n\nSingularities break interpolation: if the desired path reaches a singularity, it gains a degree of freedom with which to represent its current position. Picking an arbitrary representation to continue with causes discontinuities in the interpolated output: even within an axis, interpolation won’t produce a constant angular velocity. That can be a problem if, for example, you’re using the output to drive a robot. Furthermore, since each component angle is cyclic, linear interpolation won’t always choose the shortest path between rotations.\n\n\n\n\nRandomize\n\n\n\n$$ \\mathbf{\\theta}_0 = \\begin{bmatrix}0\\\\0\\\\0\\end{bmatrix} $$\n$$ \\mathbf{\\theta}(0.00) = \\begin{bmatrix}\\phantom{-}0.00\\\\\\phantom{-}0.00\\\\\\phantom{-}0.00\\end{bmatrix} $$\n$$ \\mathbf{\\theta}_1 = \\begin{bmatrix}-3.14\\\\0.00\\\\-3.14\\end{bmatrix} $$\n\n\nThankfully, interpolation is smooth if the path doesn’t go through a singularity, so these limitations can be worked around, especially if you don’t need to represent ‘straight up’ and ‘straight down.’\n\nQuaternions\n\nAt this point, you might be expecting yet another article on quaternions—don’t worry, we’re not going to delve into hyper-complex numbers today. It suffices to say that unit quaternions are the standard tool for composing and interpolating rotations, since spherical linear interpolation (slerp) chooses a constant-velocity shortest path between any two quaternions. However, unit quaternions also don’t form a vector space, are unintuitive to author, and can be computationally costly to interpolate*. Further, there’s no intuitive notion of scalar multiplication, nor averaging.\n\nBut, they’re still fascinating! If you’d like to understand quaternions more deeply (or, perhaps, learn what they are in the first place), read this.\n\n\n\n\nRandomize\n\n\n\n$$ Q_0 = \\begin{bmatrix}1\\\\0\\\\0\\\\0\\end{bmatrix}\\ \\ $$\n$$ Q(0.00) = \\begin{bmatrix}\\phantom{-}1.00\\\\\\phantom{-}0.00\\\\\\phantom{-}0.00\\\\\\phantom{-}0.00\\end{bmatrix}\\ \\ $$\n$$ Q_1 = \\begin{bmatrix}0\\\\0\\\\1\\\\0\\end{bmatrix} $$\n\n\nNote that since quaternions double-cover the space of rotations, sometimes \\(Q(1)\\) will go to \\(-Q_1\\).\n\nAxis/Angle Rotations\n\nAn axis/angle rotation is a 3D vector of real numbers. Its direction specifies the axis of rotation, and its magnitude specifies the angle to rotate about that axis. For convenience, we’ll write axis/angle rotations as \\(\\theta\\mathbf{u}\\), where \\(\\mathbf{u}\\) is a unit-length vector and \\(\\theta\\) is the rotation angle.\n\n\n\n\n$$\\mathbf{u}_x$$\n$$\\mathbf{u}_y$$\n$$\\mathbf{u}_z$$\n$$\\theta$$\n\n\nSince axis/angle rotations are simply 3D vectors, they form a vector space: we can add, scale, and interpolate them to our heart’s content. Linearly interpolating between any two axis/angle rotations is smooth and imparts constant angular velocity. However, note that linearly interpolating between axis-angle rotations does not necessarily choose the shortest path: it depends on which axis/angle you use to specify the target rotation.\n\n\n\n\nRandomize\n\n\n\n$$ \\theta_0\\mathbf{u}_0 = \\begin{bmatrix}0\\\\0\\\\0\\end{bmatrix}\\ \\ $$\n$$ \\theta\\mathbf{u}(0.00) = \\begin{bmatrix}\\phantom{-}0.00\\\\\\phantom{-}0.00\\\\\\phantom{-}0.00\\end{bmatrix}\\ \\ $$\n$$ \\theta_1\\mathbf{u}_1 = \\begin{bmatrix}0\\\\3.14\\\\0\\end{bmatrix} $$\n\n\nLike quaternions, axis/angle vectors double-cover the space of rotations: sometimes \\(\\theta\\mathbf{u}(1)\\) will go to \\((2\\pi - \\theta_1)(-\\mathbf{u}_1)\\).\n\nThe Exponential and Logarithmic Maps\n\nIdeally, we could freely convert rotations between these diverse representations based on our use case. We will always want to get a rotation matrix out at the end, so we’ll consider matrices the ‘canonical’ form. Enter the exponential map: a function that takes a different kind of rotation object and gives us back an equivalent rotation matrix. The corresponding logarithmic map takes a rotation matrix and gives us back a rotation object. How these maps relate to the scalar exp and log functions will hopefully become clear later on.\n\n\n\nBelow, we’ll define an exp and log map translating between rotation matrices and axis/angle vectors. But first, to build up intuition, let us consider how rotations work in two dimensions.\n\nAxis/Angle in 2D\n\nIn 2D, there’s only one axis to rotate around: the one pointing out of the plane. Hence, our ‘axis/angle’ rotations can be represented by just \\(\\theta\\).\n\nGiven a 2D point \\(\\mathbf{p}\\), how can we rotate \\(\\mathbf{p}\\) by \\(\\theta\\)? One way to visualize the transformation is by forming a coordinate frame in which the output is easy to describe. Consider \\(\\mathbf{p}\\) and its quarter (\\(90^\\circ\\)) rotation \\(\\mathcal{J}\\mathbf{p}\\):\n\n\n\nUsing a bit of trigonometry, we can describe the rotated \\(\\mathbf{p}_\\theta\\) in two components:\n\n\\[\\begin{align*} \\mathbf{p}_\\theta &= \\mathbf{p}\\cos\\theta + \\mathcal{J}\\mathbf{p}\\sin\\theta \\\\\n &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\mathbf{p} \\end{align*}\\]\n\nBut, what actually are \\(\\mathcal{I}\\) and \\(\\mathcal{J}\\)? The former should take a 2D vector and return it unchanged: it’s the 2x2 identity matrix. The latter should be similar, but swap and negate the two components:\n\n\\[\\begin{align*} \\mathcal{I} &= \\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} \\\\ \\mathcal{J} &= \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix} \\end{align*}\\]\n\nJust to make sure we got \\(\\mathcal{J}\\) right, let’s check what happens if we apply it twice (via \\(\\mathcal{J}^2\\)):\n\n\\[\\mathcal{J}^2 = \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix}\\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix} = \\begin{bmatrix}-1&0\\\\0&-1\\end{bmatrix}\\]\n\nWe got \\(\\mathcal{J}^2 = -\\mathcal{I}\\), which is a 180-degree rotation. So, \\(\\mathcal{J}\\) indeed represents 90-degree rotation.\n\nNow, what does our transform look like?\n\n\\[\\begin{align*}\n\\mathbf{p}_\\theta &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\mathbf{p} \\\\\n                  &= \\left(\\cos(\\theta)\\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} + \\sin(\\theta)\\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix}\\right)\\mathbf{p} \\\\\n                  &= \\begin{bmatrix}\\cos\\theta&-\\sin\\theta\\\\\\sin\\theta&\\cos\\theta\\end{bmatrix}\\mathbf{p}\n\\end{align*}\\]\n\nThat’s the standard 2D rotation matrix. What a coincidence!\n\nComplex Rotations\n\nIf you’re familiar with complex numbers, you might notice that our first transform formula feels eerily similar to Euler’s formula, \\(e^{ix} = \\cos x + i\\sin x\\):\n\n\\[\\begin{align*}\n\\mathbf{p}_\\theta &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\mathbf{p} \\\\\ne^{i\\theta}p &= (\\cos(\\theta) + i\\sin(\\theta))p\n\\end{align*}\\]\n\n\n\nWhere \\(i\\) and \\(\\mathcal{J}\\) both play the role of a quarter turn. We can see that in complex arithmetic, multiplying by \\(i\\) in fact has that effect:\n\n\\[\\mathcal{J}\\mathbf{p} = \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix}\\begin{bmatrix}a\\\\b\\end{bmatrix} = \\begin{bmatrix}-b\\\\a\\end{bmatrix}\\]\n\n\\[ip = i(a + bi) = ai + bi^2 = -b + ai\\]\n\nSo, there must be some connection to the exponential function here.\n\nThe 2D Exponential Map\n\nRecall the definition of the exponential function (or equivalently, its Taylor series):\n\n\\[e^x = \\sum_{k=0}^\\infty \\frac{x^k}{k!} = 1 + x + \\frac{x^2}{2!} + \\frac{x^3}{3!} + \\dots\\]\n\nUsing Euler’s formula, \\(e^{i\\theta}\\) gave us a complex number representing a 2D rotation by \\(\\theta\\). Can we do the same with \\(e^{\\theta\\mathcal{J}}\\)? If we plug a matrix into the above definition, the arithmetic still works out: 2x2 matrices certainly support multiplication, addition, and scaling. (More on matrix exponentiation here.)\n\nLet \\(\\theta\\mathcal{J} = A\\) and plug it in:\n\n\\[e^A = \\sum_{k=0}^\\infty \\frac{A^k}{k!} = \\mathcal{I} + A + \\frac{A^2}{2!} + \\frac{A^3}{3!} + \\dots\\]\n\nLet’s pull out the first four terms to inspect further:\n\n\\[\\begin{align*}\ne^A &= \\mathcal{I} + A + \\frac{1}{2!}A^2 + \\frac{1}{3!}A^3 \\\\\n    &= \\mathcal{I} + A\\left(\\mathcal{I} + \\frac{1}{2}A\\left(\\mathcal{I} + \\frac{1}{3}A\\right)\\right) \\\\\n    &= \\mathcal{I} + A\\left(\\mathcal{I} + \\frac{1}{2}A\\begin{bmatrix}1&\\frac{-\\theta}{3}\\\\\\frac{\\theta}{3}&1\\end{bmatrix}\\right) \\\\\n    &= \\mathcal{I} + A\\begin{bmatrix}1-\\frac{\\theta^2}{6}&\\frac{-\\theta}{2}\\\\\\frac{\\theta}{2}&1-\\frac{\\theta^2}{6}\\end{bmatrix} \\\\\n    &= \\begin{bmatrix}1-\\frac{\\theta^2}{2}&-\\theta+\\frac{\\theta^3}{6}\\\\\\theta-\\frac{\\theta^3}{6}&1-\\frac{\\theta^2}{2}\\end{bmatrix}\n\\end{align*}\\]\n\nThese entries look familiar. Recall the Taylor series that describe the functions \\(\\sin\\) and \\(\\cos\\):\n\n\\[\\begin{align*} \\sin x &= x - \\frac{x^3}{3!} + \\frac{x^5}{5!} - \\dots  \\\\\n\\cos x &= 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\dots \\end{align*}\\]\n\nIf we write out all the terms of \\(e^A\\), we’ll recover the expansions of \\(\\sin\\theta\\) and \\(\\cos\\theta\\)! Therefore:\n\n\\[e^A = e^{\\theta\\mathcal{J}} = \\begin{bmatrix}\\cos\\theta&-\\sin\\theta\\\\\\sin\\theta&\\cos\\theta\\end{bmatrix}\\]\n\nWe’ve determined that the exponential function \\(e^{\\theta\\mathcal{J}}\\) converts our angle \\(\\theta\\) into a corresponding 2D rotation matrix. In fact, we’ve proved a version of Euler’s formula with 2x2 matrices instead of complex numbers:\n\n\\[\\begin{align*} && e^{\\theta\\mathcal{J}} &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\\\\n    &\\implies& \\mathbf{p}_\\theta &= e^{\\theta\\mathcal{J}}\\mathbf{p}\n\\end{align*}\\]\n\nThe 2D Logarithmic Map\n\nThe logarithmic map should naturally be the inverse of the exponential:\n\n\\[R = \\exp(\\theta\\mathcal{J}) \\implies \\log(R) = \\theta\\mathcal{J}\\]\n\nSo, given \\(R\\), how can we recover \\(\\theta\\mathcal{J}\\)?\n\n\\[\\begin{align*}\n&& R &= \\begin{bmatrix}\\cos\\theta&-\\sin\\theta\\\\\\sin\\theta&\\cos\\theta\\end{bmatrix}\\\\\n&\\implies& \\theta &= \\text{atan2}(R_{21},R_{11})\\\\\n&\\implies& \\log(R) &= \\begin{bmatrix}0&-\\theta\\\\\\theta&0\\end{bmatrix}\n\\end{align*}\\]\n\nNote that in general, our exponential map is not injective. Clearly, \\(\\exp(\\theta\\mathcal{J}) = \\exp((\\theta + 2\\pi)\\mathcal{J})\\), since adding an extra full turn will always give us back the same rotation matrix. Therefore, our logarithmic map can’t be surjective—we’ll define it as returning the smallest angle \\(\\theta\\mathcal{J}\\) corresponding to the given rotation matrix. Using \\(\\text{atan2}\\) implements this definition.\n\nInterpolation\n\nConsider two 2D rotation angles \\(\\theta_0\\) and \\(\\theta_1\\). The most obvious way to interpolate between these two rotations is to interpolate the angles and create the corresponding rotation matrix. This scheme is essentially a 2D version of axis-angle interpolation.\n\n\\[\\begin{align*} \\theta(t) &= (1-t)\\theta_0 + t\\theta_1\\\\\nR_\\theta(t) &= \\begin{bmatrix}\\cos(\\theta(t))&-\\sin(\\theta(t))\\\\\\sin(\\theta(t))&\\cos(\\theta(t))\\end{bmatrix}\n\\end{align*}\\]\n\nHowever, if \\(\\theta_0\\) and \\(\\theta_1\\) are separated by more than \\(\\pi\\), this expression will take the long way around: it’s not aware that angles are cyclic.\n\n\n\n\nRandomize\n\n\n\n$$ \\theta_0 = 0\\ \\ $$\n$$ \\theta(0.00) = 0.00\\ \\ $$\n$$ \\theta_1 = 4.71 $$\n\n\nInstead, let’s devise an interpolation scheme based on our exp/log maps. Since we know the two rotation matrices \\(R_0\\), \\(R_1\\), we can express the rotation that takes us directly from the initial pose to the final pose: \\(R_1R_0^{-1}\\), i.e. first undo \\(R_0\\), then apply \\(R_1\\).\n\nUsing our logarithmic map, we can obtain the smallest angle that rotates from \\(R_0\\) to \\(R_1\\): \\(\\log(R_1R_0^{-1})\\). Since \\(\\log\\) gives us an axis-angle rotation, we can simply scale the result by \\(t\\) to perform interpolation. After scaling, we can use our exponential map to get back a rotation matrix. This matrix represents a rotation \\(t\\) of the way from \\(R_0\\) to \\(R_1\\).\n\nHence, our final parametric rotation matrix is \\(R(t) = \\exp(t\\log(R_1R_0^{-1})))R_0\\).\n\n\\[\\begin{align*} R(0) &= \\exp(0)R_0 = R_0\\\\\nR(1) &= \\exp(\\log(R_1R_0^{-1}))R_0 = R_1R_0^{-1}R_0 = R_1 \\end{align*}\\]\n\n\n\n\nRandomize\n\n\n\n$$ R_0 = \\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} $$\n$$ R(0.00) = \\begin{bmatrix}\\phantom{-}1.00&\\phantom{-}0.00\\\\\\phantom{-}0.00&\\phantom{-}1.00\\end{bmatrix} $$\n$$ R_1 = \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix} $$\n\n\nUsing exp/log for interpolation might seem like overkill for 2D—we could instead just check how far apart the angles are. But below, we’ll see how this interpolation scheme generalizes—without modification—to 3D, and in fact any number of dimensions.\n\nAxis/Angle in 3D\n\nWe’re finally ready to derive an exponential and logarithmic map for 3D rotations. In 2D, our map arose from exponentiating \\(\\theta\\mathcal{J}\\), i.e. \\(\\theta\\) times a matrix representing a counter-clockwise quarter turn about the axis of rotation. We will be able to do the same in 3D—but what transformation encodes a quarter turn about a 3D unit vector \\(\\mathbf{u}\\)?\n\nThe cross product \\(\\mathbf{u}\\times\\mathbf{p}\\) is typically defined as a vector normal to the plane containing both \\(\\mathbf{u}\\) and \\(\\mathbf{p}\\). However, we could also interpret \\(\\mathbf{u}\\times\\mathbf{p}\\) as a quarter turn of the projection of \\(\\mathbf{p}\\) into the plane with normal \\(\\mathbf{u}\\), which we will call \\(\\mathbf{p}_\\perp\\):\n\n\n\nSo, if we can compute the quarter rotation of \\(\\mathbf{p}_\\perp\\), it should be simple to recover the quarter rotation of \\(\\mathbf{p}\\). Of course, \\(\\mathbf{p}=\\mathbf{p}_\\perp+\\mathbf{p}_\\parallel\\), so we’ll just have to add back the parallel part \\(\\mathbf{p}_\\parallel\\). This is correct because a rotation about \\(\\mathbf{u}\\) preserves \\(\\mathbf{p}_\\parallel\\):\n\n\n\nHowever, “\\(\\mathbf{u} \\times\\)” is not a mathematical object we can work with. Instead, we can devise a matrix \\(\\mathbf{\\hat{u}}\\) that when multiplied with a a vector \\(\\mathbf{p}\\), outputs the same result as \\(\\mathbf{u} \\times \\mathbf{p}\\):\n\n\\[\\begin{align*}\n\\mathbf{u} \\times \\mathbf{p} &= \\begin{bmatrix} u_yp_z - u_zp_y \\\\ u_zp_x - u_xp_z \\\\ u_xp_y - u_yp_x \\end{bmatrix} \\\\\n &= \\begin{bmatrix}0&-u_z&u_y\\\\u_z&0&-u_x\\\\-u_y&u_x&0\\end{bmatrix}\\begin{bmatrix}p_x\\\\p_y\\\\p_z\\end{bmatrix} \\\\\n &= \\mathbf{\\hat{u}}\\mathbf{p}\n\\end{align*}\\]\n\nWe can see that \\(\\mathbf{\\hat{u}}^T = -\\mathbf{\\hat{u}}\\), so \\(\\mathbf{\\hat{u}}\\) is a skew-symmetric matrix. (i.e. it has zeros along the diagonal, and the two halves are equal but negated.) Note that in the 2D case, our quarter turn \\(\\mathcal{J}\\) was also skew-symmetric, and sneakily represented the 2D cross product! We must be on the right track.\n\nThe reason we want to use axis/angle rotations in the first place is because they form a vector space. So, let’s make sure our translation to skew-symmetric matrices maintains that property. Given two skew-symmetric matrices \\(A_1\\) and \\(A_2\\):\n\n\\[(A_1 + A_2)^T = A_1^T + A_2^T = -A_1 - A_2 = -(A_1 + A_2)\\]\n\nTheir sum is also a skew-symmetric matrix. Similarly:\n\n\\[(cA)^T = c(A^T) = -cA_1\\]\n\nScalar multiplication also maintains skew-symmetry. The other vector space properties follow from the usual definition of matrix addition.\n\nFinally, note that \\(\\mathbf{u} \\times (\\mathbf{u} \\times (\\mathbf{u} \\times \\mathbf{p})) = -\\mathbf{u} \\times \\mathbf{p}\\). Taking the cross product three times would rotate \\(\\mathbf{p}_\\perp\\) three-quarter turns about \\(\\mathbf{u}\\), which is equivalent to a single negative-quarter turn. More generally, \\(\\mathbf{\\hat{u}}^{k+2} = -\\mathbf{\\hat{u}}^k\\) for any \\(k>0\\). We could prove this by writing out all the terms, but the geometric argument is easier:\n\n\n\nThe 3D Exponential Map\n\nGiven an axis/angle rotation \\(\\theta\\mathbf{u}\\), we can make \\(\\theta\\mathbf{\\hat{u}}\\) using the above construction. What happens when we exponentiate it? Using the identity \\(\\mathbf{\\hat{u}}^{k+2} = -\\mathbf{\\hat{u}}^k\\):\n\n\\[\\begin{align*}\ne^{\\theta\\mathbf{\\hat{u}}} &= \\mathcal{I} + \\theta\\mathbf{\\hat{u}} + \\frac{1}{2!}\\theta^2\\mathbf{\\hat{u}}^2 + \\frac{1}{3!}\\theta^3\\mathbf{\\hat{u}}^3 + \\frac{1}{4!}\\theta^4\\mathbf{\\hat{u}}^4 + \\frac{1}{5!}\\theta^5\\mathbf{\\hat{u}}^5 + \\dots \\\\\n&= \\mathcal{I} + \\theta\\mathbf{\\hat{u}} + \\frac{1}{2!}\\theta^2\\mathbf{\\hat{u}}^2 - \\frac{1}{3!}\\theta^3\\mathbf{\\hat{u}} - \\frac{1}{4!}\\theta^4\\mathbf{\\hat{u}}^2 + \\frac{1}{5!}\\theta^5\\mathbf{\\hat{u}} + \\dots \\\\\n&= \\mathcal{I} + \\left(\\theta - \\frac{1}{3!}\\theta^3 + \\frac{1}{5!}\\theta^5 - \\dots\\right)\\mathbf{\\hat{u}} + \\left(1 - \\left(1 - \\frac{1}{2!}\\theta^2 + \\frac{1}{4!}\\theta^4 - \\dots\\right)\\right)\\mathbf{\\hat{u}}^2 \\\\\n&= \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\n\\end{align*}\\]\n\nIn the last step, we again recover the Taylor expansions of \\(\\sin\\theta\\) and \\(\\cos\\theta\\). Our final expression is known as Rodrigues’ formula.\n\nThis formula is already reminiscent of the 2D case: the latter two terms are building up a 2D rotation in the plane defined by \\(\\mathbf{u}\\). To sanity check our 3D result, let’s compute our transform for \\(\\theta = 0\\):\n\n\\[e^{0\\mathbf{\\hat{u}}}\\mathbf{p} = (\\mathcal{I} + 0\\mathbf{\\hat{u}} + (1-1)\\mathbf{\\hat{u}}^2)\\mathbf{p} = \\mathbf{p}\\]\n\nRotating by \\(\\theta = 0\\) preserves \\(\\mathbf{p}\\), so the formula works. Then compute for \\(\\theta = \\frac{\\pi}{2}\\):\n\n\\[\\begin{align*} e^{\\frac{\\pi}{2}\\mathbf{\\hat{u}}}\\mathbf{p} &= (\\mathcal{I} + 1\\mathbf{\\hat{u}} + (1-0)\\mathbf{\\hat{u}}^2)\\mathbf{p} \\\\ &= \\mathbf{p} + \\mathbf{\\hat{u}}\\mathbf{p} + \\mathbf{\\hat{u}}^2\\mathbf{p} \\\\\n&= \\mathbf{p} + \\mathbf{u}\\times\\mathbf{p} + \\mathbf{u}\\times(\\mathbf{u}\\times\\mathbf{p})\\\\\n&= (\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel) + \\mathbf{u}\\times\\mathbf{p} - \\mathbf{p}_\\perp\\\\\n&= \\mathbf{u}\\times\\mathbf{p} + \\mathbf{p}_\\parallel\n\\end{align*}\\]\n\nAbove, we already concluded \\(\\mathbf{u}\\times\\mathbf{p} + \\mathbf{p}_\\parallel\\) is a quarter rotation. So, our formula is also correct at \\(\\theta = \\frac{\\pi}{2}\\). Then compute for \\(\\theta = \\pi\\):\n\n\\[\\begin{align*} e^{\\pi\\mathbf{\\hat{u}}}\\mathbf{p} &= (\\mathcal{I} + 0\\mathbf{\\hat{u}} + (1-(-1))\\mathbf{\\hat{u}}^2)\\mathbf{p} \\\\\n&= \\mathbf{p} + 2\\mathbf{\\hat{u}}^2\\mathbf{p} \\\\\n&= (\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel) - 2\\mathbf{p}_\\perp \\\\\n&= -\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel\n\\end{align*}\\]\n\n\n\nWe end up with \\(-\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel\\), which is a half rotation. Hence \\(\\theta = \\pi\\) is also correct.\n\nSo far, our formula checks out. Just to be sure, let’s prove that our 3D result is a rotation matrix, i.e. it’s orthonormal and has positive determinant. A matrix is orthonormal if \\(A^TA = \\mathcal{I}\\), so again using \\(\\mathbf{\\hat{u}}^{k+2} = -\\mathbf{\\hat{u}}^k\\):\n\n\\[\\begin{align*}\n&\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right)^T\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right) \\\\\n=& \\left(\\mathcal{I}^T + \\sin(\\theta)\\mathbf{\\hat{u}}^T + (1-\\cos(\\theta))\\left(\\mathbf{\\hat{u}}^T\\right)^2\\right)\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right) \\\\\n=&\\ (\\mathcal{I} - \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2)\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right) \\\\\n=&\\ \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 - \\sin(\\theta)\\mathbf{\\hat{u}} - \\sin^2(\\theta)\\mathbf{\\hat{u}}^2 - \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}}^3 \\\\&+ (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 + \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}}^3 + (1-\\cos(\\theta))^2\\mathbf{\\hat{u}}^4 \\\\\n=&\\ \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 - \\sin(\\theta)\\mathbf{\\hat{u}} - \\sin^2(\\theta)\\mathbf{\\hat{u}}^2 + \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}} \\\\&+ (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 - \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}} - (1-\\cos(\\theta))^2\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I} + 2(1-\\cos(\\theta))\\mathbf{\\hat{u}}^2  - \\sin^2(\\theta)\\mathbf{\\hat{u}}^2 - (1-\\cos(\\theta))^2\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I} + (-\\sin^2(\\theta) + 2(1-\\cos(\\theta)) - (1-\\cos(\\theta))^2)\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I} + (-\\sin^2(\\theta)+1-\\cos^2(\\theta))\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I} + (1-(\\sin^2(\\theta)+\\cos^2(\\theta)))\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I}\n\\end{align*}\\]\n\nTherefore, \\(e^{\\theta\\mathbf{\\hat{u}}}\\) is orthonormal. We could show its determinant is positive (and therefore \\(1\\)) by writing out all the terms, but it suffices to argue that:\n\n\n  Clearly, \\(\\begin{vmatrix}\\exp(0\\mathbf{\\hat{u}})\\end{vmatrix} = \\begin{vmatrix}\\mathcal{I}\\end{vmatrix} = 1\\)\n  There is no \\(\\theta\\), \\(\\mathbf{\\hat{u}}\\) such that \\(\\begin{vmatrix}\\exp(\\theta\\mathbf{\\hat{u}})\\end{vmatrix} = 0\\), since \\(\\mathbf{\\hat{u}}\\) and \\(\\mathbf{\\hat{u}}^2\\) can never cancel out \\(\\mathcal{I}\\).\n  \\(\\exp\\) is continuous with respect to \\(\\theta\\) and \\(\\mathbf{\\hat{u}}\\)\n\n\nTherefore, \\(\\begin{vmatrix}\\exp(0\\mathbf{\\hat{u}})\\end{vmatrix}\\) can never become negative. That means \\(\\exp(\\theta\\mathbf{\\hat{u}})\\) is a 3D rotation matrix!\n\nThe 3D Logarithmic Map\n\nSimilarly to the 2D case, the 3D exponential map is not injective, so the 3D logarithmic map will not be surjective. Instead, we will again define it to return the smallest magnitude axis-angle rotation corresponding to the given matrix. Our exponential map gave us:\n\n\\[R = \\exp(\\theta\\mathbf{\\hat{u}}) = \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\]\n\nWe can take the trace (sum along the diagonal) of both sides:\n\n\\[\\operatorname{tr}(R) = \\operatorname{tr}(\\mathcal{I}) + \\sin(\\theta)\\operatorname{tr}(\\mathbf{\\hat{u}}) + (1-\\cos(\\theta))\\operatorname{tr}(\\mathbf{\\hat{u}}^2)\\]\n\nClearly \\(\\operatorname{tr}(\\mathcal{I}) = 3\\), and since \\(\\mathbf{\\hat{u}}\\) is skew-symmetric, its diagonal sum is zero. That just leaves \\(\\mathbf{\\hat{u}}^2\\):\n\n\\[\\mathbf{\\hat{u}}^2 = \\begin{bmatrix}-u_y^2-u_z^2&u_xu_y&u_xu_z\\\\u_xu_y&-u_x^2-u_z^2&u_yu_z\\\\u_xu_z&u_yu_z&-u_x^2-u_y^2\\end{bmatrix}\\]\n\nWe can see \\(\\operatorname{tr}(\\mathbf{\\hat{u}}^2) = -2u_x^2-2u_y^2-2u_z^2 = -2\\|\\mathbf{u}\\|^2 = -2\\). (We originally defined \\(\\mathbf{u}\\) as a unit vector.) Our final trace becomes:\n\n\\[\\begin{align*} && \\operatorname{tr}(R) &= 3 + 0\\sin(\\theta) - 2(1-\\cos(\\theta)) \\\\ &&&= 1 + 2\\cos\\theta \\\\\n&\\implies& \\theta &= \\arccos\\left(\\frac{\\operatorname{tr}(R)-1}{2}\\right) \\end{align*}\\]\n\nThat’s half of our logarithmic map. To recover \\(\\mathbf{\\hat{u}}\\), we can antisymmetrize \\(R\\). Recall \\(\\mathbf{\\hat{u}}^T = -\\mathbf{\\hat{u}}\\), and that \\(\\mathbf{\\hat{u}}^2\\) is symmetric (above).\n\n\\[\\begin{align*}\n&& R - R^T &= \\mathcal{I} - \\mathcal{I}^T + \\sin(\\theta)(\\mathbf{\\hat{u}}-\\mathbf{\\hat{u}}^T) + (1-\\cos(\\theta))(\\mathbf{\\hat{u}}^2-(\\mathbf{\\hat{u}}^2)^T) \\\\\n&&&= \\sin(\\theta)(\\mathbf{\\hat{u}}+\\mathbf{\\hat{u}}) + (1-\\cos(\\theta))(\\mathbf{\\hat{u}}^2-\\mathbf{\\hat{u}}^2) \\\\\n&&&= 2\\sin(\\theta)\\mathbf{\\hat{u}} \\\\\n&\\implies& \\mathbf{\\hat{u}} &= \\frac{1}{2\\sin\\theta}(R-R^T) \\\\\n\\end{align*}\\]\n\nFinally, to get \\(\\mathbf{u}\\), we can pull out the entries of \\(\\mathbf{\\hat{u}}\\), which we just derived:\n\n\\[\\mathbf{u} = \\frac{1}{2\\sin\\theta}\\begin{bmatrix}R_{32}-R_{23}\\\\ R_{13}-R_{31}\\\\R_{21}-R_{12}\\end{bmatrix}\\]\n\nWe now have our full 3D logarithmic map!\n\nInterpolation\n\nNow equipped with our 3D exp and log maps, we can use them for interpolation. The exact same formula as the 2D case still applies:\n\n\\[R(t) = \\exp(t\\log(R_1R_0^{-1})))R_0\\]\n\n\n\n\nRandomize\n\n\n\n$$ R_0 = \\begin{bmatrix}1&0&0\\\\0&1&0\\\\0&0&1\\end{bmatrix} $$\n$$ R(0.00) = \\begin{bmatrix}\\phantom{-}1.00&\\phantom{-}0.00&\\phantom{-}0.00\\\\\\phantom{-}0.00&\\phantom{-}1.00&\\phantom{-}0.00\\\\\\phantom{-}0.00&\\phantom{-}0.00&\\phantom{-}1.00\\end{bmatrix} $$\n$$ R_1 = \\begin{bmatrix}-0.42&-0.59&-0.69\\\\0.51&-0.79&0.36\\\\-0.75&-0.20&0.63\\end{bmatrix} $$\n\n\nOur interpolation scheme produces all the nice properties of axis/angle rotations—and chooses the shortest path every time. This wouldn’t look so smooth with Euler angles!\n\nAveraging Rotations\n\nHowever, we would have gotten an equally good interpolation scheme by just using quaternions instead of messing about with all this matrix math. Let’s consider something interesting we can only easily do with axis/angle rotations: averaging a set of rotation matrices.\n\nThe most straightforward method is to convert each matrix into an axis/angle rotation, average the resulting vectors, and convert back. That is certainly a valid strategy, but the resulting behavior won’t be very intuitive:\n\n\nRandomize\n\nIn particular, summing axis-angle vectors can result in “catastrophic cancellation.” An extreme example is averaging \\(\\begin{bmatrix}\\pi&0&0\\end{bmatrix}\\) and \\(\\begin{bmatrix}-\\pi&0&0\\end{bmatrix}\\), resulting in zero—which is clearly not representative of the two equivalent rotations.\n\nTo find an alternative, let’s first consider a slightly unconventional way of averaging points in the plane. The average of a set of points is the point that minimizes total squared distance to all others. Hence, there’s an optimization-based algorithm for finding it. Given \\(x_0, \\dots, x_n\\), we can iterate the following procedure:\n\n\n  Pick an initial guess \\(\\bar{x} \\in \\mathbb{R}^2\\) (can be one of the points).\n  Repeat:\n    \n      For each point, get its translation from the guess: \\(\\mathbf{u}_i \\leftarrow x_i - \\bar{x}\\)\n      Average the vectors: \\(\\mathbf{u} \\leftarrow \\frac{1}{n} \\sum_{i=1}^n \\mathbf{u}_i\\)\n      Step toward the average direction: \\(\\bar{x} \\leftarrow \\bar{x} + \\tau\\mathbf{u}\\)\n    \n  \n  while \\(\\|\\mathbf{u}\\| > \\epsilon\\).\n\n\n\n\nAs we run this procedure, \\(\\bar{x}\\) will converge to the average point. Of course, we could have just averaged the points directly, but we’ll be able to translate this idea to the rotational case rather nicely.\n\nOur logarithmic map lets us convert rotation matrices to axis axis/angle rotations, which are themselves just 3D points. So, what if we use the point averaging algorithm on rotations \\(R_0, \\dots, R_n\\)?\n\n\n  Pick an initial guess \\(\\bar{R} \\in \\mathbb{R}^{3\\times3}\\) (can be \\(\\mathcal{I}\\)).\n  Repeat:\n    \n      For each matrix, get its axis/angle rotation from the guess: \\(\\mathbf{u}_i \\leftarrow \\log(R_i\\bar{R}^{-1})\\)\n      Average the vectors: \\(\\mathbf{u} \\leftarrow \\frac{1}{n} \\sum_{i=1}^n \\mathbf{u}_i\\)\n      Step toward the average rotation: \\(\\bar{R} \\leftarrow \\exp(\\tau\\mathbf{u})\\bar{R}\\)\n    \n  \n  while \\(\\|\\mathbf{u}\\| > \\epsilon\\).\n\n\n\n\nStep\nRandomize\n\n\nThe result of this algorithm is formally known as the Karcher mean. Just like how the average point minimizes total squared distance from all other points, the Karcher mean is a rotation that minimizes squared angular distance from all other rotations. Therefore, it won’t be subject to catastrophic cancellation—we’ll always end up with a non-zero in-between rotation.\n\nTry comparing the two averaging algorithms—randomizing will keep them in sync. While the results are often similar, the Karcher mean exhibits more consistent behavior.\n\nQuaternions (Again)\n\nWarning: section assumes knowledge of quaternions\n\nOkay, I couldn’t resist talking about quaternions at least a little bit, given how closely they’re related to axis/angle rotations. Just like how complex exponentiation turned out to be equivalent to (skew-symmetric) 2D matrix exponentiation, quaternion exponentiation is equivalent to (skew-symmetric) 3D matrix exponentiation.\n\nIn 2D, an axis/angle rotation was simply \\(\\theta\\). We created a pure-imaginary complex number \\(i\\theta\\) and exponentiated it:\n\n\\[e^{i\\theta} = \\cos\\theta + i\\sin\\theta\\]\n\nWe got back a complex number that when multiplied with a point, rotates it by \\(\\theta\\). It’s always the case that \\(\\|\\cos\\theta + i\\sin\\theta\\| = 1\\), so 2D rotations can be represented as unit-norm complex numbers.\n\nIn 3D, an axis/angle rotation is a vector \\(\\mathbf{u}\\) such that \\(\\|\\mathbf{u}\\| = \\theta\\). What happens if we create a pure-imaginary quaternion \\(\\mathbf{q} = u_x\\mathbf{i} + u_y\\mathbf{j} + u_z\\mathbf{k}\\) and exponentiate it, too?\n\nTo make evaluating \\(e^\\mathbf{q}\\) easier, first derive the following using the quaternion multiplication rules:\n\n\\[\\begin{align*}\n\\mathbf{q}^2 &= (u_x\\mathbf{i} + u_y\\mathbf{j} + u_z\\mathbf{k})(u_x\\mathbf{i} + u_y\\mathbf{j} + u_z\\mathbf{k}) \\\\\n             &= u_x^2\\mathbf{i}^2 + u_xu_y\\mathbf{i}\\mathbf{j} + u_xu_z\\mathbf{i}\\mathbf{k} + u_yu_x\\mathbf{j}\\mathbf{i} + u_y^2\\mathbf{j}^2 + u_yu_z\\mathbf{j}\\mathbf{k} + u_zu_x\\mathbf{k}\\mathbf{i} + u_zu_y\\mathbf{k}\\mathbf{j} + u_z^2\\mathbf{k}^2 \\\\\n             &= -u_x^2 + u_xu_y\\mathbf{k} - u_xu_z\\mathbf{j} - u_yu_x\\mathbf{k} - u_y^2 + u_yu_z\\mathbf{i} + u_zu_x\\mathbf{j} - u_zu_y\\mathbf{i} - u_z^2 \\\\\n             &= -u_x^2-u_y^2-u_z^2\\\\\n             &= -\\|\\mathbf{q}\\|^2\\\\\n             &= -\\theta^2\n\\end{align*}\\]\n\nWhich is highly reminiscent of the skew-symmetric matrix identity used above. Therefore…\n\n\\[\\begin{align*}\ne^\\mathbf{q} &= 1 + \\mathbf{q} + \\frac{\\mathbf{q}^2}{2!} + \\frac{\\mathbf{q}^3}{3!} + \\frac{\\mathbf{q}^4}{4!} + \\frac{\\mathbf{q}^5}{5!} + \\dots \\\\\n             &= 1 + \\frac{\\theta\\mathbf{q}}{\\theta} - \\frac{\\theta^2}{2!} - \\frac{\\theta^3\\mathbf{q}}{3!\\theta} + \\frac{\\theta^4}{4!} + \\frac{\\theta^5\\mathbf{q}}{5!\\theta} \\dots \\\\\n             &= \\left(1 - \\frac{\\theta^2}{2!} + \\frac{\\theta^4}{4!} - \\dots\\right) + \\frac{\\mathbf{q}}{\\theta}\\left(\\theta - \\frac{\\theta^3}{3!} + \\frac{\\theta^5}{5!} - \\dots\\right) \\\\\n             &= \\cos\\theta + \\frac{\\mathbf{q}}{\\theta}\\sin\\theta \\\\\n             &\\approx \\cos\\theta + \\frac{\\mathbf{u}}{\\|\\mathbf{u}\\|}\\sin\\theta\n\\end{align*}\\]\n\nOur result looks almost exactly like the 2D case, just with three imaginary axes instead of one. In 2D, our axis/angle rotation became a unit-norm complex number. In 3D, it became a unit-norm quaternion. Now we can use this quaternion to rotate 3D points! Pretty cool, right?\n\nOne advantage of using quaternions is how easy the exponential map is to compute—if you don’t need a rotation matrix, it’s a good option. The quaternion logarithmic map is similarly simple:\n\n\\[\\theta = \\arccos(\\Re(\\mathbf{q})), \\mathbf{u} = \\frac{1}{\\sin\\theta}\\Im(\\mathbf{q})\\]\n\nFinally, note that the way to rotate a point \\(\\mathbf{p}\\) by a quaternion \\(\\mathbf{q}\\) is by evaluating the conjugation \\(\\mathbf{q}\\mathbf{p}\\mathbf{q}^{-1}\\), where \\(\\mathbf{p} = p_x\\mathbf{i} + p_y\\mathbf{j} + p_z\\mathbf{k}\\) is another pure-imaginary quaternion representing our point. The conjugation technically rotates the point by \\(2\\theta\\) about \\(\\mathbf{u}\\), but that’s easily accounted for by making \\(\\|\\mathbf{u}\\| = \\frac{\\theta}{2}\\) in the beginning.\n\nFurther Reading\n\nMade it this far? Well, there’s even more to learn about rotations.\n\nLearn about quaternions here, and why geometric algebra is more intuitive here.\n\nBeyond understanding the four representations covered here (plus geometric algebra), it can be enlightening to learn about the algebraic structure underlying all 3D rotations: the group \\(SO(3)\\). I found this video to be a great resource: it explains \\(SO(3)\\) both intuitively and visually, demonstrating how it relates it to the group \\(SU(2)\\) as well as why quaternions and axis/angle rotations double-cover 3D rotation matrices.\n\nThe wikipedia page on SO(3) is also informative, though very math heavy. It touches on connections with axis/angle rotations, topology, \\(SU(2)\\), quaternions, and Lie algebra. It turns out the vector space of skew-symmetric matrices we derived above makes up \\(\\mathfrak{so}(3)\\), the Lie algebra that corresponds to \\(SO(3)\\)—but I don’t know what that entails.",
      "tags": [
        "cs/computer-graphics",
        "for-later"
      ]
    },
    {
      "id": "c08588dd-8e21-4499-bb7b-cc2152747dab",
      "title": "Scratchapixel 4.0, Learn Computer Graphics Programming",
      "url": "https://www.scratchapixel.com/index.html",
      "savedAt": "2024-06-15T14:55:57.000Z",
      "description": "Welcome to Computer Graphics",
      "tags": [
        "cs/computer-graphics",
        "for-later"
      ]
    },
    {
      "id": "a9526a6a-4876-4233-9b46-066307a5e7d6",
      "title": "Accounting for Developers, Part I | Modern Treasury Journal",
      "url": "https://www.moderntreasury.com/journal/accounting-for-developers-part-i",
      "savedAt": "2024-06-15T14:54:04.000Z",
      "description": "In this first part of a two-part series, we walk through basic accounting principles for anyone building products that move and track money.",
      "tags": [
        "finances"
      ]
    },
    {
      "id": "091708bc-ded1-4c48-8f8d-5b19565c4528",
      "title": "Complex Analysis",
      "url": "https://complex-analysis.com/index.html",
      "savedAt": "2024-06-15T14:41:31.000Z",
      "description": "An online interactive introduction to the study of complex analysis.",
      "tags": [
        "books",
        "math"
      ]
    },
    {
      "id": "25f0d34c-4c53-408b-9712-a093a8539495",
      "title": "On Seeing Through and Unseeing: The Hacker Mindset · Gwern.net",
      "url": "https://gwern.net/unseeing",
      "savedAt": "2024-06-15T04:06:52.000Z",
      "description": "Defining the security/hacker mindset as extreme reductionism: ignoring the surface abstractions and limitations to treat a system as a source of parts to manipulate into a different system, with different (and usually unintended) capabilities.",
      "tags": [
        "interesting"
      ]
    },
    {
      "id": "0e676883-dce8-4ab6-94ca-caf3a2a1bc2b",
      "title": "Experts vs. Imitators",
      "url": "https://fs.blog/experts-vs-imitators/",
      "savedAt": "2024-06-15T03:48:06.000Z",
      "description": "Learn how to spot the difference between and expert and an imitator with 5 key tells.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "a48df777-fb04-4e73-b663-9dc7df937f04",
      "title": "Confusion is a muse | notes.eatonphil.com",
      "url": "https://notes.eatonphil.com/2024-06-14-confusion-is-a-muse.html",
      "savedAt": "2024-06-15T03:43:04.000Z",
      "description": "Confusion is a muse",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "cc428636-78f4-4e1c-b6d2-34393f22386f",
      "title": "How I Cured My Procrastination - Learn How To Learn",
      "url": "https://learnhowtolearn.org/how-i-cured-procrastination/",
      "savedAt": "2024-06-15T03:34:03.000Z",
      "description": "I went from a C student to an A engineering student while enjoying work more and having 100x more freedom TLDR (because I also hate digging through articles for the thing I clicked for): When I went to college I did extremely poorly sophomore year for numerous reasons, mostly being lazy an",
      "tags": [
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "f6237300-649b-4fcb-a490-f61c57975c0e",
      "title": "Never, Sometimes, Always - lukeplant.me.uk",
      "url": "https://lukeplant.me.uk/blog/posts/never-sometimes-always/",
      "savedAt": "2024-06-14T14:46:20.000Z",
      "description": "Just like the only numbers programmers care about are zero, one, infinity, the only frequencies we care about are Never, Sometimes and Always.",
      "tags": [
        "cs",
        "engineering"
      ]
    },
    {
      "id": "167ac906-1611-456d-b836-712e01a478a6",
      "title": "Ray Tracing in One Weekend",
      "url": "https://raytracing.github.io/books/RayTracingInOneWeekend.html",
      "savedAt": "2024-06-14T00:51:19.000Z",
      "description": "Ray Tracing in One Weekend",
      "tags": [
        "cs/computer-graphics"
      ]
    },
    {
      "id": "f704c197-cf07-4da5-98e2-8606b3a883db",
      "title": "NULL BITMAP Builds a Database #1: The Log is Literally the Database • Buttondown",
      "url": "https://buttondown.email/jaffray/archive/null-bitmap-builds-a-database-1-the-log-is/",
      "savedAt": "2024-06-13T23:43:57.000Z",
      "description": "It is time to end the tyranny of people becoming interested in database implementation and building a BTree. Let us turn to the succor of immutable storage....",
      "tags": [
        "cs",
        "database",
        "for-later"
      ]
    },
    {
      "id": "89e33c48-c43a-435f-be90-f21128625513",
      "title": "Making USB devices - end to end guide to your first gadget",
      "url": "https://popovicu.com/posts/making-usb-devices/",
      "savedAt": "2024-06-13T23:42:03.000Z",
      "description": "Introduction to implementing USB devices. Minimal overview of hardware and software with an example with STM32 microcontroller. Also contains an index to very detailed guides for more information.",
      "tags": [
        "cs",
        "hardware"
      ]
    },
    {
      "id": "405a5dcd-34a7-463f-882d-aae4ca149253",
      "title": "Mediocre Engineer’s guide to HTTPS",
      "url": "https://devonperoutky.super.site/blog-posts/mediocre-engineers-guide-to-https",
      "savedAt": "2024-06-13T23:34:59.000Z",
      "description": "As a mediocre engineer, I took Internet and HTTPS communication for granted and never dove any deeper. Today we’re improving as engineers and learning a rough overview of how internet communication works, specifically focusing on HTTP and TLS.",
      "tags": [
        "cs",
        "for-later",
        "networking",
        "web"
      ]
    },
    {
      "id": "348080bb-08cb-475e-bf2d-81ad826f786a",
      "title": "Things you wish you didn't need to know about S3",
      "url": "https://blog.plerion.com/things-you-wish-you-didnt-need-to-know-about-s3/",
      "savedAt": "2024-06-13T23:30:15.000Z",
      "description": "S3 is more weirder than you think. Make sure you know all the quirks before they turn into vulnerabilities in your AWS infrastructure.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "e15e5353-d2ae-461c-a304-0e0526e8d1a9",
      "title": "staniks.github.io",
      "url": "https://staniks.github.io/articles/serious-engine-networking-analysis",
      "savedAt": "2024-06-13T23:15:31.000Z",
      "description": "Personal website and blog.",
      "tags": [
        "cs",
        "for-later",
        "networking"
      ]
    },
    {
      "id": "05c1a780-33d4-4b65-975c-65a5ad3f031c",
      "title": "Notational intelligence | thesephist.com",
      "url": "https://thesephist.com/posts/notation/",
      "savedAt": "2024-06-13T23:15:04.000Z",
      "description": "I spent the last month wondering and investigating how we might design better workflows for creative work that meld the best of human intuition and machine intelligence. I think a promising path is in the design of notation. More explicitly, I believe inventing better notations can contribute far more than automated tools to our effective intelligence in understanding ourselves, the world, and our place in it.",
      "tags": [
        "interesting"
      ]
    },
    {
      "id": "f23c54b9-7aa9-4272-8ac3-bb4945cc4ab7",
      "title": "Proxmox vs FreeBSD: Which Virtualization Host Performs Better? - IT Notes",
      "url": "https://it-notes.dragas.net/2024/06/10/proxmox-vs-freebsd-which-virtualization-host-performs-better/",
      "savedAt": "2024-06-11T00:41:59.000Z",
      "description": "Comparative tests show FreeBSD's virtualization performance surpasses Proxmox, especially with NVMe drivers.",
      "tags": [
        "cs",
        "devops"
      ]
    },
    {
      "id": "344a35a3-a402-4057-9f72-dad1a9cd58e1",
      "title": "Legend of Worlds",
      "url": "https://legendofworlds.com/blog/4",
      "savedAt": "2024-06-11T00:36:45.000Z",
      "description": "A sandbox game where players create worlds!",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "244a1699-fdd7-4d30-8808-f64268552ccb",
      "title": "Build Your Own X",
      "url": "https://build-your-own-x.vercel.app",
      "savedAt": "2024-06-10T00:07:36.000Z",
      "description": "This repo is forked from awesome anistefanovic/build-your-own-x ,\n    site is created and maintained by Kalan which converted github README.md to\n    website, and probably will add more opinionated resource. Follow me on\n    Twitter or contrinute your article link on Github is always welcomed!",
      "tags": [
        "cs",
        "resource"
      ]
    },
    {
      "id": "61ca951b-3476-4d5a-9584-840d4d82f942",
      "title": "Data Modeling in Document Databases for the RDBMS-Minded",
      "url": "https://db-engines.com/en/blog_post/51",
      "savedAt": "2024-06-10T00:06:40.000Z",
      "description": "Blog > Post",
      "tags": [
        "cs",
        "database"
      ]
    },
    {
      "id": "c5671a6a-39eb-4a15-ba34-aa5135755098",
      "title": "A (Draft) Taxonomy of SIMD Usage – Branch Free",
      "url": "https://branchfree.org/2024/06/09/a-draft-taxonomy-of-simd-usage/",
      "savedAt": "2024-06-09T22:46:46.000Z",
      "description": "I've made many different types of SIMD usage over the years, and occasionally even written about them (on this blog, in papers, and in Twitter). Just for reference, I'd like to cover my taxonomy of SIMD usage so I don't keep writing it up (poorly) on Twitter every few months. This discussion is a draft…",
      "tags": [
        "cs",
        "hardware"
      ]
    },
    {
      "id": "a756c297-8f85-435c-937f-9dff95b770ca",
      "title": "Learn OpenGL, extensive tutorial resource for learning Modern OpenGL",
      "url": "https://learnopengl.com",
      "savedAt": "2024-06-09T14:20:08.000Z",
      "description": "Learn OpenGL . com provides good and clear modern 3.3+ OpenGL tutorials with clear examples. A great resource to learn modern OpenGL aimed at beginners.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "e7771f99-a4ce-4720-82ff-2aae1e4f3d91",
      "title": "Regular, Recursive, Restricted",
      "url": "https://matklad.github.io/2024/06/04/regular-recursive-restricted.html",
      "savedAt": "2024-06-08T17:45:10.000Z",
      "description": "A post/question about formal grammars, wherein I search for a good formalism for describing infix\nexpressions.",
      "tags": [
        "cs",
        "programming-languages"
      ]
    },
    {
      "id": "b01d8c33-4892-4b8e-ade0-7ec2756ff5e2",
      "title": "Feynman's Razor - by Defender of the Basic",
      "url": "https://defenderofthebasic.substack.com/p/feynmans-razor",
      "savedAt": "2024-06-08T16:47:17.000Z",
      "description": "If an expert can't understand your explanation, you've dumbed it down too much!",
      "tags": [
        "interesting"
      ]
    },
    {
      "id": "2b22ac97-48f9-4602-b553-28a5a033969c",
      "title": "Database anomalies and isolation levels |",
      "url": "https://poorlydefinedbehaviour.github.io/posts/isolation_levels/",
      "savedAt": "2024-06-08T16:10:25.000Z",
      "description": "Anomalies An anomaly or read phenomena can happen when a transaction reads data that may have been modified by another concurrent transaction.\nDirty read A dirty read happens when a transaction T1 reads data that has been modified by a concurrent transaction T2 that has not has been committed or rolled back yet. T1 ends up working with stale data if T2 does not commit.\nT2 starts executing and sets x to a new value, T1 starts executing and reads x, the value of x is the value just set by T2, T2 rolls back, the value of x is not persisted to the database but T1 will move forward with the stale value of x that was written before T2 rolled back.",
      "tags": [
        "cs",
        "database"
      ]
    },
    {
      "id": "f52dec4e-60b2-4f14-a5f2-52627e53bd9f",
      "title": "What Color is Your Function? – journal.stuffwithstuff.com",
      "url": "https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/",
      "savedAt": "2024-06-07T17:19:13.000Z",
      "description": "I don’t know about you, but nothing gets me going in the morning quite like a\ngood old fashioned programming language rant. It stirs the blood to see someone\nskewer one of those “blub” languages the plebians use, muddling through\ntheir day with it between furtive visits to StackOverflow.",
      "tags": [
        "cs",
        "programming"
      ]
    },
    {
      "id": "7d57b4f6-d1ab-4e35-adc0-e17e196fc44d",
      "title": "Biohacking Lite",
      "url": "https://karpathy.github.io/2020/06/11/biohacking-lite/",
      "savedAt": "2024-06-05T01:04:11.000Z",
      "description": "Musings of a Computer Scientist.",
      "tags": [
        "health"
      ]
    },
    {
      "id": "4e614f8c-8aa3-43b4-8cd4-2a516d6ed477",
      "title": "Work hard and take everything really seriously - macwright.com",
      "url": "https://macwright.com/2024/01/28/work-hard-and-take-everything-seriously",
      "savedAt": "2024-06-04T00:35:43.000Z",
      "description": "Hustlebro thesis",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "dd637411-f1ce-410c-bd68-32b9df81ff37",
      "title": "Productivity Versus Alignment",
      "url": "https://www.zaxis.page/p/productivity-versus-alignment",
      "savedAt": "2024-06-02T20:42:56.000Z",
      "description": "One of the many trade-offs companies face",
      "tags": [
        "career",
        "management"
      ]
    },
    {
      "id": "9f0d95bc-c5b5-41ed-aee0-79799f3a08e2",
      "title": "Systems: The Purpose of a System is What It Does - Anil Dash",
      "url": "https://www.anildash.com/2024/05/29/systems-the-purpose-of-a-system/",
      "savedAt": "2024-06-02T20:18:03.000Z",
      "description": "A blog about making culture. Since 1999.",
      "tags": [
        "cool",
        "systems-theory"
      ]
    },
    {
      "id": "1708be23-2f28-4b22-ba76-e194a980ad5d",
      "title": "The Design Space of Wikis",
      "url": "https://borretti.me/article/the-design-space-of-wikis",
      "savedAt": "2024-06-02T16:03:29.000Z",
      "description": "An exploration of the design space of wikis.",
      "tags": [
        "writing"
      ]
    },
    {
      "id": "f8b17718-8fa2-4372-a14d-eeaab86a0a5d",
      "title": "CRDT: Text Buffer - Made by Evan",
      "url": "https://madebyevan.com/algos/crdt-text-buffer/",
      "savedAt": "2024-06-01T14:31:37.000Z",
      "description": "Collaboratively editing strings of text is a common desire in peer-to-peer applications. For example, a note-taking\n    app might represent each document as a single collaboratively-edited string of text.",
      "tags": [
        "cs",
        "cs/distsys"
      ]
    },
    {
      "id": "981adf0e-6496-43cc-b1e0-b41184c569df",
      "title": "Be findable - by Thorsten Ball - Register Spill",
      "url": "https://substack.com/home/post/p-145191830?source=queue",
      "savedAt": "2024-06-01T13:46:56.000Z",
      "description": "“But isn’t that self-promotion?”, said with a disgusted face. Or, equally disgusted: “Ugh, that’s bragging. Narcissistic. I don’t want to do that.” Or, frustrated: “Can’t I just do good work?” Whenever I hear one of these, I want to quote or, better yet, link to a snippet of an episode of",
      "tags": [
        "career"
      ]
    },
    {
      "id": "52b7cc47-70b8-4d2a-881d-d08e28e47b63",
      "title": "How (some) good corporate engineering blogs are written",
      "url": "https://danluu.com/corp-eng-blogs/",
      "savedAt": "2024-06-01T13:44:55.000Z",
      "description": "I've been comparing notes with people who run corporate engineering blogs and one thing that I think is curious is that it's pretty common for my personal blog to get more traffic than the entire corp eng blog for a company with a nine to ten figure valuation and it's not uncommon for my blog to get an order of magnitude more traffic.",
      "tags": [
        "career",
        "writing"
      ]
    },
    {
      "id": "a2773b8f-c321-4458-a952-6415f192bcbb",
      "title": "Cultures of writing. - by Karina Nguyen - sémaphore",
      "url": "https://semaphore.substack.com/p/cultures-of-writing",
      "savedAt": "2024-06-01T02:33:59.000Z",
      "description": "It's hard not to notice the pivotal role that strong writing cultures play in enabling innovation.",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "d3c158b6-d54a-49d2-a162-6c79a471e090",
      "title": "Developers aren't Nerds | 0xFF",
      "url": "https://0xff.nu/dev-and-nerd",
      "savedAt": "2024-05-31T01:05:01.000Z",
      "description": "For the longest of time, I was under the impression that developers and programmers, for the most part, are as or even more so interested in technology, tools, efficiency and productivity as I am. This came from the somewhat outdated understanding that the barrier of entry into programming was mentally taxing and required fucking around with compiling, development environment et al.",
      "tags": [
        "cool"
      ]
    },
    {
      "id": "e7019d27-cdf1-4cb8-82bd-c71691b9769d",
      "title": "Functional TypeScript #1: Algebraic Data Types",
      "url": "https://injuly.in/blog/ts-adt/",
      "savedAt": "2024-05-30T22:55:45.000Z",
      "description": "Introduction to typeclasses, ADTs, and HKTs TypeScript",
      "tags": [
        "cs",
        "type-theory"
      ]
    },
    {
      "id": "5d021595-7182-4db3-97c3-e756c127d125",
      "title": "Writing a Unix clone in about a month",
      "url": "https://drewdevault.com/2024/05/24/2024-05-24-Bunnix.html",
      "savedAt": "2024-05-30T21:34:43.000Z",
      "description": "I needed a bit of a break from “real work” recently, so I started a new\nprogramming project that was low-stakes and purely recreational. On April 21st,\nI set out to see how much of a Unix-like operating system for x86_64 targets\nthat I could put together in about a month. The result is\nBunnix. Not including days I didn’t work\non Bunnix for one reason or another, I spent 27 days on this project.",
      "tags": [
        "cs",
        "cool"
      ]
    },
    {
      "id": "d9d85529-bbe7-4764-a6fb-100dc9670faa",
      "title": "In the beginning… was the command line | thesephist.com",
      "url": "https://thesephist.com/posts/stephenson-command-line/",
      "savedAt": "2024-05-30T16:07:18.000Z",
      "description": "Neal Stephenson’s In the Beginning… Was the Command Line is one of the most profound pieces of writing about technology I’ve read. I found myself underscoring and highlighting numerous passages in this essay that reads equally as much like political propaganda, memoir, novella, and journalistic reporting all at once. If you have a couple of hours to spare, I’d recommend this essay only behind Greg Egan’s Diaspora, my favorite piece of science fiction, as a must-read.",
      "tags": [
        "cool",
        "interesting"
      ]
    },
    {
      "id": "62990bb6-e4aa-4d2c-ad32-287ece527606",
      "title": "Feynman's Garden @ marginalia.nu",
      "url": "https://www.marginalia.nu/log/a_108_feynman_revisited/",
      "savedAt": "2024-05-30T14:52:12.000Z",
      "description": "The best description of my problem solving process is the Feynman algorithm, which is sometimes presented as a joke where the hidden subtext is “be smart”, but I disagree. The “algorithm” is a surprisingly lucid description of how thinking works in the context of hard problems where the answer can’t simply be looked up or trivially broken down, iterated upon in a bottom-up fashion, or approached with similar methods.\nFeynman’s thinking algorithm is described like this:",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "8031997b-a484-43e9-8394-b53874eb2803",
      "title": "No Wrong Doors. | Irrational Exuberance",
      "url": "https://lethain.com/no-wrong-doors/",
      "savedAt": "2024-05-30T14:45:19.000Z",
      "description": "Some governmental agencies have started to adopt No Wrong Door policies, which aim to provide help–often health or mental health services–to individuals even if they show up to the wrong agency to request help. The core insight is that the employees at those agencies are far better equipped to navigate their own bureaucracies than an individual who knows nothing about the bureaucracy’s internal function.\nFor the most part, technology organizations are not complex bureaucracies, but sometimes they do seem to operate that way.",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "6c6221c5-d2be-4f76-ab3a-239691af13c9",
      "title": "Evolution of the ELF object file format | MaskRay",
      "url": "https://maskray.me/blog/2024-05-26-evolution-of-elf-object-file-format",
      "savedAt": "2024-05-30T14:37:12.000Z",
      "description": "The ELF object file format is adopted by many UNIX-like operating systems. While I've previously delved into the control structures of ELF and its predecessors, tracing the historical evolution of ELF",
      "tags": [
        "cs",
        "computer-history"
      ]
    },
    {
      "id": "c5177626-df90-460e-9c48-ceac3297a8b7",
      "title": "Old Dogs, new CSS Tricks | Max Böck",
      "url": "https://mxb.dev/blog/old-dogs-new-css-tricks/",
      "savedAt": "2024-05-30T14:37:01.000Z",
      "description": "Max Böck is a professional front-end developer based in Vienna, Austria.",
      "tags": [
        "cs",
        "web"
      ]
    },
    {
      "id": "74d79a32-9f37-4b19-bad0-44f6de968d96",
      "title": "Doing is normally distributed, learning is log-normal | Andrew Quinn's TILs",
      "url": "https://hiandrewquinn.github.io/til-site/posts/doing-is-normally-distributed-learning-is-log-normal/",
      "savedAt": "2024-05-30T13:11:35.000Z",
      "description": "There are few things I think about more than the essays on gwern.net, and there are few with as satisfying a theoretical payout to contemplate in my orb as his essay on “leaky pipelines”, aka log-normal distributions.\nThe skulk: Say you’re working on a Laravel web app. You’re about 90% sure you know how to start the app. You’re 80% sure you know how to handle the infra you’ll need to get it online.",
      "tags": [
        "learning"
      ]
    },
    {
      "id": "290ea84b-4920-44f8-98a5-47bbc626ac4b",
      "title": "Queueing – An interactive study of queueing strategies – Encore Blog",
      "url": "https://encore.dev/blog/queueing",
      "savedAt": "2024-05-30T12:56:27.000Z",
      "description": "In this blog, we go on an interactive journey to understand common queueing strategies for handling HTTP requests.",
      "tags": [
        "cs",
        "learning"
      ]
    },
    {
      "id": "1242ff8d-bf06-4d94-9085-ada6e473a187",
      "title": "How Far Can I Legally Make a Scheduled I Substance?",
      "url": "https://www.youtube.com/watch?v=gAMipuwWfAY",
      "savedAt": "2024-05-30T12:22:46.000Z",
      "description": "Today we ALMOST make 2,5-DMA. 2,5-DMA by itself is a Schedule I drug in the USA. However, we can almost make it and bypass anything illegal. I hope you enjoy the video!\n\nSources:\nhttps://en.wikipedia.org/wiki/Controlled_Substances_Act#Schedule_I_drugs\nhttps://isomerdesign.com/PiHKAL/read.php?id=54&domain=pk\nhttps://isomerdesign.com/PiHKAL/read.php?domain=pk&id=20#rxa12389\n\nSOCIALS:\nPatreon: patreon.com/Chemdelic \nInstagram:  https://www.instagram.com/chemdelic/\nDiscord:  https://discord.com/invite/dmfMKupj9W\nCashapp: $ChemdelicLLC\nMerch: https://chemdelic-shop.fourthwall.com/\n\nDisclaimer:\nThe content provided in these videos is for entertainment or educational purposes only and should not be attempted or replicated under any circumstances. Viewers are strongly advised against attempting to recreate any of the actions, stunts, or activities depicted, as they may involve significant risk of injury, legal liability, or other harm. By choosing to engage in any similar activities, individuals do so at their own risk and assume full responsibility for any resulting consequences. The creators of these videos will not be held liable for any damages, injuries, or legal issues arising from viewers attempting to replicate the content. Viewer discretion is advised, and all viewers are encouraged to exercise sound judgment and respect all applicable laws and safety guidelines.",
      "tags": [
        "cool",
        "type/video"
      ]
    },
    {
      "id": "ab68d4d0-63ef-4450-b512-c92a46916ffa",
      "title": "Megaparsec tutorial",
      "url": "https://markkarpov.com/tutorial/megaparsec.html",
      "savedAt": "2024-05-29T00:29:38.000Z",
      "description": "Published on February 23, 2019, last updated October 30, 2021",
      "tags": [
        "cs",
        "functional-programming"
      ]
    },
    {
      "id": "11978bba-901f-4d32-ba41-f8d5eea97da9",
      "title": "Ilya 30u30",
      "url": "https://arc.net/folder/D0472A20-9C20-4D3F-B145-D2865C0A9FEE",
      "savedAt": "2024-05-28T12:49:36.000Z",
      "description": "Ilya 30u30",
      "tags": [
        "cs/ai",
        "cs",
        "resource/list"
      ]
    },
    {
      "id": "0827a63b-b1f6-4a6e-8ebf-deca77144c7a",
      "title": "Write yourself a Git!",
      "url": "https://wyag.thb.lt",
      "savedAt": "2024-05-27T15:40:59.000Z",
      "description": null,
      "tags": [
        "learning",
        "cs"
      ]
    },
    {
      "id": "242ffe07-e7d8-4124-b335-a02a36c2586a",
      "title": "The Back-to-Basics Readings of 2012 | All Things Distributed",
      "url": "https://www.allthingsdistributed.com/2012/12/paper-readings-2012.html",
      "savedAt": "2024-05-24T03:05:32.000Z",
      "description": "After the AWS re: Invent conference I spent two weeks in Europe for the last customer visits of the year. I have since returned and am now in New York City enjoying a few days of winding down the last activities of the year before spending the holidays here with family. Do not expect too many blog posts or twitter updates. Although there are still a few very exciting AWS news updates to happen this year.",
      "tags": [
        "cs/distsys",
        "for-later",
        "resource/list"
      ]
    },
    {
      "id": "1b1217a1-ff3c-4857-b43b-daa8a141fb60",
      "title": "The Power of the Marginal",
      "url": "https://paulgraham.com/marginal.html",
      "savedAt": "2024-05-23T02:43:06.000Z",
      "description": "June 2006(This essay is derived from talks at Usenix 2006 and\nRailsconf 2006.)A couple years ago my friend Trevor and I went to look at the Apple\ngarage.  As we stood there, he said that as a kid growing up in\nSaskatchewan he'd been amazed at the dedication Jobs and Wozniak\nmust have had to work in a garage.\"Those guys must have been\nfreezing!\"That's one of California's hidden advantages: the mild climate means\nthere's lots of marginal space.  In cold places that margin gets\ntrimmed off.  There's a sharper line between outside and inside,\nand only projects that are officially sanctioned — by organizations,\nor parents, or wives, or at least by oneself — get proper indoor\nspace.  That raises the activation energy for new ideas.  You can't\njust tinker. You have to justify.Some of Silicon Valley's most famous companies began in garages:\nHewlett-Packard in 1938, Apple in 1976, Google in 1998.  In Apple's\ncase the garage story is a bit of an urban legend.  Woz says all\nthey did there was assemble some computers, and that he did all the\nactual design of the Apple I and Apple II in his apartment or his\ncube at HP.  \n[1]\nThis was apparently too marginal even for Apple's PR\npeople.By conventional standards, Jobs and Wozniak were marginal people\ntoo.  Obviously they were smart, but they can't have looked good\non paper.  They were at the time a pair of college dropouts with\nabout three years of school between them, and hippies to boot.\nTheir previous business experience consisted of making \"blue boxes\"\nto hack into the phone system, a business with the rare distinction\nof being both illegal and unprofitable.OutsidersNow a startup operating out of a garage in Silicon Valley would\nfeel part of an exalted tradition, like the poet in his garret, or\nthe painter who can't afford to heat his studio and thus has to\nwear a beret indoors.  But in 1976 it didn't seem so cool.  The\nworld hadn't yet realized that starting a computer company was in\nthe same category as being a writer or a painter. It hadn't been\nfor long.  Only in the preceding couple years had the dramatic fall\nin the cost of hardware allowed outsiders to compete.In 1976, everyone looked down on a company operating out of a garage,\nincluding the founders.  One of the first things Jobs did when they\ngot some money was to rent office space.  He wanted Apple to seem\nlike a real company.They already had something few real companies ever have: a fabulously well\ndesigned product.  You'd think they'd have had more confidence.\nBut I've talked to a lot of startup founders, and it's always this\nway.  They've built something that's going to change the world, and\nthey're worried about some nit like not having proper business\ncards.That's the paradox I want to explore: great new things often come\nfrom the margins, and yet the people who discover them are looked\ndown on by everyone, including themselves.It's an old idea that new things come from the margins. I want to\nexamine its internal structure.  Why do great ideas come from the\nmargins?  What kind of ideas?  And is there anything we can do to\nencourage the process?InsidersOne reason so many good ideas come from the margin is simply that\nthere's so much of it. There have to be more outsiders than insiders,\nif insider means anything.  If the number of outsiders is huge it\nwill always seem as if a lot of ideas come from them, even if few\ndo per capita.  But I think there's more going on than this.  There\nare real disadvantages to being an insider, and in some kinds of\nwork they can outweigh the advantages.Imagine, for example, what would happen if the government decided\nto commission someone to write an official Great American Novel.\nFirst there'd be a huge ideological squabble over who to choose.\nMost of the best writers would be excluded for having offended one\nside or the other.  Of the remainder, the smart ones would refuse\nsuch a job, leaving only a few with the wrong sort of ambition.\nThe committee would choose one at the height of his career — that\nis, someone whose best work was behind him — and hand over the\nproject with copious free advice about how the book should show in\npositive terms the strength and diversity of the American people,\netc, etc.The unfortunate writer would then sit down to work with a huge\nweight of expectation on his shoulders.  Not wanting to blow such\na public commission, he'd play it safe.  This book had better command\nrespect, and the way to ensure that would be to make it a tragedy.\nAudiences have to be enticed to laugh, but if you kill people they\nfeel obliged to take you seriously.  As everyone knows, America\nplus tragedy equals the Civil War, so that's what it would have to\nbe about. When finally\ncompleted twelve years later, the book would be a 900-page pastiche\nof existing popular novels — roughly Gone with the Wind plus\nRoots.  But its bulk and celebrity would make it a bestseller\nfor a few months, until blown out of the water by a talk-show host's\nautobiography.  The book would be made into a movie and thereupon\nforgotten, except by the more waspish sort of reviewers, among whom\nit would be a byword for bogusness like Milli Vanilli or Battlefield\nEarth.Maybe I got a little carried away with this example.  And yet is\nthis not at each point the way such a project would play out?  The\ngovernment knows better than to get into the novel business, but\nin other fields where they have a natural monopoly, like nuclear\nwaste dumps, aircraft carriers, and regime change, you'd find plenty\nof projects isomorphic to this one — and indeed, plenty that were\nless successful.This little thought experiment suggests a few of the disadvantages\nof insider projects: the selection of the wrong kind of people, the\nexcessive scope, the inability to take risks, the need to seem\nserious, the weight of expectations, the power of vested interests,\nthe undiscerning audience, and perhaps most dangerous, the tendency\nof such work to become a duty rather than a pleasure.TestsA world with outsiders and insiders implies some kind of test for\ndistinguishing between them.  And the trouble with most tests for\nselecting elites is that there are two ways to pass them: to be\ngood at what they try to measure, and to be good at hacking the\ntest itself.So the first question to ask about a field is how honest its tests\nare, because this tells you what it means to be an outsider.  This\ntells you how much to trust your instincts when you disagree with\nauthorities, whether it's worth going through the usual channels\nto become one yourself, and perhaps whether you want to work in\nthis field at all.Tests are least hackable when there are consistent standards for\nquality, and the people running the test really care about its\nintegrity.  Admissions to PhD programs in the hard sciences are\nfairly honest, for example.  The professors will get whoever they\nadmit as their own grad students, so they try hard to choose well,\nand they have a fair amount of data to go on.  Whereas undergraduate\nadmissions seem to be much more hackable.One way to tell whether a field has consistent standards is the\noverlap between the leading practitioners and the people who teach\nthe subject in universities.  At one end of the scale you have\nfields like math and physics, where nearly all the teachers are\namong the best practitioners.  In the middle are medicine, law,\nhistory, architecture, and computer science, where many are.  At\nthe bottom are business, literature, and the visual arts, where\nthere's almost no overlap between the teachers and the leading\npractitioners.  It's this end that gives rise to phrases like \"those\nwho can't do, teach.\"Incidentally, this scale might be helpful in deciding what to study\nin college.  When I was in college the rule seemed to be that you\nshould study whatever you were most interested in.  But in retrospect\nyou're probably better off studying something moderately interesting\nwith someone who's good at it than something very interesting with\nsomeone who isn't.  You often hear people say that you shouldn't\nmajor in business in college, but this is actually an instance of\na more general rule: don't learn things from teachers who are bad\nat them.How much you should worry about being an outsider depends on the\nquality of the insiders.  If you're an amateur mathematician and\nthink you've solved a famous open problem, better go back and check.\nWhen I was in grad school, a friend in the math department had the\njob of replying to people who sent in proofs of Fermat's last theorem\nand so on, and it did not seem as if he saw it as a valuable source\nof tips — more like manning a mental health hotline.  Whereas if\nthe stuff you're writing seems different from what English professors\nare interested in, that's not necessarily a problem.Anti-TestsWhere the method of selecting the elite is thoroughly corrupt, most\nof the good people will be outsiders.  In art, for example, the\nimage of the poor, misunderstood genius is not just one possible\nimage of a great artist: it's the standard image.  I'm not\nsaying it's correct, incidentally, but it is telling how well this\nimage has stuck.  You couldn't make a rap like that stick to math\nor medicine.  \n[2]If it's corrupt enough, a test becomes an anti-test, filtering out\nthe people it should select by making them to do things only the\nwrong people would do.  Popularity in high school\nseems to be such a test.  There are plenty of similar ones in the grownup\nworld.  For example, rising up through the hierarchy of the average\nbig company demands an attention to politics few thoughtful people\ncould spare.\n[3]\nSomeone like Bill Gates can grow a company under\nhim, but it's hard to imagine him having the patience to climb the\ncorporate ladder at General Electric — or Microsoft, actually.It's kind of strange when you think about it, because lord-of-the-flies\nschools and bureaucratic companies are both the default.  There are\nprobably a lot of people who go from one to the other and never\nrealize the whole world doesn't work this way.I think that's one reason big companies are so often blindsided by\nstartups.  \nPeople at big companies don't realize the extent to which\nthey live in an environment that is one large, ongoing test for the\nwrong qualities.If you're an outsider, your best chances for beating insiders are\nobviously in fields where corrupt tests select a lame elite.  But\nthere's a catch: if the tests are corrupt, your victory won't be\nrecognized, at least in your lifetime.  You may feel you don't need\nthat, but history suggests it's dangerous to work in fields with\ncorrupt tests.  You may beat the insiders, and yet not do as good\nwork, on an absolute scale, as you would in a field that was more\nhonest.Standards in art, for example, were almost as corrupt in the first\nhalf of the eighteenth century as they are today.  This was the era\nof those fluffy idealized portraits of countesses with their lapdogs.\nChardin \ndecided to skip all that and paint ordinary things as he\nsaw them.  He's now considered the best of that period — and yet\nnot the equal of Leonardo or Bellini or Memling, who all had the\nadditional encouragement of honest standards.It can be worth participating in a corrupt contest, however, if\nit's followed by another that isn't corrupt.  For example, it would\nbe worth competing with a company that can spend more than you on\nmarketing, as long as you can survive to the next round, when\ncustomers compare your actual products.  Similarly, you shouldn't\nbe discouraged by the comparatively corrupt test of college admissions,\nbecause it's followed immediately by less hackable tests.\n[4]RiskEven in a field with honest tests, there are still advantages to\nbeing an outsider.  The most obvious is that outsiders have nothing\nto lose.  They can do risky things, and if they fail, so what?  Few\nwill even notice.The eminent, on the other hand, are weighed down by their eminence.\nEminence is like a suit: it impresses the wrong people, and it\nconstrains the wearer.Outsiders should realize the advantage they have here.  Being able\nto take risks is hugely valuable.  Everyone values safety too much,\nboth the obscure and the eminent.  No one wants to look like a fool.\nBut it's very useful to be able to.  If most of your ideas aren't\nstupid, you're probably being too conservative.  You're not bracketing\nthe problem.Lord Acton said we should judge talent at its best and character\nat its worst.  For example, if you write one great book and ten bad\nones, you still count as a great writer — or at least, a better\nwriter than someone who wrote eleven that were merely good.  Whereas\nif you're a quiet, law-abiding citizen most of the time but\noccasionally cut someone up and bury them in your backyard, you're\na bad guy.Almost everyone makes the mistake of treating ideas as if they were\nindications of character rather than talent — as if having a stupid\nidea made you stupid.   There's a huge weight of tradition advising\nus to play it safe.  \"Even a fool is thought wise if he keeps\nsilent,\" says the Old Testament (Proverbs 17:28).Well, that may be fine advice for a bunch of goatherds in Bronze\nAge Palestine.  There conservatism would be the order of the day.\nBut times have changed.  It might still be reasonable to stick with\nthe Old Testament in political questions, but materially the world\nnow has a lot more state.  Tradition is less of a guide, not just\nbecause things change faster, but because the space of possibilities\nis so large.   The more complicated the world gets, the more valuable\nit is to be willing to look like a fool.DelegationAnd yet the more successful people become, the more heat they get\nif they screw up — or even seem to screw up.  In this respect, as\nin many others, the eminent are prisoners of their own success.  So\nthe best way to understand the advantages of being an outsider may\nbe to look at the disadvantages of being an insider.If you ask eminent people what's wrong with their lives, the first\nthing they'll complain about is the lack of time.  A friend of mine\nat Google is fairly high up in the company and went to work for\nthem long before they went public.  In other words, he's now rich\nenough not to have to work.  I asked him if he could still endure\nthe annoyances of having a job, now that he didn't have to.  And\nhe said that there weren't really any annoyances, except — and he\ngot a wistful look when he said this — that he got so much\nemail.The eminent feel like everyone wants to take a bite out of them.\nThe problem is so widespread that people pretending to be eminent\ndo it by pretending to be overstretched.The lives of the eminent become scheduled, and that's not good for\nthinking.  One of the great advantages of being an outsider is long,\nuninterrupted blocks of time.  That's what I remember about grad\nschool: apparently endless supplies of time, which I spent worrying\nabout, but not writing, my dissertation.  Obscurity is like health\nfood — unpleasant, perhaps, but good for you.  Whereas fame tends\nto be like the alcohol produced by fermentation. When it reaches\na certain concentration, it kills off the yeast that produced it.The eminent generally respond to the shortage of time by turning\ninto managers.  They don't have time to work.  They're surrounded\nby junior people they're supposed to help or supervise.  The obvious\nsolution is to have the junior people do the work.  Some good\nstuff happens this way, but there are problems it doesn't work so\nwell for: the kind where it helps to have everything in one head.For example, it recently emerged that the famous glass artist Dale\nChihuly hasn't actually blown glass for 27 years.  He has assistants\ndo the work for him.  But one of the most valuable sources of ideas\nin the visual arts is the resistance of the medium.  That's why oil\npaintings look so different from watercolors.  In principle you\ncould make any mark in any medium; in practice the medium steers\nyou.  And if you're no longer doing the work yourself, you stop\nlearning from this.So if you want to beat those eminent enough to delegate, one way\nto do it is to take advantage of direct contact with the medium.\nIn the arts it's obvious how: blow your own glass, edit your own\nfilms, stage your own plays.  And in the process pay close attention\nto accidents and to new ideas you have on the fly.  This technique\ncan be generalized to any sort of work: if you're an outsider, don't\nbe ruled by plans.  Planning is often just a weakness forced on\nthose who delegate.Is there a general rule for finding problems best solved in one\nhead?  Well, you can manufacture them by taking any project usually\ndone by multiple people and trying to do it all yourself.  Wozniak's\nwork was a classic example: he did everything himself, hardware and\nsoftware, and the result was miraculous.  He claims not one bug was\never found in the Apple II, in either hardware or software.Another way to find good problems to solve in one head is to focus\non the grooves in the chocolate bar — the places where tasks are\ndivided when they're split between several people.  If you want to\nbeat delegation, focus on a vertical slice: for example, be both\nwriter and editor, or both design buildings and construct them.One especially good groove to span is the one between tools and\nthings made with them.  For example, programming languages and\napplications are usually written by different people, and this is\nresponsible for a lot of the worst flaws in \nprogramming languages.\nI think every language should be designed simultaneously with a\nlarge application written in it, the way C was with Unix.Techniques for competing with delegation translate well into business,\nbecause delegation is endemic there.  Instead of avoiding it as a\ndrawback of senility, many companies embrace it as a sign of maturity.\nIn big companies software is often designed, implemented, and sold\nby three separate types of people.  In startups one person may have\nto do all three.  And though this feels stressful, it's one reason\nstartups win.  The needs of customers and the means of satisfying\nthem are all in one head.FocusThe very skill of insiders can be a weakness.  Once someone is good\nat something, they tend to spend all their time doing that.  This\nkind of focus is very valuable, actually.  Much of the skill of\nexperts is the ability to ignore false trails.  But focus has\ndrawbacks: you don't learn from other fields, and when a new approach\narrives, you may be the last to notice.For outsiders this translates into two ways to win.  One is to work\non a variety of things.  Since you can't derive as much benefit\n(yet) from a narrow focus, you may as well cast a wider net and\nderive what benefit you can from similarities between fields.  Just\nas you can compete with delegation by working on larger vertical\nslices, you can compete with specialization by working on larger\nhorizontal slices — by both writing and illustrating your book, for\nexample.The second way to compete with focus is to see what focus overlooks.\nIn particular, new things.  So if you're not good at anything yet,\nconsider working on something so new that no one else is either.\nIt won't have any prestige yet, if no one is good at it, but you'll\nhave it all to yourself.The potential of a new medium is usually underestimated, precisely\nbecause no one has yet explored its possibilities.  Before \nDurer\ntried making engravings, no one took them very seriously.  Engraving\nwas for making little devotional images — basically fifteenth century\nbaseball cards of saints.  Trying to make masterpieces in this\nmedium must have seemed to Durer's contemporaries the way that,\nsay, making masterpieces in \ncomics \nmight seem to the average person\ntoday.In the computer world we get not new mediums but new platforms: the\nminicomputer, the microprocessor, the web-based application.  At\nfirst they're always dismissed as being unsuitable for real work.\nAnd yet someone always decides to try anyway, and it turns out you\ncan do more than anyone expected.  So in the future when you hear\npeople say of a new platform: yeah, it's popular and cheap, but not\nready yet for real work, jump on it.As well as being more comfortable working on established lines,\ninsiders generally have a vested interest in perpetuating them.\nThe professor who made his reputation by discovering some new idea\nis not likely to be the one to discover its replacement.  This is\nparticularly true with companies, who have not only skill and pride\nanchoring them to the status quo, but money as well. The Achilles\nheel of successful companies is their inability to cannibalize\nthemselves.  Many innovations consist of replacing something with\na cheaper alternative, and companies just don't want to see a path\nwhose immediate effect is to cut an existing source of revenue.So if you're an outsider you should actively seek out contrarian\nprojects.  Instead of working on things the eminent have made\nprestigious, work on things that could steal that prestige.The really juicy new approaches are not the ones insiders reject\nas impossible, but those they ignore as undignified.  For example,\nafter Wozniak designed the Apple II he offered it first to his\nemployer, HP.  They passed.  One of the reasons was that, to save\nmoney, he'd designed the Apple II to use a TV as a monitor, and HP\nfelt they couldn't produce anything so declasse.LessWozniak used a TV as a monitor for the simple reason that he couldn't\nafford a monitor.  Outsiders are not merely free but compelled to\nmake things that are cheap and lightweight.  And both are good bets\nfor growth: cheap things spread faster, and lightweight things\nevolve faster.The eminent, on the other hand, are almost forced to work on a large\nscale.  Instead of garden sheds they must design huge art museums.\nOne reason they work on big things is that they can: like our\nhypothetical novelist, they're flattered by such opportunities.\nThey also know that big projects will by their sheer bulk impress\nthe audience.  A garden shed, however lovely, would be easy to\nignore; a few might even snicker at it.  You can't snicker at a\ngiant museum, no matter how much you dislike it.  And finally, there\nare all those people the eminent have working for them; they have\nto choose projects that can keep them all busy.Outsiders are free of all this.  They can work on small things, and\nthere's something very pleasing about small things.  Small things\ncan be perfect; big ones always have something wrong with them.\nBut there's a \nmagic \nin small things that goes beyond such rational\nexplanations.  All kids know it.  Small things have more personality.Plus making them is more fun.  You can do what you want; you don't\nhave to satisfy committees.  And perhaps most important, small\nthings can be done fast.  The prospect of seeing the finished project\nhangs in the air like the smell of dinner cooking.  If you work\nfast, maybe you could have it done tonight.Working on small things is also a good way to learn.  The most\nimportant kinds of learning happen one project at a time.  (\"Next\ntime, I won't...\")  The faster you cycle through projects, the\nfaster you'll evolve.Plain materials have a charm like small scale.  And in addition\nthere's the challenge of making do with less.  Every designer's\nears perk up at the mention of that game, because it's a game you\ncan't lose.  Like the JV playing the varsity, if you even tie, you\nwin.  So paradoxically there are cases where fewer resources yield\nbetter results, because the designers' pleasure at their own ingenuity\nmore than compensates.\n[5]So if you're an outsider, take advantage of your ability to make\nsmall and inexpensive things.  Cultivate the pleasure and simplicity\nof that kind of work; one day you'll miss it.ResponsibilityWhen you're old and eminent, what will you miss about being young\nand obscure?  What people seem to miss most is the lack of\nresponsibilities.Responsibility is an occupational disease of eminence.  In principle\nyou could avoid it, just as in principle you could avoid getting\nfat as you get old, but few do.  I sometimes suspect that responsibility\nis a trap and that the most virtuous route would be to shirk it,\nbut regardless it's certainly constraining.When you're an outsider you're constrained too, of course.  You're\nshort of money, for example.  But that constrains you in different\nways.  How does responsibility constrain you?  The worst thing is\nthat it allows you not to focus on real work.  Just as the most\ndangerous forms of \nprocrastination \nare those that seem like work,\nthe danger of responsibilities is not just that they can consume a\nwhole day, but that they can do it without setting off the\nkind of alarms you'd set off if you spent a whole day sitting on a\npark bench.A lot of the pain of being an outsider is being aware of one's own\nprocrastination.  But this is actually a good thing.  You're at\nleast close enough to work that the smell of it makes you hungry.As an outsider, you're just one step away from getting things done.\nA huge step, admittedly, and one that most people never seem to\nmake, but only one step.  If you can summon up the energy to get\nstarted, you can work on projects with an intensity (in both senses)\nthat few insiders can match.  For insiders work turns into a duty,\nladen with responsibilities and expectations.  It's never so pure\nas it was when they were young.Work like a dog being taken for a walk, instead of an ox being yoked\nto the plow.  That's what they miss.AudienceA lot of outsiders make the mistake of doing the opposite; they\nadmire the eminent so much that they copy even their flaws.  Copying\nis a good way to learn, but copy the right things.  When I was in\ncollege I imitated the pompous diction of famous professors.  But\nthis wasn't what made them eminent — it was more a flaw their\neminence had allowed them to sink into.   Imitating it was like\npretending to have gout in order to seem rich.Half the distinguishing qualities of the eminent are actually\ndisadvantages.  Imitating these is not only a waste of time, but\nwill make you seem a fool to your models, who are often well aware\nof it.What are the genuine advantages of being an insider?  The greatest\nis an audience.  It often seems to outsiders that the great advantage\nof insiders is money — that they have the resources to do what they\nwant.  But so do people who inherit money, and that doesn't seem\nto help, not as much as an audience.  It's good for morale to know\npeople want to see what you're making; it draws work out of you.If I'm right that the defining advantage of insiders is an audience,\nthen we live in exciting times, because just in the last ten years\nthe Internet has made audiences a lot more liquid.  Outsiders don't\nhave to content themselves anymore with a proxy audience of a few\nsmart friends.  Now, thanks to the Internet, they can start to grow\nthemselves actual audiences.  This is great news for the marginal,\nwho retain the advantages of outsiders while increasingly being\nable to siphon off what had till recently been the prerogative of\nthe elite.Though the Web has been around for more than ten years, I think\nwe're just beginning to see its democratizing effects.  Outsiders\nare still learning how to steal audiences.  But more importantly,\naudiences are still learning how to be stolen — they're still just\nbeginning to realize how much \ndeeper bloggers can dig than\njournalists, how much\nmore interesting \na democratic news site can be than a\nfront page controlled by editors, and how much\nfunnier\na bunch of kids\nwith webcams can be than mass-produced sitcoms.The big media companies shouldn't worry that people will post their\ncopyrighted material on YouTube.  They should worry that people\nwill post their own stuff on YouTube, and audiences will watch that\ninstead.HackingIf I had to condense the power of the marginal into one sentence\nit would be: just try hacking something together.  That phrase draws\nin most threads I've mentioned here.   Hacking something together\nmeans deciding what to do as you're doing it, not a subordinate\nexecuting the vision of his boss.  It implies the result won't\nbe pretty, because it will be made quickly out of inadequate\nmaterials.  It may work, but it won't be the sort of thing the\neminent would want to put their name on.  Something hacked together\nmeans something that barely solves the problem, or maybe doesn't\nsolve the problem at all, but another you discovered en route.  But\nthat's ok, because the main value of that initial version is not the\nthing itself, but what it leads to.  Insiders who daren't walk\nthrough the mud in their nice clothes will never make it to the\nsolid ground on the other side.The word \"try\" is an especially valuable component.  I disagree\nhere with Yoda, who said there is no try.  There is try.  It implies\nthere's no punishment if you fail.  You're driven by curiosity\ninstead of duty.  That means the wind of procrastination will be\nin your favor: instead of avoiding this work, this will be what you\ndo as a way of avoiding other work.  And when you do it, you'll be\nin a better mood.  The more the work depends on imagination, the\nmore that matters, because most people have more ideas when they're\nhappy.If I could go back and redo my twenties, that would be one thing\nI'd do more of: just try hacking things together.  Like many people\nthat age, I spent a lot of time worrying about what I should do.\nI also spent some time trying to build stuff.  I should have spent\nless time worrying and more time building.  If you're not sure what\nto do, make something.Raymond Chandler's advice to thriller writers was \"When in doubt,\nhave a man come through a door with a gun in his hand.\"  He followed\nthat advice.  Judging from his books, he was often in doubt.  But\nthough the result is occasionally cheesy, it's never boring.  In\nlife, as in books, action is underrated.Fortunately the number of things you can just hack together keeps\nincreasing.   People fifty years ago would be astonished that one\ncould just hack together a movie, for example.  Now you can even\nhack together distribution.  Just make stuff and put it online.InappropriateIf you really want to score big, the place to focus is the margin\nof the margin: the territories only recently captured from the\ninsiders.  That's where you'll find the juiciest projects still\nundone, either because they seemed too risky, or simply because\nthere were too few insiders to explore everything.This is why I spend most of my time writing \nessays lately.  The\nwriting of essays used to be limited to those who could get them\npublished.  In principle you could have written them and just shown\nthem to your friends; in practice that didn't work.  \n[6]\nAn\nessayist needs the resistance of an audience, just as an engraver\nneeds the resistance of the plate.Up till a few years ago, writing essays was the ultimate insider's\ngame.  Domain experts were allowed to publish essays about their\nfield, but the pool allowed to write on general topics was about\neight people who went to the right parties in New York.  Now the\nreconquista has overrun this territory, and, not surprisingly, found\nit sparsely cultivated.  There are so many essays yet unwritten.\nThey tend to be the naughtier ones; the insiders have pretty much\nexhausted the motherhood and apple pie topics.This leads to my final suggestion: a technique for determining when\nyou're on the right track.  You're on the right track when people\ncomplain that you're unqualified, or that you've done something\ninappropriate.  If people are complaining, that means you're doing\nsomething rather than sitting around, which is the first step.  And\nif they're driven to such empty forms of complaint, that means\nyou've probably done something good.If you make something and people complain that it doesn't work,\nthat's a problem.  But if the worst thing they can hit you with is\nyour own status as an outsider, that implies that in every other\nrespect you've succeeded.  Pointing out that someone is unqualified\nis as desperate as resorting to racial slurs. It's just a legitimate\nsounding way of saying: we don't like your type around here.But the best thing of all is when people call what you're doing\ninappropriate.  I've been hearing this word all my life and I only\nrecently realized that it is, in fact, the sound of the homing\nbeacon.  \"Inappropriate\" is the null criticism.  It's merely the\nadjective form of \"I don't like it.\"So that, I think, should be the highest goal for the marginal.  Be\ninappropriate.  When you hear people saying that, you're golden.\nAnd they, incidentally, are busted.Notes[1]\nThe facts about Apple's early history are from an interview \nwith Steve \nWozniak in Jessica Livingston's \nFounders at Work.[2]\nAs usual the popular image is several decades behind reality.\nNow the misunderstood artist is not a chain-smoking drunk who pours\nhis soul into big, messy canvases that philistines see and say\n\"that's not art\" because it isn't a picture of anything.  The\nphilistines have now been trained that anything hung on a wall\nis art.  Now the misunderstood artist is a coffee-drinking vegan\ncartoonist whose work they see and say \"that's not art\" because it\nlooks like stuff they've seen in the Sunday paper.[3]\nIn fact this would do fairly well as a definition of politics:\nwhat determines rank in the absence of objective tests.[4]\nIn high school you're led to believe your whole future depends\non where you go to college, but it turns out only to buy you a couple\nyears. By your mid-twenties the people worth impressing\nalready judge you more by what\nyou've done than where you went to school.[5]\nManagers are presumably wondering, how can I make this miracle\nhappen?  How can I make the people working for me do more with less?\nUnfortunately the constraint probably has to be self-imposed.  If\nyou're expected to do more with less, then you're being\nstarved, not eating virtuously.[6]\nWithout the prospect of publication, the closest most people\ncome to writing essays is to write in a journal.  I find I never\nget as deeply into subjects as I do in proper essays.  As the name\nimplies, you don't go back and rewrite journal entries over\nand over for two weeks.Thanks to Sam Altman, Trevor Blackwell, Paul Buchheit, Sarah\nHarlin, Jessica Livingston, Jackie McDonough, Robert Morris, Olin\nShivers, and Chris Small for reading drafts of this, and to Chris\nSmall and Chad Fowler for inviting me to speak.",
      "tags": [
        "favorites",
        "self-improvement"
      ]
    },
    {
      "id": "271897b8-9daa-4af4-b148-42dd349f5cb3",
      "title": "A Road to Common Lisp / Steve Losh",
      "url": "https://stevelosh.com/blog/2018/08/a-road-to-common-lisp/",
      "savedAt": "2024-05-22T12:31:17.000Z",
      "description": "Posted on August 27th, 2018.",
      "tags": [
        "cs",
        "for-later",
        "programming-languages"
      ]
    },
    {
      "id": "197af79f-d877-4dc8-94af-4bb018f80f91",
      "title": "Tools That Make You Feel Empowered",
      "url": "https://www.zwhuang.dev/blog/empowering-tools",
      "savedAt": "2024-05-22T12:27:55.000Z",
      "description": "Zachary W. Huang",
      "tags": [
        "cs",
        "cool"
      ]
    },
    {
      "id": "8b3f2931-c7b5-4b1e-91dc-c13d86e63561",
      "title": "Semantic note-taking | cceckman, from the Internet",
      "url": "https://cceckman.com/writing/notes/",
      "savedAt": "2024-05-22T01:28:16.000Z",
      "description": "Early in my career,1 I learned a particular approach to taking meeting notes. I’ve gotten a lot of positive feedback about this over the years; here’s my attempt to explain the approach and why it’s effective.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "51e98773-f0ef-4ac1-beb3-b96155b12951",
      "title": "A New Way to Store Knowledge",
      "url": "https://breckyunits.com/scrollsets.html",
      "savedAt": "2024-05-22T01:21:47.000Z",
      "description": "HTML | TXT | PDF",
      "tags": [
        "cs",
        "cool"
      ]
    },
    {
      "id": "91e5e169-6542-472c-b815-8a95574aaff3",
      "title": "Guide: How to start a writing habit",
      "url": "https://writinghabit.com",
      "savedAt": "2024-05-20T11:21:31.000Z",
      "description": "A short guide to help you build a habit of writing consistently by Peter Suhm.",
      "tags": [
        "self-improvement",
        "writing"
      ]
    },
    {
      "id": "3e9ddcc3-1f58-4e56-98d3-74fa831f6da0",
      "title": "What I look for in empirical software papers • Buttondown",
      "url": "https://buttondown.email/hillelwayne/archive/what-i-look-for-in-empirical-software-papers/",
      "savedAt": "2024-05-20T11:08:45.000Z",
      "description": "Oh God it's already Thursday",
      "tags": [
        "cool"
      ]
    },
    {
      "id": "6ff6d6b5-c5f7-4d64-a1ce-439a1b26dc8a",
      "title": "The Misunderstood Stoic",
      "url": "https://bastian.rieck.me/blog/2019/stoicism/",
      "savedAt": "2024-05-20T02:23:23.000Z",
      "description": "I am a big proponent of Stoicism, the philosophy\npractised by, among others, Marcus Aurelius,\nalso known as the last of the ‘Five Good Emperors’ of Rome. I believe\nthat Stoicism, with its focus on conquering the impulses to react to\nexternal stimuli, has a lot to offer for our current society, which is\nso ripe with flashy baubles vying for our attention. In this article,\nI want to clarify two of the core beliefs of Stoicism, which tend to\nbe misunderstood.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "bf9bfbbb-ef15-45b6-9297-cd515e0fbeb5",
      "title": "Structured Procrastination",
      "url": "https://www.structuredprocrastination.com",
      "savedAt": "2024-05-20T01:49:20.000Z",
      "description": null,
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "5fd8cb1c-cf8b-4dd2-b870-e52992996a78",
      "title": "How and why to make a /now page on your site | Derek Sivers",
      "url": "https://sive.rs/now2",
      "savedAt": "2024-05-19T01:42:42.000Z",
      "description": "I used to wonder what my friend Benny Lewis was doing.\n\tHe has a website and social media accounts, but neither gave an overview of what he’s doing now.",
      "tags": [
        "writing"
      ]
    },
    {
      "id": "df36a324-84c3-4a56-bd32-3206e92904a0",
      "title": "Pmarchive · Pmarca Guide to Personal Productivity",
      "url": "https://pmarchive.com/guide_to_personal_productivity.html",
      "savedAt": "2024-05-18T15:09:48.000Z",
      "description": "An archive of the best articles from Marc Andreessen’s now defunct blog",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "fcc30c0c-f572-45fc-a28b-0232e6ab801d",
      "title": "So we built a Reverse Tunnel in Go over HTTP/3 and QUIC | Flipt Blog",
      "url": "https://blog.flipt.io/so-we-built-reverst",
      "savedAt": "2024-05-18T15:08:07.000Z",
      "description": "How we over-engineered a solution using some bleeding-edge tech",
      "tags": [
        "cs",
        "networking",
        "programming"
      ]
    },
    {
      "id": "99ba178c-1a01-4c19-9576-1467dedcdea7",
      "title": "Kim Young Jin - Ambitious but at peace",
      "url": "https://jugheadjones10.github.io/kim-young-jin/posts/ambitious-and-content.html",
      "savedAt": "2024-05-18T15:06:07.000Z",
      "description": "For most of my life I’ve felt a deep discontent myself.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "b3de3056-5c81-48b6-be0c-f12d210a43fb",
      "title": "From Any Spot on the Field - by Thorsten Ball",
      "url": "https://registerspill.thorstenball.com/p/from-any-spot-on-the-field",
      "savedAt": "2024-05-18T15:04:18.000Z",
      "description": "A few days ago, I came across this tweet from antirez, author of Redis: A soccer player can have a great idea of the game tactic and strategy, the sense of her/his buddies in the field of game, but anyway to be able to kick the ball well is absolutely required. It’s the same for programmers: I’m proud to be a coder.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "3af7077a-17f9-466e-9db4-195e6f037e20",
      "title": "Reading C type declarations",
      "url": "http://www.unixwiz.net/techtips/reading-cdecl.html",
      "savedAt": "2024-05-17T11:46:57.000Z",
      "description": "Even relatively new C programmers have no trouble reading simple\nC declarations such as",
      "tags": [
        "cs",
        "til"
      ]
    },
    {
      "id": "40852233-4d51-4c9e-a91a-4ea00775528e",
      "title": "Implementing MVCC and major SQL transaction isolation levels | notes.eatonphil.com",
      "url": "https://notes.eatonphil.com/2024-05-16-mvcc.html",
      "savedAt": "2024-05-17T00:48:02.000Z",
      "description": "Implementing MVCC and major SQL transaction isolation levels",
      "tags": [
        "cs",
        "database",
        "for-later"
      ]
    },
    {
      "id": "ea21c318-bb3b-47f7-b266-af09fe77ec3b",
      "title": "Bye Opam, Hello Nix | Emil Privér",
      "url": "https://priver.dev/blog/ocaml/bye-opam-hello-nix/",
      "savedAt": "2024-05-15T03:39:59.000Z",
      "description": "Article about replacing opam with nix for a easier life",
      "tags": [
        "cs",
        "programming-languages"
      ]
    },
    {
      "id": "44f62cbf-d21b-4b21-84b9-9c4718a00a2b",
      "title": "Start With Simple Tools",
      "url": "https://mikegrindle.com/posts/start-simple",
      "savedAt": "2024-05-15T03:39:04.000Z",
      "description": "A while back, a friend of mine was telling me about his experiences\nplaying an online multiplayer video game. The game, which essentially\ninvolves players blowing each other up, is not what I want to discuss\nhere. But our conversation did leave me with an anecdote that comes to\nmind as I write this post about tools.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "39b679bc-bf50-45b4-af23-504e4ea1147a",
      "title": "ISP Column - April 2024",
      "url": "https://www.potaroo.net/ispcol/2024-04/ipv6-prefixes.html",
      "savedAt": "2024-05-13T17:43:02.000Z",
      "description": "A column on things Internet",
      "tags": [
        "for-later",
        "networking"
      ]
    },
    {
      "id": "b6cf2638-3a42-41cd-a944-7c8fdb06e248",
      "title": "GPUs Go Brrr · Hazy Research",
      "url": "https://hazyresearch.stanford.edu/blog/2024-05-12-tk",
      "savedAt": "2024-05-13T10:17:08.000Z",
      "description": "how make gpu fast?",
      "tags": [
        "cs",
        "cool",
        "hardware"
      ]
    },
    {
      "id": "80f694f7-24a5-4e65-8a58-aac17c5ed54f",
      "title": "Professional corner-cutting : Havoc's Blog",
      "url": "https://blog.ometer.com/2016/05/04/professional-corner-cutting/",
      "savedAt": "2024-05-13T09:56:27.000Z",
      "description": "Steve Jobs famously cared about the unseen backs of cabinets. Antique furniture built with hand tools isn’t like that at all. Cabinetmakers made each part to the tolerance that mattered. The …",
      "tags": [
        "career",
        "startup"
      ]
    },
    {
      "id": "82b73dc8-e016-444e-a0f5-46a7417715a3",
      "title": "Exploring Hacker News by mapping and analyzing 40 million posts and comments for fun | Wilson Lin",
      "url": "https://blog.wilsonl.in/hackerverse/",
      "savedAt": "2024-05-10T01:15:02.000Z",
      "description": null,
      "tags": [
        "cs",
        "cool"
      ]
    },
    {
      "id": "d9836ec5-f96d-4bf0-a211-cf39a91b37cf",
      "title": "How NASA is Hacking Voyager 1 Back to Life - IEEE Spectrum",
      "url": "https://spectrum.ieee.org/voyager-1",
      "savedAt": "2024-05-10T00:41:51.000Z",
      "description": "<p>Engineers found space in the geriatric spacecraft’s memory to deal with a stuck bit</p>",
      "tags": [
        "cool"
      ]
    },
    {
      "id": "23d3111f-759b-4133-a6bf-21944f97a44b",
      "title": "Visualization Mnemonics for Software Principles - DaedTech",
      "url": "https://daedtech.com/visualization-mnemonics-for-software-principles/",
      "savedAt": "2024-05-10T00:30:40.000Z",
      "description": "Whether it’s because you want to be able to participate in software engineering discussions without having to surreptitiously look things up on your phone, or whether it’s because you have an interview coming up with a firm that wants you to be some kind of expert in OOP or something, you probably have at least […]",
      "tags": [
        "career",
        "cs"
      ]
    },
    {
      "id": "8ea98ca5-a5c5-45a2-be83-e2ef7d315224",
      "title": "pal-iii : Digital Equipment Corporation : Free Download, Borrow, and Streaming : Internet Archive",
      "url": "https://archive.org/details/pal-iii/pal-iii-1/page/n5/mode/2up",
      "savedAt": "2024-05-10T00:29:45.000Z",
      "description": "The DEC PAL III assembler for the PDP-8 minicomputer as of 16 Nov 1966.Source code is read from paper tape, absolute binary code is punched to paper tape, and...",
      "tags": [
        "computer-history"
      ]
    },
    {
      "id": "f21d24aa-8641-4985-ba94-9ec55f9b1322",
      "title": "ISP Router Design Mistakes | Brain Baking",
      "url": "https://brainbaking.com/post/2024/04/isp-router-design-mistakes/",
      "savedAt": "2024-05-09T22:41:23.000Z",
      "description": "Time for another design mistake, this time from our new Internet Service Provider (ISP). We switched …",
      "tags": [
        "networking"
      ]
    },
    {
      "id": "7edca1db-7feb-43c8-8857-144ae15c517f",
      "title": "Safety and Liveness Properties",
      "url": "https://www.hillelwayne.com/post/safety-and-liveness/",
      "savedAt": "2024-05-09T03:13:55.000Z",
      "description": "Some useful mental models from the world of formal methods.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "30163da4-3e39-4625-8e78-1c427a2cfeb5",
      "title": "Bollards: Why & What · Josh Thompson",
      "url": "https://josh.works/bollards",
      "savedAt": "2024-05-05T22:46:57.000Z",
      "description": "Naming something we see and benefit from every day",
      "tags": [
        "city",
        "cool"
      ]
    },
    {
      "id": "0aa84e78-1686-4d8a-88a7-ec45ef2391d0",
      "title": "How to style React applications while the world burns around us | Herb Caudill",
      "url": "https://herbcaudill.com/words/20201007-style-react-app",
      "savedAt": "2024-05-05T22:44:50.000Z",
      "description": "<p>What tools would you reach for today to style the UI for a \n<a href='https://medium.com/all-the-things/the-trouble-with-saas-279694551b25'>hyper-customizable app</a>? \nI just spent an unreasonable amount of time trying to understand the current landscape and settle on the perfect\nframework. I was surprised by what I found.</p>",
      "tags": [
        "framework/react",
        "web"
      ]
    },
    {
      "id": "576fa611-8390-4271-9ebf-54d2167e5da7",
      "title": "Chris's Wiki :: blog/tech/UEFIAndBIOSAndOtherPCTerms",
      "url": "https://utcc.utoronto.ca/~cks/space/blog/tech/UEFIAndBIOSAndOtherPCTerms",
      "savedAt": "2024-05-05T14:10:30.000Z",
      "description": "May  3, 2024",
      "tags": [
        "cs",
        "hardware"
      ]
    },
    {
      "id": "ed85a6a0-ed93-479c-a9f3-6602700bdf4a",
      "title": "\"Integration tests\" are just vibes • Buttondown",
      "url": "https://buttondown.email/hillelwayne/archive/integration-tests-are-just-vibes/",
      "savedAt": "2024-05-05T14:09:48.000Z",
      "description": "New blog post, and some thoughts on what makes an integration test an \"integration\" test.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "015c76e8-cb7e-4dd6-9b81-fe1d4a1ccede",
      "title": "The Time Linkerd Erased My Load Balancer",
      "url": "https://matduggan.com/the-time-linkerd-erased-my-load-balancer/",
      "savedAt": "2024-05-05T14:06:22.000Z",
      "description": "Due to a combination of issues with GKE and Linkerd, I ended up deleting my load balancer routes when I removed the Linkerd helm chart.",
      "tags": [
        "devops"
      ]
    },
    {
      "id": "77b3af85-87ac-44a0-9d7c-91211eb3e4b1",
      "title": "My favorite teacher - by Thorsten Ball - Register Spill",
      "url": "https://registerspill.thorstenball.com/p/my-favorite-teacher",
      "savedAt": "2024-05-05T03:35:50.000Z",
      "description": "My favorite teacher wasn’t a very popular guy. He was confident, had strong opinions, and didn’t exactly teach like the other teachers. He was our history & sociology teacher in 12th and 13th grade and he made us summarize. He made us summarize everything. Through summaries, he taught.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "2ead6777-2898-4a69-8453-1fcff6c555f3",
      "title": "Why Full Text Search is Hard",
      "url": "https://transactional.blog/blog/2023-why-full-text-search-is-hard",
      "savedAt": "2024-05-05T03:26:45.000Z",
      "description": "It’s easy to find documents containing \"large\" and \"elephant\".\nIt’s hard to find documents in German which have \"large\" and \"elephant\" together in a sentence, or words with similar meanings to large, and provide only the 10 most relevant documents.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "c3fdceca-83e6-47bb-ac86-36711ab18cb4",
      "title": "How to Build a $20 Billion Semiconductor Fab",
      "url": "https://www.construction-physics.com/p/how-to-build-a-20-billion-semiconductor",
      "savedAt": "2024-05-05T02:13:55.000Z",
      "description": "For the last several decades, one avenue of technological progress has towered over nearly everything else: semiconductors. Semiconductors are materials that can have their conductivity varied by many orders of magnitude, which makes it possible to selectively block and allow the flow of electrons. This property makes it possible to manufacture all sorts of electronic devices, not least of which is the digital computer.",
      "tags": [
        "cs",
        "economy"
      ]
    },
    {
      "id": "d4cfd7d9-4561-4b9e-9e93-cfd6e196e1f3",
      "title": "Do Things and Tell People",
      "url": "https://mikegrindle.com/posts/self-promotion",
      "savedAt": "2024-05-04T18:49:28.000Z",
      "description": "Lieutenant George: “I don’t like blowing my own\ntrumpet.”",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "38cf3bca-c17a-4c7f-9def-65c5b64f94c7",
      "title": "Figma’s journey to TypeScript | Figma Blog",
      "url": "https://www.figma.com/blog/figmas-journey-to-typescript-compiling-away-our-custom-programming-language/",
      "savedAt": "2024-05-04T17:58:03.000Z",
      "description": "Figma's team recently converted one of its codebases from a custom programming language to TypeScript without disrupting a single day of development.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "8a60dca0-105b-41aa-8544-5d39b0dfe427",
      "title": "Study of Historical Code | ℤ→ℤ",
      "url": "https://ztoz.blog/posts/code-study/",
      "savedAt": "2024-05-03T02:12:14.000Z",
      "description": "I’ve started studying a larger historical code base. Within this post, I want to summarize the sort of historical questions we might ask and notes on how to approach them.",
      "tags": [
        "cs",
        "computer-history"
      ]
    },
    {
      "id": "5df4dfa3-7305-4543-a095-7d6be8533b11",
      "title": "Tracking the Wins",
      "url": "https://sudorandom.dev/posts/tracking-the-wins/",
      "savedAt": "2024-05-03T02:11:01.000Z",
      "description": "Stay motivated and avoid burnout",
      "tags": [
        "career"
      ]
    },
    {
      "id": "35465994-2ed6-4c4d-b862-7d2cc7cb13f7",
      "title": "Abstract Heresies: Statements and Expressions",
      "url": "https://funcall.blogspot.com/2024/04/statements-and-expressions.html",
      "savedAt": "2024-05-02T10:12:13.000Z",
      "description": "A blog about computers, functional languages, Lisp, and Scheme.",
      "tags": [
        "cs",
        "programming-languages"
      ]
    },
    {
      "id": "1f4af28b-53d7-4abe-8730-d07141a80ecb",
      "title": "Ansible is a Lisp",
      "url": "https://astrid.tech/2024/05/01/0/ansible-is-a-lisp/",
      "savedAt": "2024-05-01T22:12:43.000Z",
      "description": "More specifically, Ansible is homoiconic and has syntactic macros",
      "tags": [
        "cs",
        "cool"
      ]
    },
    {
      "id": "09d2d7a3-d663-4030-9b62-fd4e8e0582db",
      "title": "Bytecode VMs in surprising places",
      "url": "https://dubroy.com/blog/bytecode-vms-in-surprising-places/",
      "savedAt": "2024-04-30T21:31:25.000Z",
      "description": "In response to a question on Twitter1, Richard Hipp wrote about why SQLite uses a bytecode VM for executing SQL statements.",
      "tags": [
        "cs",
        "cool",
        "hardware"
      ]
    },
    {
      "id": "12a02419-8b5f-4d98-9dbe-2665218e7840",
      "title": "Constraints on giving feedback. | Irrational Exuberance",
      "url": "https://lethain.com/constraints-on-giving-feedback/",
      "savedAt": "2024-04-29T23:34:14.000Z",
      "description": "Back when I was managing at Digg and Uber, I spent a lot of time delivering feedback to my management chain about issues in our organization. My intentions were good, but I alienated my management chain without accomplishing much. I also shared my concerns with my team, which I thought would help them understand the organization, but mostly isolated them in a Values Oasis or demoralized them instead.\nThose experiences taught me that pushing your organization to improve is essential leadership work, but organizations can only absorb so much improvement at a given time before they reject the person providing the feedback.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "6095b43b-0e45-4655-8ba6-f4c6b91e91fc",
      "title": "Inside the Super Nintendo cartridges",
      "url": "https://fabiensanglard.net/snes_carts/index.html",
      "savedAt": "2024-04-29T23:22:30.000Z",
      "description": "Inside the Super Nintendo cartridges",
      "tags": [
        "computer-history",
        "hardware"
      ]
    },
    {
      "id": "5c31797b-16f7-4084-bc4e-ca14c9de736b",
      "title": "Staring into the abyss as a core life skill | benkuhn.net",
      "url": "https://www.benkuhn.net/abyss/",
      "savedAt": "2024-04-29T16:11:16.000Z",
      "description": "thinking about scary things • examples from Wave • examples from elsewhere • finding a buddy • getting the timing right • a list of abyss questions",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "e9f5d370-10ca-477f-af70-c639fbfaacc5",
      "title": "Learn one thing at a time | Lawrence Jones",
      "url": "https://blog.lawrencejones.dev/learn-one-thing/",
      "savedAt": "2024-04-29T15:34:19.000Z",
      "description": "Of the mental models and rules I use in my life, by far the most useful is to learn only one thing at any given time.",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "4c1998ea-518c-4325-979b-c3beab5a51f6",
      "title": "tsouanas/fmcbook: Matemática Fundacional para Computação: book by Thanos Tsouanas (in portuguese)",
      "url": "https://github.com/tsouanas/fmcbook",
      "savedAt": "2024-04-28T04:29:31.000Z",
      "description": "Matemática Fundacional para Computação: book by Thanos Tsouanas (in portuguese) - tsouanas/fmcbook",
      "tags": [
        "math",
        "repository"
      ]
    },
    {
      "id": "9cff0e58-aff6-4fc6-841b-5695daaca266",
      "title": "kenjihiranabe/The-Art-of-Linear-Algebra: Graphic notes on Gilbert Strang's \"Linear Algebra for Everyone\"",
      "url": "https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra",
      "savedAt": "2024-04-27T16:15:13.000Z",
      "description": "Graphic notes on Gilbert Strang's \"Linear Algebra for Everyone\" - kenjihiranabe/The-Art-of-Linear-Algebra",
      "tags": [
        "math",
        "repository"
      ]
    },
    {
      "id": "5d82d070-129c-4274-b6fc-f43d54f35860",
      "title": "Operable Software",
      "url": "https://ferd.ca/operable-software.html",
      "savedAt": "2024-04-27T14:41:13.000Z",
      "description": "Operability and observability sure have led to a lot of blog posts around the web lately, and so this is my take on it. In this post, I'll cover views on simplicity and complexity, how people actually approach their systems and form mental models of them, and how we should rather structure things if we want to make systems both observable and operable. Or put differently, how to start approaching Operator Experience.",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "363ae748-d055-4bb8-ae1a-1d274d45d930",
      "title": "Finding Fulfillment",
      "url": "https://longform.asmartbear.com/fulfillment/",
      "savedAt": "2024-04-27T14:30:05.000Z",
      "description": "What creates a fulfilling existence? Exploration leads to a framework I've used for years for myself and the people around me. I hope it helps you too.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "729b11e3-8a40-4434-af5f-0d34133e0d43",
      "title": "Wisdom from Marcus Aurelius - by Gurwinder - The Prism",
      "url": "https://www.gurwinder.blog/p/wisdom-from-marcus-aurelius",
      "savedAt": "2024-04-27T02:39:26.000Z",
      "description": "10 thoughts to improve the mind",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "1de49593-cc52-4374-aa30-4b9f6449ef8e",
      "title": "adam-maj/tiny-gpu: A minimal GPU design in Verilog to learn how GPUs work from the ground up",
      "url": "https://github.com/adam-maj/tiny-gpu/tree/master",
      "savedAt": "2024-04-26T16:11:09.000Z",
      "description": "A minimal GPU design in Verilog to learn how GPUs work from the ground up - adam-maj/tiny-gpu",
      "tags": [
        "cs",
        "cool",
        "for-later",
        "hardware",
        "repository"
      ]
    },
    {
      "id": "176cb673-c4f6-4af1-bb8c-418299a1fe27",
      "title": "\"Thought loss anxiety\" is the fear of forgetting good ideas due to lack of good record-keeping",
      "url": "https://feeei.substack.com/p/thought-loss-anxiety-is-the-fear?r=8x3ti",
      "savedAt": "2024-04-26T03:55:32.000Z",
      "description": "hence my obsession with note-making",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "c651c703-045c-4753-bcdd-853680930a53",
      "title": "Other people’s problems | Seth's Blog",
      "url": "https://seths.blog/2024/04/other-peoples-problems/",
      "savedAt": "2024-04-26T03:50:14.000Z",
      "description": "Seth Godin's Blog on marketing, tribes and respect",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "bd067ee7-2b17-4e66-a21e-4015399279a9",
      "title": "The Man Who Killed Google Search",
      "url": "https://www.wheresyoured.at/the-men-who-killed-google/",
      "savedAt": "2024-04-24T02:18:27.000Z",
      "description": "This is the story of how Google Search died, and the people responsible for killing it.\n\nThe story begins on February 5th 2019, when Ben Gomes, Google’s head of search, had a problem. Jerry Dischler, then the VP and General Manager of Ads at Google, and Shiv Venkataraman, then the VP of Engineering, Search and Ads on Google properties, had called a “code yellow” for search revenue due to, and I quote, “steady weakness in the daily numbers” and a likeliness that it would end the quarter significa",
      "tags": [
        "computer-history"
      ]
    },
    {
      "id": "73a1e2be-899b-40e8-9dcd-927130a73fa8",
      "title": "Good Ideas in Computer Science ・ Daniel Hooper",
      "url": "https://danielchasehooper.com/posts/good-ideas-in-cs/",
      "savedAt": "2024-04-23T01:03:15.000Z",
      "description": "Ideas every programmer likes and why Garbage Collection and Object Oriented Programming are bad",
      "tags": []
    },
    {
      "id": "215925a4-acc2-433f-96a5-6b6efcdf99a2",
      "title": "On Opening Essays, Conference Talks, and Jam Jars",
      "url": "https://maggieappleton.com/openings",
      "savedAt": "2024-04-22T23:55:48.000Z",
      "description": "How to open pieces of narrative non-fiction writing, conference talks, and sticky jars",
      "tags": [
        "career",
        "writing"
      ]
    },
    {
      "id": "8b3527f2-4456-48f8-b7dc-8c8b99acffd2",
      "title": "Visualizing Algorithms",
      "url": "https://bost.ocks.org/mike/algorithms/",
      "savedAt": "2024-04-22T03:31:16.000Z",
      "description": "Algorithms are a fascinating use case for visualization. To visualize an algorithm, we don’t merely fit data to a chart; there is no primary dataset. Instead there are logical rules that describe behavior. This may be why algorithm visualizations are so unusual, as designers experiment with novel forms to better communicate. This is reason enough to study them.",
      "tags": []
    },
    {
      "id": "2749efe4-fb38-45fc-8192-04a3580f594a",
      "title": "50 Years Later, This Apollo-Era Antenna Still Talks to Voyager 2 - IEEE Spectrum",
      "url": "https://spectrum.ieee.org/apollo-era-antenna-voyager-2",
      "savedAt": "2024-04-22T03:31:03.000Z",
      "description": "<p>DSS-43 is the only antenna that can communicate with the probe</p>",
      "tags": [
        "cool"
      ]
    },
    {
      "id": "37f19d26-b139-4b45-a2cd-2a4a1cd9f8d7",
      "title": "Halo 2 in HD: Pushing the Original Xbox to the Limit – I Code 4 Coffee",
      "url": "https://icode4.coffee/?p=738",
      "savedAt": "2024-04-22T03:29:36.000Z",
      "description": "Everything I went through to add support for HD resolutions to Halo 2 on the Original Xbox. From patching the game's rendering engine and memory allocator, to hot patching the Xbox OS, to overclocking the GPU and running performance benchmarks. This post covers how I pushed the game and console to t",
      "tags": [
        "cs",
        "cool",
        "hardware"
      ]
    },
    {
      "id": "3bb866ba-b91c-40f8-86f8-6da4008001ae",
      "title": "Parsing and all that",
      "url": "https://blog.jeffsmits.net/compsci/2024/04/07/parsing-and-all-that/",
      "savedAt": "2024-04-22T02:56:52.000Z",
      "description": "A web log. Mostly about computer science-y stuff.",
      "tags": [
        "cs",
        "for-later"
      ]
    },
    {
      "id": "f995d2fa-4197-4451-83a4-78bb3e38798c",
      "title": "The Technium: 101 Additional Advices",
      "url": "https://kk.org/thetechnium/101-additional-advices/",
      "savedAt": "2024-04-21T23:30:09.000Z",
      "description": "Six years ago I celebrated my 68th birthday by gifting my children 68 bits of advice I wished I had gotten when I was their age. Every birthday after that I added more bits of advice for them until I … Continue reading →",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "f1484f9a-cafc-4bd5-b084-58a59588df48",
      "title": "Stop Acting Like You're Famous",
      "url": "https://ajkprojects.com/stopactinglikeyourefamous",
      "savedAt": "2024-04-21T23:29:50.000Z",
      "description": "Advice for myself around leisure activities.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "b0c17427-ede6-4e1b-b5af-3499e8751980",
      "title": "Tips on how to structure your home directory",
      "url": "https://unixdigest.com/tutorials/tips-on-how-to-structure-your-home-directory.html",
      "savedAt": "2024-04-21T04:59:39.000Z",
      "description": "Someone wrote me an email and asked if I could share some tips on how to structure the $HOME directory, so here we go.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "303cb624-1b6c-454f-b2b6-6e2abba6a1d6",
      "title": "The Guide to Stock Options conversations - by Anton Zaides",
      "url": "https://zaidesanton.substack.com/p/the-guide-to-stock-options-conversations",
      "savedAt": "2024-04-21T04:55:14.000Z",
      "description": "Why every manager should talk to their employees about stock options",
      "tags": [
        "career"
      ]
    },
    {
      "id": "252e98a1-f52b-4d63-80d3-d05659d60e91",
      "title": "3 important things I overlooked during code reviews | Piglei",
      "url": "https://www.piglei.com/articles/3-important-things-I-overlooked-during-cr/",
      "savedAt": "2024-04-21T04:32:55.000Z",
      "description": "piglei's blog",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "7d8d49d2-0f0c-48f9-9f8f-0862b18e6f0e",
      "title": "Linux text manipulation",
      "url": "https://yusuf.fyi/posts/linux-text-manipulation",
      "savedAt": "2024-04-21T02:33:11.000Z",
      "description": "learning a lot about sed, awk and other commands by making a spotify statusbar widget",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "91ff367e-eb8f-4550-8ea2-dc4b634a480b",
      "title": "Formal Methods: Just Good Engineering Practice? - Marc's Blog",
      "url": "https://brooker.co.za/blog/2024/04/17/formal.html",
      "savedAt": "2024-04-21T02:27:40.000Z",
      "description": "Yes. The answer is yes. In your face, Betteridge.",
      "tags": [
        "cs",
        "programming"
      ]
    },
    {
      "id": "0eba59d5-71f6-41bd-90fc-4074428a3cfd",
      "title": "oss-security - Make your own backdoor: CFLAGS code injection, Makefile injection, pkg-config",
      "url": "https://www.openwall.com/lists/oss-security/2024/04/17/3",
      "savedAt": "2024-04-20T13:36:11.000Z",
      "description": "Powered by blists - more mailing lists",
      "tags": [
        "cs",
        "hacking"
      ]
    },
    {
      "id": "e47d30d6-1ef1-47f4-9e93-1849a74b4bf0",
      "title": "Addiction Pathways in the Brain | Science | AAAS",
      "url": "https://www.science.org/content/blog-post/addiction-pathway-brain",
      "savedAt": "2024-04-20T13:18:01.000Z",
      "description": "Addiction Pathways in the Brain",
      "tags": [
        "medical"
      ]
    },
    {
      "id": "241f7ccd-54d5-4bdf-bc9f-28931be29191",
      "title": "Incomplete List of Mistakes in the Design of CSS [CSS Working Group Wiki]",
      "url": "https://wiki.csswg.org/ideas/mistakes",
      "savedAt": "2024-04-20T13:04:39.000Z",
      "description": "That should be corrected if anyone invents a time machine. :P",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "3e6110a3-68f4-4f63-9081-d3fc4b204412",
      "title": "The Psychology of Liminal Spaces",
      "url": "https://mikegrindle.com/posts/liminal",
      "savedAt": "2024-04-20T12:39:30.000Z",
      "description": "On the transitional zones between “what was” and “what’s next",
      "tags": [
        "psychology"
      ]
    },
    {
      "id": "93e09a06-e712-438f-abdc-f2172fc335cf",
      "title": "Why you need a \"WTF Notebook\"",
      "url": "https://www.simplermachines.com/why-you-need-a-wtf-notebook/",
      "savedAt": "2024-04-19T04:16:05.000Z",
      "description": "There's a very specific reputation I want to have on a team: \"Nat helps me solve my problems. Nat get things I care about done.\"",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "6e5dce4c-3494-40ad-93b2-3631af09870f",
      "title": "12 Map Happenings that Rocked our World: Part 9 – Map Happenings",
      "url": "https://maphappenings.com/2024/04/11/story-of-etak/",
      "savedAt": "2024-04-17T12:16:40.000Z",
      "description": "The Map Happenings series on the hugely impactful events that forever changed our world. This week: the story of a little known company called 'Etak'. I think you'll find it a fascinating read...",
      "tags": [
        "computer-history"
      ]
    },
    {
      "id": "c809f09f-a1e1-45f6-80c0-a11bde9bb7a3",
      "title": "What makes concurrency so hard? • Buttondown",
      "url": "https://buttondown.email/hillelwayne/archive/what-makes-concurrency-so-hard/",
      "savedAt": "2024-04-17T02:10:39.000Z",
      "description": "Is it something about human brains, or something about the problem domain?",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "9574da13-b75d-48c2-8c6b-89f36ee6fa71",
      "title": "A Visual Guide to Vision Transformers | MDTURP",
      "url": "https://blog.mdturp.ch/posts/2024-04-05-visual_guide_to_vision_transformer.html",
      "savedAt": "2024-04-16T20:59:00.000Z",
      "description": "This is a visual guide (scroll story) to Vision Transformers (ViTs), a class of deep learning models that have achieved state-of-the-art performance on image classification tasks.",
      "tags": [
        "cs/ai"
      ]
    },
    {
      "id": "0fd2490a-70b9-48d0-a810-83adc25c6eb0",
      "title": "RECOMMENDED DESIGN BOOKS/FILMS – How Design MAKES THE WORLD (The book)",
      "url": "https://designmtw.com/reading-list/",
      "savedAt": "2024-04-15T11:39:34.000Z",
      "description": "The goal of How Design Makes The World (HDMW) was to be the best primer on design for just about everyone. To achieve this I studied more than 100+ books, films and podcasts to learn what they did well and what I could learn. Here are my reviews to help you keep learning. Legend: -…",
      "tags": [
        "reading"
      ]
    },
    {
      "id": "dc9de0bf-37d4-4e62-a27c-d6ffafeff707",
      "title": "Double-Entry Bookkeeping as a Directed Graph · Matheus Portela",
      "url": "https://matheusportela.com/double-entry-bookkeeping-as-a-directed-graph",
      "savedAt": "2024-04-14T13:54:39.000Z",
      "description": "In the past couple of years, I’ve been working in billing and payments at Justworks. This experience introduced me to the world of bookkeeping and accounting in ways I didn’t expect: I took a course and read a textbook in accounting, adopted plain text accounting for my personal finances, and worked in a double-entry ledger system.",
      "tags": [
        "finances",
        "cs"
      ]
    },
    {
      "id": "c5547f4c-90e1-42c2-a013-5370e404b626",
      "title": "Discrete logic IC CPU | Ivan's blog",
      "url": "https://qdiv.dev/posts/ccpu/",
      "savedAt": "2024-04-13T17:01:15.000Z",
      "description": "Custom CPU built with discrete logic chips",
      "tags": [
        "hardware",
        "math",
        "cool",
        "cs"
      ]
    },
    {
      "id": "33a7b35f-888e-487d-8539-152d7a68aff9",
      "title": "An IRC client in your motherboard | Phillip Tennen",
      "url": "https://axleos.com/an-irc-client-in-your-motherboard/",
      "savedAt": "2024-04-13T17:01:06.000Z",
      "description": "I made a graphical IRC client that runs in UEFI. It’s written in Rust and leverages the GUI toolkit and TrueType renderer that I wrote for axle’s userspace. I was able to develop it thanks to the vmnet network backend that I implemented for QEMU. You can connect to an IRC server, chat and read messages, all from the comfort of your motherboard’s pre-boot environment. “Why”? What kind of question is “why”?",
      "tags": [
        "hardware",
        "cs"
      ]
    },
    {
      "id": "8d384f94-fcbe-4963-a98b-41fcdc999f2e",
      "title": "What makes a great technical blog | notes.eatonphil.com",
      "url": "https://notes.eatonphil.com/2024-04-10-what-makes-a-great-tech-blog.html",
      "savedAt": "2024-04-13T16:38:45.000Z",
      "description": "What makes a great technical blog",
      "tags": [
        "writing"
      ]
    },
    {
      "id": "5460510b-3c84-48df-b3d9-7fa4707cb133",
      "title": "Do you really need IPv4 anymore?",
      "url": "https://blog.daknob.net/do-you-really-need-ipv4-anymore/",
      "savedAt": "2024-04-13T16:24:40.000Z",
      "description": "Setting up and maintaining access networks today requires double the effort\ndue to the parallel coexistence of IPv6 and IPv4. Dual-stack has network\nengineers and sysadmins do twice the amount of work, so there must be a good\nreason for it, right?",
      "tags": []
    },
    {
      "id": "32e829a7-172d-4f96-ac1c-ac31e50eb48d",
      "title": "How to send progress updates - Slava Akhmechet",
      "url": "https://www.spakhm.com/updates-howto",
      "savedAt": "2024-04-13T16:14:55.000Z",
      "description": "If you work on anything worthwhile, sooner or later people will care about it and will want you to send progress updates. These could be quarterly investor updates, weekly updates to your boss, emails to adjacent teams, etc. Here are tips on how to do this well.",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "39fd6754-966b-4ebd-b232-5e166e80c5d1",
      "title": "If Inheritance is so bad, why does everyone use it? • Buttondown",
      "url": "https://buttondown.email/hillelwayne/archive/if-inheritance-is-so-bad-why-does-everyone-use-it/",
      "savedAt": "2024-04-13T15:45:47.000Z",
      "description": "Alloy Workshop There are still two slots available for the alloy workshop! I've been hard at work adding a bunch of teaching innovations to the class, which...",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "cd72f844-3782-42cf-bc3d-df2aae6178f1",
      "title": "How I significantly improved my sleep schedule - Issa Rice",
      "url": "https://issarice.com/how-i-significantly-improved-my-sleep-schedule",
      "savedAt": "2024-04-11T04:38:25.000Z",
      "description": "In late December 2023, I finally figured out a system for maintaining\ndecent circadian rhythm. The system has been working reliably for 2.5\nmonths now. Previously, I had been going to sleep anywhere from 1am to\n3am and waking up around 10:30am to 11am. Now, I go to sleep anywhere\nfrom 11pm to midnight, and wake up anywhere from 8am to 9am. (This is in\nwinter at northern USA latitude.)",
      "tags": [
        "self-improvement",
        "health"
      ]
    },
    {
      "id": "bf795ccc-b2f7-4601-a00e-b10eb78e0fbd",
      "title": "My favorite technical blogs",
      "url": "https://lists.eatonphil.com/blogs.html",
      "savedAt": "2024-04-09T01:38:20.000Z",
      "description": "My favorite technical blogs",
      "tags": [
        "resource"
      ]
    },
    {
      "id": "ff1d05f1-bef4-4715-a22e-a1a4591c7983",
      "title": "My new home server · g/ianguid/o.today",
      "url": "https://g7o.today/posts/my_new_home_server/",
      "savedAt": "2024-04-07T15:17:03.000Z",
      "description": "At the beginning of 2023 I started renting a dedicated server from Hetzner with the intent to self-host several services.",
      "tags": [
        "devops",
        "homelab"
      ]
    },
    {
      "id": "4bb4fa6e-9bdb-4ff5-855b-6d237fb64f3f",
      "title": "Garbage Collection for Systems Programmers",
      "url": "https://bitbashing.io/gc-for-systems-programmers.html",
      "savedAt": "2024-04-06T20:57:11.000Z",
      "description": "Yet another programming blog. Thoughts on software and related misadventures.",
      "tags": [
        "programming",
        "for-later"
      ]
    },
    {
      "id": "778e9417-0bf8-463c-a535-e46ef8ea0595",
      "title": "Optimizing Javascript for fun and for profit",
      "url": "https://romgrk.com/posts/optimizing-javascript",
      "savedAt": "2024-04-06T20:57:06.000Z",
      "description": "romgrk's personal blog",
      "tags": [
        "programming",
        "for-later"
      ]
    },
    {
      "id": "9b116c50-a7d0-4474-a605-970e275598d5",
      "title": "Here is why vim uses hjkl keys as arrow keys",
      "url": "https://catonmat.net/why-vim-uses-hjkl-as-arrow-keys",
      "savedAt": "2024-04-06T20:39:01.000Z",
      "description": "I was reading about vim the other day and found out why it used `hjkl` keys as arrow keys. When Bill Joy created the vi text editor he used the ADM-3A terminal, which had the arrows on hjkl keys. Naturally he reused the same keys and the rest is history. Here is how the `hjkl` keys looked. ADM-3A keyboard's hjkl keys...",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "19d17ca9-8aac-4fee-ada1-c723cf4b448f",
      "title": "Why the “Eisenhower matrix” is a fantastic productivity hack - Big Think",
      "url": "https://bigthink.com/the-learning-curve/why-the-eisenhower-matrix-is-a-fantastic-productivity-hack/",
      "savedAt": "2024-04-06T14:02:33.000Z",
      "description": "According to Harvard career advisor Gorick Ng, this time-saving system can help us reclaim our work-life sanity.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "556d468d-208a-433c-92e4-e8940e20ca23",
      "title": "My list of challenging software projects some programmers should try | andreinc",
      "url": "https://www.andreinc.net/2024/03/28/programming-projects-ideas",
      "savedAt": "2024-04-05T20:56:10.000Z",
      "description": "Unsolicited advice",
      "tags": [
        "career",
        "programming"
      ]
    },
    {
      "id": "608ab40e-d71b-4466-851b-413bd977c8af",
      "title": "Building My First Homelab Server Rack · mtlynch.io",
      "url": "https://mtlynch.io/building-first-homelab-rack/",
      "savedAt": "2024-04-05T15:19:40.000Z",
      "description": "Updates about my life and what I learn about creating software",
      "tags": [
        "devops",
        "cool"
      ]
    },
    {
      "id": "cfbc2e74-f36d-4bdc-871a-b954e8b5f74f",
      "title": "The hearts of the Super Nintendo",
      "url": "https://fabiensanglard.net/snes_hearts/index.html",
      "savedAt": "2024-04-05T15:09:39.000Z",
      "description": "The hearts of the Super Nintendo",
      "tags": [
        "hardware",
        "computer-history"
      ]
    },
    {
      "id": "93f8290a-9a63-4086-9d49-74f1b46742d5",
      "title": "great_tables - The Design Philosophy of Great Tables",
      "url": "https://posit-dev.github.io/great-tables/blog/design-philosophy/",
      "savedAt": "2024-04-05T03:45:45.000Z",
      "description": "We’ve spent a lot of time thinking about tables. Tables—like plots—are crucial as a last step toward presenting information. There is surprising sophistication and nuance in designing effective tables. Over the past 5,000 years, they’ve evolved from simple grids to highly structured displays of data. Although we argue that the mid-1900s served as a high point, the popularization and wider accessibility of computing seemingly brought us back to the simple, ancient times.",
      "tags": [
        "web",
        "ui"
      ]
    },
    {
      "id": "3d0dc0c1-ae2b-483d-953a-0844b5de2374",
      "title": "Advice to Young People, The Lies I Tell Myself - jxnl.co",
      "url": "https://jxnl.co/writing/2024/06/01/advice-to-young-people/",
      "savedAt": "2024-04-05T03:16:01.000Z",
      "description": "Notes about my hobbies and other things I find interesting.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "c27750d4-dc67-459e-8489-547b809c5a8d",
      "title": "Visualizing the ARM64 Instruction Set | Zachary Yedidia's blog",
      "url": "https://zyedidia.github.io/blog/posts/6-arm64/",
      "savedAt": "2024-04-05T03:07:30.000Z",
      "description": "Lately I’ve been doing a lot of work with the ARM64 instruction set, and I\nthought it would be fun to try to visualize it. ARM64 encodes every instruction\nas a 32-bit integer, so one way to visualize the instruction set is by plotting\nthe instructions along a space-filling curve, such as a Hilbert curve1, and\ncoloring them according to their instruction class (i.e., general, advsimd,\nfloat, sve, etc…).",
      "tags": [
        "hardware",
        "cool"
      ]
    },
    {
      "id": "490c0473-33c9-4717-829c-cb4d16c6ea2f",
      "title": "lizrice/containers-from-scratch: Writing a container in a few lines of Go code, as seen at DockerCon 2017 and on O'Reilly Safari",
      "url": "https://github.com/lizrice/containers-from-scratch",
      "savedAt": "2024-04-05T01:39:40.000Z",
      "description": "Writing a container in a few lines of Go code, as seen at DockerCon 2017 and on O'Reilly Safari - lizrice/containers-from-scratch",
      "tags": [
        "cool"
      ]
    },
    {
      "id": "3bbedc39-6c67-4480-a48d-bd3c714e38fe",
      "title": "Subroutine calls in the ancient world, before computers had stacks or heaps - The Old New Thing",
      "url": "https://devblogs.microsoft.com/oldnewthing/20240401-00/?p=109599",
      "savedAt": "2024-04-04T22:15:18.000Z",
      "description": "A lot of computing got done even before we had stacks and heaps.",
      "tags": [
        "programming",
        "computer-history"
      ]
    },
    {
      "id": "80dde9f0-1e02-42d8-a264-d3b7f2df6030",
      "title": "You Don’t Need a Writing Ritual",
      "url": "https://mikegrindle.com/posts/writuals",
      "savedAt": "2024-04-04T01:36:18.000Z",
      "description": "Recently, I’ve noticed that many people online seem to put a lot of\nstock into writing rituals or “writuals” these days. The idea behind\nthese is that if you follow certain routines, you can “trick” your brain\ninto getting into the right mindset for writing.",
      "tags": [
        "writing",
        "self-improvement"
      ]
    },
    {
      "id": "52986e27-78a8-4719-b939-2ac0d554ebd2",
      "title": "Book list for streetfighting computer scientists - dankwiki, the wiki of nick black",
      "url": "https://nick-black.com/dankwiki/index.php/Book_list_for_streetfighting_computer_scientists",
      "savedAt": "2024-04-03T22:08:58.000Z",
      "description": "From dankwiki",
      "tags": [
        "programming",
        "books",
        "reading"
      ]
    },
    {
      "id": "e629dd88-798b-49d8-8543-5ee96c83e672",
      "title": "Feynman Algorithm",
      "url": "https://wiki.c2.com/?FeynmanAlgorithm=",
      "savedAt": "2024-04-03T16:15:07.000Z",
      "description": "The Feynman Algorithm:",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "bc1748f9-c8ae-42ea-b63c-c3c5a252083d",
      "title": "Everything I Know About SSDs 2019",
      "url": "https://kcall.co.uk/ssd/index.html",
      "savedAt": "2024-04-02T21:30:41.000Z",
      "description": "Everything I Know About SSDs. SSD Documentation. A technical description of the differences between Hard Drives and Solid State Devices",
      "tags": [
        "hardware",
        "cool"
      ]
    },
    {
      "id": "dc77ac12-ff31-4ff2-96c1-deff7fce0a02",
      "title": "Type system of the React compiler",
      "url": "https://www.recompiled.dev/blog/type-system/",
      "savedAt": "2024-03-31T05:37:18.000Z",
      "description": "The post describes how the type system of the React compiler is implemented and used",
      "tags": [
        "programming",
        "for-later",
        "web"
      ]
    },
    {
      "id": "17f51bf9-8d7f-4c4c-bc24-76dc7580f6f8",
      "title": "Basic Things",
      "url": "https://matklad.github.io/2024/03/22/basic-things.html",
      "savedAt": "2024-03-31T05:32:29.000Z",
      "description": "After working on the initial stages of several largish projects, I accumulated a list of things that\nshare the following three properties:",
      "tags": [
        "management",
        "favorites"
      ]
    },
    {
      "id": "9531df2f-905a-4b88-bebe-a29f53832cc7",
      "title": "Why Mathematics is Boring | The n-Category Café",
      "url": "https://golem.ph.utexas.edu/category/2024/03/why_mathematics_is_boring_1.html",
      "savedAt": "2024-03-29T22:52:02.000Z",
      "description": null,
      "tags": [
        "math"
      ]
    },
    {
      "id": "c1f0b71c-fd50-4f85-88d1-78048bd29005",
      "title": "The problem with invariants is that they change over time – Surfing Complexity",
      "url": "https://surfingcomplexity.blog/2024/03/26/the-problem-with-invariants-is-that-they-change-over-time/",
      "savedAt": "2024-03-29T03:16:53.000Z",
      "description": "Cliff L. Biffle blogged a great write-up of a debugging odyssey at Oxide with the title Who killed the network switch? Here's the bit that jumped out at me: At the time that code was written, it was correct, but it embodied the assumption that any loaned memory would fit into one region. That assumption…",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "122e3a2a-db4b-4341-8414-b677979dc012",
      "title": "Think real hard | benkuhn.net",
      "url": "https://www.benkuhn.net/thinkrealhard/",
      "savedAt": "2024-03-29T03:15:37.000Z",
      "description": "The Feynman Algorithm for problem solving: Write down the problem; Think real hard; Write down the solution.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "99d20e00-2566-4d97-be81-1b174ce892d6",
      "title": "Be impatient | benkuhn.net",
      "url": "https://www.benkuhn.net/impatient/",
      "savedAt": "2024-03-29T03:14:38.000Z",
      "description": "Impatience is the best way to get faster at things. And across a surprising number of domains, being really fast correlates strongly with being effective.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "7dce36c9-b91c-4984-9fde-3c09e423208b",
      "title": "Things you're allowed to do",
      "url": "https://milan.cvitkovic.net/writing/things_youre_allowed_to_do/",
      "savedAt": "2024-03-29T03:09:15.000Z",
      "description": "A list of things you're allowed to do that you thought you couldn't, or didn't even know you could.",
      "tags": [
        "self-improvement",
        "cool"
      ]
    },
    {
      "id": "d995cdc9-8f28-4e17-b48f-622ae4013a90",
      "title": "Deterministic Simulation Testing | Resonate",
      "url": "https://blog.resonatehq.io/deterministic-simulation-testing",
      "savedAt": "2024-03-29T02:24:39.000Z",
      "description": "At Resonate, we consider deterministic simulation testing (DST) to be a cornerstone of our mission to build correct and reliable distributed systems. While an increasing array of projects, including Foundation DB, TigerBeetle DB, and Resonate itself, have embraced DST, along with companies like Antithesis providing platforms dedicated to this approach, comprehensive information remains limited.",
      "tags": [
        "programming",
        "cs/distsys"
      ]
    },
    {
      "id": "ceb70ee8-285b-4745-87a9-eafd055de511",
      "title": "Linux Crisis Tools",
      "url": "https://www.brendangregg.com/blog/2024-03-24/linux-crisis-tools.html",
      "savedAt": "2024-03-28T22:17:05.000Z",
      "description": "Linux Crisis Tools",
      "tags": [
        "devops"
      ]
    },
    {
      "id": "7eb669fa-1427-4038-9d3e-702d65c385f1",
      "title": "Sega Saturn Architecture | A Practical Analysis",
      "url": "https://www.copetti.org/writings/consoles/sega-saturn/",
      "savedAt": "2024-03-28T22:16:52.000Z",
      "description": "An in-depth analysis that explains how this console works internally",
      "tags": [
        "for-later",
        "hardware",
        "cool"
      ]
    },
    {
      "id": "4275d1d4-d240-43d8-80d0-bb8b679a796b",
      "title": "ADHD Productivity Fundamentals — 0xFF",
      "url": "https://0xff.nu/adhd-productivity-fundamentals",
      "savedAt": "2024-03-28T22:10:53.000Z",
      "description": "0xFF / ADHD Productivity Fundamentals",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "ee5af14a-56a5-4fce-b5a2-90fb7011a902",
      "title": "Tech Independence | Derek Sivers",
      "url": "https://sive.rs/ti",
      "savedAt": "2024-03-28T19:17:10.000Z",
      "description": "Tech independence is not depending on any particular company or software.",
      "tags": [
        "cool"
      ]
    },
    {
      "id": "02c8bfb2-02b3-44fc-ba3b-000092b8e070",
      "title": "So you think you want to write a deterministic hypervisor?",
      "url": "https://antithesis.com/blog/deterministic_hypervisor/",
      "savedAt": "2024-03-26T19:07:04.000Z",
      "description": "What is a deterministic hypervisor and why do we need one anyhow?",
      "tags": [
        "programming",
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "86707886-1228-4d5e-8a28-765b42417fba",
      "title": "#7 - On Keeping a Notebook | Kadambari",
      "url": "https://kadambari.bearblog.dev/7-on-keeping-a-notebook/",
      "savedAt": "2024-03-26T13:50:21.000Z",
      "description": "There's a lot I have to say on the subject of notebooks--of all the objects in this world, they are, to me, extremely fascinating and inspiring. But in this ...",
      "tags": [
        "note-taking"
      ]
    },
    {
      "id": "3782c435-f45f-4c4b-9137-e88dd7775d73",
      "title": "Why do regexes use `$` and `^` as line anchors? • Buttondown",
      "url": "https://buttondown.email/hillelwayne/archive/why-do-regexes-use-and-as-line-anchors/",
      "savedAt": "2024-03-26T04:47:10.000Z",
      "description": "A history that will satisfy nobody.",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "01623134-831d-46a1-b402-6546f64d72e0",
      "title": "The Beginner’s Guide to Queuing theory | Qminder",
      "url": "https://www.qminder.com/blog/queue-management/queuing-theory-guide/",
      "savedAt": "2024-03-25T01:41:11.000Z",
      "description": "This is a beginner’s guide to queuing theory. Find out the definition of queuing theory, its history, benefits and real-life applications.",
      "tags": [
        "programming",
        "for-later"
      ]
    },
    {
      "id": "7233227f-5cbd-43ed-822c-03f1f99d3dae",
      "title": "Fail Forward With Kindness / marcel.io",
      "url": "https://marcel.io/posts/fail-forward-with-kindness",
      "savedAt": "2024-03-24T19:05:16.000Z",
      "description": "Thoughts about design, code, technology and everything in between.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "c80e4ecd-c12e-472b-8cab-11f5e23c1cae",
      "title": "Doing weeknotes",
      "url": "https://doingweeknotes.com",
      "savedAt": "2024-03-24T18:31:04.000Z",
      "description": "What weeknotes are, how weeknotes work, and how to start writing weeknotes of your own",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "a977ccae-0fc4-46dd-a6df-f4ebd3bdd01b",
      "title": "myme.no - Focus by Automation",
      "url": "https://myme.no/posts/2024-03-19-focus-by-automation.html",
      "savedAt": "2024-03-23T22:10:50.000Z",
      "description": "I’ve invested leisure time to save time when I’m working hard, not to save\nkeystrokes but to save mental energy for the project at hand.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "7e289521-33f9-4c08-b5d1-8e39b4dfb34a",
      "title": "Decision logs",
      "url": "https://vitonsky.net/blog/2024/03/20/decision-logs/",
      "savedAt": "2024-03-23T21:38:07.000Z",
      "description": "Let's say you need to choose some technology for your project, or you already have problems with some technologies, so you want to replace them with others. If you do not maintain a decision log, you have a high risk of making bad decisions that are biased, based on authority, and take too long.",
      "tags": [
        "career",
        "management"
      ]
    },
    {
      "id": "5bcf0b57-1ca2-4e60-97d4-11461da45dd2",
      "title": "Design is an Island - by Kent Beck",
      "url": "https://tidyfirst.substack.com/p/design-is-an-island",
      "savedAt": "2024-03-23T14:51:20.000Z",
      "description": "First published April 2009. This was a period when I was working consistently on the material that would become, a decade and a half later, Tidy First?. If design is responsive motion in a space of all possible designs, then some designs are acceptable and some are not. Designing, then, is like walking an island. As long as you don’t get your feet wet, the design is okay. (This is a visual way of describing design as an optimization problem, but I’ll stick with the metaphor because it turns out to be surprisingly apt.)",
      "tags": [
        "programming",
        "for-later"
      ]
    },
    {
      "id": "3cd3a8c6-e94a-4255-b6c4-b099b4b277bf",
      "title": "articles/internals_of_the_async_await_pattern_from_first_principles.md at master · Dobiasd/articles",
      "url": "https://github.com/Dobiasd/articles/blob/master/internals_of_the_async_await_pattern_from_first_principles.md",
      "savedAt": "2024-03-20T00:35:39.000Z",
      "description": "thoughts on programming. Contribute to Dobiasd/articles development by creating an account on GitHub.",
      "tags": []
    },
    {
      "id": "a8fb643a-258d-4788-89a9-e2175ce65941",
      "title": "How to Start Google",
      "url": "https://paulgraham.com/google.html",
      "savedAt": "2024-03-20T00:29:22.000Z",
      "description": "March 2024(This is a talk I gave to 14 and 15 year olds about what to do now\nif they might want to start a startup later. Lots of schools think\nthey should tell students something about startups. This is what I\nthink they should tell them. Notice it makes no mention of business\nplans.)Most of you probably think that when you're released into the\nso-called real world you'll eventually have to get some kind of\njob. That's not true, and today I'm going to talk about a trick you\ncan use to avoid ever having to get a job.The trick is to start your own company. So it's not a trick for\navoiding work, because if you start your own company you'll\nwork harder than you would if you had an ordinary job. But you will\navoid many of the annoying things that come with a job, including\na boss telling you what to do.It's more exciting to work on your own project than someone else's.\nAnd you can also get a lot richer. In fact, this is the standard\nway to get \nreally rich. If you look at the lists of the richest\npeople that occasionally get published in the press, nearly all of\nthem did it by starting their own companies.Starting your own company can mean anything from starting a barber\nshop to starting Google. I'm here to talk about one extreme end of\nthat continuum. I'm going to tell you how to start Google.The companies at the Google end of the continuum are called startups\nwhen they're young. The reason I know about them is that my wife\nJessica and I started something called Y Combinator that is basically\na startup factory. Since 2005, Y Combinator has funded over 4000\nstartups. So we know exactly what you need to start a startup,\nbecause we've helped people do it for the last 19 years.You might have thought I was joking when I said I was going to tell\nyou how to start Google. You might be thinking \"How could we\nstart Google?\" But that's effectively what the people who did start\nGoogle were thinking before they started it. If you'd told Larry\nPage and Sergey Brin, the founders of Google, that the company they\nwere about to start would one day be worth over a trillion dollars,\ntheir heads would have exploded.All you can know when you start working on a startup is that it\nseems worth pursuing. You can't know whether it will turn into\na company worth billions or one that goes out of business. So when I\nsay I'm going to tell you how to start Google, I mean I'm going to\ntell you how to get to the point where you can start a company that\nhas as much chance of being Google as Google had of being Google.\n[1]How do you get from where you are now to the point where you can\nstart a successful startup? You need three things. You need to be\ngood at some kind of technology, you need an idea for what you're\ngoing to build, and you need cofounders to start the company with.How do you get good at technology? And how do you choose which\ntechnology to get good at? Both of those questions turn out to have\nthe same answer: work on your own projects. Don't try to guess\nwhether gene editing or LLMs or rockets will turn out to be the\nmost valuable technology to know about. No one can predict that.\nJust work on whatever interests you the most. You'll work much\nharder on something you're interested in than something you're doing\nbecause you think you're supposed to.If you're not sure what technology to get good at, get good at\nprogramming. That has been the source of the median startup for the\nlast 30 years, and this is probably not going to change in the next\n10.Those of you who are taking computer science classes in school may\nat this point be thinking, ok, we've got this sorted. We're already\nbeing taught all about programming. But sorry, this is not enough.\nYou have to be working on your own projects, not just learning stuff\nin classes. You can do well in computer science classes without\never really learning to program. In fact you can graduate with a\ndegree in computer science from a top university and still not be\nany good at programming. That's why tech companies all make you\ntake a coding test before they'll hire you, regardless of where you\nwent to university or how well you did there. They know grades and\nexam results prove nothing.If you really want to learn to program, you have to work on your\nown projects. You learn so much faster that way. Imagine you're\nwriting a game and there's something you want to do in it, and you\ndon't know how. You're going to figure out how a lot faster than\nyou'd learn anything in a class.You don't have to learn programming, though. If you're wondering\nwhat counts as technology, it includes practically everything you\ncould describe using the words \"make\" or \"build.\" So welding would\ncount, or making clothes, or making videos. Whatever you're most\ninterested in. The critical distinction is whether you're producing\nor just consuming. Are you writing computer games, or just playing\nthem? That's the cutoff.Steve Jobs, the founder of Apple, spent time when he was a teenager\nstudying calligraphy — the sort of beautiful writing that\nyou see in medieval manuscripts. No one, including him, thought\nthat this would help him in his career. He was just doing it because\nhe was interested in it. But it turned out to help him a lot. The\ncomputer that made Apple really big, the Macintosh, came out at\njust the moment when computers got powerful enough to make letters\nlike the ones in printed books instead of the computery looking\nletters you see in 8 bit games. Apple destroyed everyone else at\nthis, and one reason was that Steve was one of the few people in\nthe computer business who really got graphic design.Don't feel like your projects have to be serious. They can\nbe as frivolous as you like, so long as you're building things\nyou're excited about. Probably 90% of programmers start out building\ngames. They and their friends like to play games. So they build\nthe kind of things they and their friends want. And that's exactly\nwhat you should be doing at 15 if you want to start a startup one\nday.You don't have to do just one project. In fact it's good to learn\nabout multiple things. Steve Jobs didn't just learn calligraphy.\nHe also learned about electronics, which was even more valuable.\nWhatever you're interested in. (Do you notice a theme here?)So that's the first of the three things you need, to get good at\nsome kind or kinds of technology. You do it the same way you get\ngood at the violin or football: practice. If you start a startup\nat 22, and you start writing your own programs now, then by the\ntime you start the company you'll have spent at least 7 years\npracticing writing code, and you can get pretty good at anything\nafter practicing it for 7 years.Let's suppose you're 22 and you've succeeded: You're now really\ngood at some technology. How do you get \nstartup ideas? It might\nseem like that's the hard part. Even if you are a good programmer,\nhow do you get the idea to start Google?Actually it's easy to get startup ideas once you're good at technology.\nOnce you're good at some technology, when you look at the world you\nsee dotted outlines around the things that are missing. You start\nto be able to see both the things that are missing from the technology\nitself, and all the broken things that could be fixed using it, and\neach one of these is a potential startup.In the town near our house there's a shop with a sign warning that\nthe door is hard to close. The sign has been there for several\nyears. To the people in the shop it must seem like this mysterious\nnatural phenomenon that the door sticks, and all they can do is put\nup a sign warning customers about it. But any carpenter looking at\nthis situation would think \"why don't you just plane off the part\nthat sticks?\"Once you're good at programming, all the missing software in the\nworld starts to become as obvious as a sticking door to a carpenter.\nI'll give you a real world example. Back in the 20th century,\nAmerican universities used to publish printed directories with all\nthe students' names and contact info. When I tell you what these\ndirectories were called, you'll know which startup I'm talking\nabout. They were called facebooks, because they usually had a picture\nof each student next to their name.So Mark Zuckerberg shows up at Harvard in 2003, and the university\nstill hasn't gotten the facebook online. Each individual house has\nan online facebook, but there isn't one for the whole university.\nThe university administration has been diligently having meetings\nabout this, and will probably have solved the problem in another\ndecade or so. Most of the students don't consciously notice that\nanything is wrong. But Mark is a programmer. He looks at this\nsituation and thinks \"Well, this is stupid. I could write a program\nto fix this in one night. Just let people upload their own photos\nand then combine the data into a new site for the whole university.\"\nSo he does. And almost literally overnight he has thousands of\nusers.Of course Facebook was not a startup yet. It was just a... project.\nThere's that word again. Projects aren't just the best way to learn\nabout technology. They're also the best source of startup ideas.Facebook was not unusual in this respect. Apple and Google also\nbegan as projects. Apple wasn't meant to be a company. Steve Wozniak\njust wanted to build his own computer. It only turned into a company\nwhen Steve Jobs said \"Hey, I wonder if we could sell plans for this\ncomputer to other people.\" That's how Apple started. They weren't\neven selling computers, just plans for computers. Can you imagine\nhow lame this company seemed?Ditto for Google. Larry and Sergey weren't trying to start a company\nat first. They were just trying to make search better. Before Google,\nmost search engines didn't try to sort the results they gave you\nin order of importance. If you searched for \"rugby\" they just gave\nyou every web page that contained the word \"rugby.\" And the web was\nso small in 1997 that this actually worked! Kind of. There might\nonly be 20 or 30 pages with the word \"rugby,\" but the web was growing\nexponentially, which meant this way of doing search was becoming\nexponentially more broken. Most users just thought, \"Wow, I sure\nhave to look through a lot of search results to find what I want.\"\nDoor sticks. But like Mark, Larry and Sergey were programmers. Like\nMark, they looked at this situation and thought \"Well, this is\nstupid. Some pages about rugby matter more than others. Let's figure\nout which those are and show them first.\"It's obvious in retrospect that this was a great idea for a startup.\nIt wasn't obvious at the time. It's never obvious. If it was obviously\na good idea to start Apple or Google or Facebook, someone else would\nhave already done it. That's why the best startups grow out of\nprojects that aren't meant to be startups. You're not trying to\nstart a company. You're just following your instincts about what's\ninteresting. And if you're young and good at technology, then your\nunconscious instincts about what's interesting are better than your\nconscious ideas about what would be a good company.So it's critical, if you're a young founder, to build things for\nyourself and your friends to use. The biggest mistake young founders\nmake is to build something for some mysterious group of other people.\nBut if you can make something that you and your friends truly want\nto use — something your friends aren't just using out of\nloyalty to you, but would be really sad to lose if you shut it down\n— then you almost certainly have the germ of a good startup\nidea. It may not seem like a startup to you. It may not be obvious\nhow to make money from it. But trust me, there's a way.What you need in a startup idea, and all you need, is something\nyour friends actually want. And those ideas aren't hard to see once\nyou're good at technology. There are sticking doors everywhere.\n[2]Now for the third and final thing you need: a cofounder, or cofounders.\nThe optimal startup has two or three founders, so you need one or\ntwo cofounders. How do you find them? Can you predict what I'm going\nto say next? It's the same thing: projects. You find cofounders by\nworking on projects with them. What you need in a cofounder is\nsomeone who's good at what they do and that you work well with, and\nthe only way to judge this is to work with them on things.At this point I'm going to tell you something you might not want\nto hear. It really matters to do well in your classes, even the\nones that are just memorization or blathering about literature,\nbecause you need to do well in your classes to get into a good\nuniversity. And if you want to start a startup you should try to\nget into the best university you can, because that's where the best\ncofounders are. It's also where the best employees are. When Larry\nand Sergey started Google, they began by just hiring all the smartest\npeople they knew out of Stanford, and this was a real advantage for\nthem.The empirical evidence is clear on this. If you look at where the\nlargest numbers of successful startups come from, it's pretty much\nthe same as the list of the most selective universities.I don't think it's the prestigious names of these universities that\ncause more good startups to come out of them. Nor do I think it's\nbecause the quality of the teaching is better. What's driving this\nis simply the difficulty of getting in. You have to be pretty smart\nand determined to get into MIT or Cambridge, so if you do manage\nto get in, you'll find the other students include a lot of smart\nand determined people.\n[3]You don't have to start a startup with someone you meet at university.\nThe founders of Twitch met when they were seven. The founders of\nStripe, Patrick and John Collison, met when John was born. But\nuniversities are the main source of cofounders. And because they're\nwhere the cofounders are, they're also where the ideas are, because\nthe best ideas grow out of projects you do with the people who\nbecome your cofounders.So the list of what you need to do to get from here to starting a\nstartup is quite short. You need to get good at technology, and the\nway to do that is to work on your own projects. And you need to do\nas well in school as you can, so you can get into a good university,\nbecause that's where the cofounders and the ideas are.That's it, just two things, build stuff and do well in school.Notes[1]\nThe rhetorical trick in this sentence is that the \"Google\"s\nrefer to different things. What I mean is: a company that has as\nmuch chance of growing as big as Google ultimately did as Larry and\nSergey could have reasonably expected Google itself would at the\ntime they started it. But I think the original version is zippier.[2]\nMaking something for your friends isn't the only source of\nstartup ideas. It's just the best source for young founders, who\nhave the least knowledge of what other people want, and whose own\nwants are most predictive of future demand anyway.[3]\nStrangely enough this is particularly true in countries like\nthe US where undergraduate admissions are done badly. US admissions\ndepartments make applicants jump through a lot of arbitrary hoops\nthat have little to do with their intellectual ability. But the\nmore arbitrary a test, the more it becomes a test of mere determination\nand resourcefulness. And those are the two most important qualities\nin startup founders. So US admissions departments are better at\nselecting founders than they would be if they were better at selecting\nstudents.Thanks to Jessica Livingston and Harj \nTaggar for reading drafts of this.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "e5c5a873-21a6-4d88-ab6a-1f78b3df6021",
      "title": "The Mechanics of Proof — The Mechanics of Proof, by Heather Macbeth",
      "url": "https://hrmacbeth.github.io/math2001/index.html",
      "savedAt": "2024-03-20T00:17:40.000Z",
      "description": "This is a book dealing with how to write careful, rigorous mathematical proofs.\nThe book is paired with code in the computer formalization language\nLean. Head over to the associated GitHub repository,\nhttps://github.com/hrmacbeth/math2001, to download this code to your own computer or to open it in\nthe cloud on Gitpod.",
      "tags": [
        "programming",
        "math"
      ]
    },
    {
      "id": "c44db33d-f21b-4c30-8c4a-7bbcb8f94028",
      "title": "Dobiasd/articles: thoughts on programming",
      "url": "https://github.com/Dobiasd/articles",
      "savedAt": "2024-03-19T20:24:28.000Z",
      "description": "This repository serves as a programming-related brain dump.",
      "tags": []
    },
    {
      "id": "f0f7139a-4317-4a2f-984d-a8560752e25f",
      "title": "Leadership requires taking some risk. | Irrational Exuberance",
      "url": "https://lethain.com/leadership-requires-risk/",
      "savedAt": "2024-03-18T23:50:35.000Z",
      "description": "At a recent offsite with Carta’s Navigators, we landed on an interesting topic: leadership roles sometimes mean that making progress on a professional initiative requires taking some personal risk.\nThis lesson was hammered into me a decade ago during my time at Uber, where I kicked off the Uber SRE group and architectured Uber’s self-service service provisioning strategy that defined Uber’s approach to software development (which spawned a thousand thought pieces, not all complimentary).",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "1c5e3328-5181-44ac-95cd-99d7db1b2f46",
      "title": "Take Ownership of Your Future Self",
      "url": "https://hbr.org/2020/08/take-ownership-of-your-future-self",
      "savedAt": "2024-03-18T22:53:32.000Z",
      "description": "Your personality, skills, likes, and dislikes change over time — but that change isn’t out of your control. What can you do to become the version of yourself that you most want to be? Start by acknowledging the differences between your past, current, and future selves. Next, imagine your desired future self: Set goals that are as clear and specific as possible to maximize your chances of achieving them. Finally, develop (and re-develop) an identity narrative consistent with the person you want to become — and share that story with others! Your identity drives your behavior, which over time creates your personality. So start acting like the best version of yourself, and you will become that person.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "2ff0bd1f-7280-4456-ad4a-2f1e9e8eaf12",
      "title": "My favorite essays of life advice | benkuhn.net",
      "url": "https://www.benkuhn.net/weeklyessays/",
      "savedAt": "2024-03-18T11:13:19.000Z",
      "description": "Life is short • There is no speed limit • How to Be Successful • You and your research • Becoming a Magician • 95th percentile isn’t that good",
      "tags": [
        "career",
        "self-improvement"
      ]
    },
    {
      "id": "48b1acf0-7769-4103-b16e-927b976db156",
      "title": "How web bloat impacts users with slow devices",
      "url": "https://danluu.com/slow-device/",
      "savedAt": "2024-03-18T09:19:05.000Z",
      "description": "In 2017, we looked at how web bloat affects users with slow connections. Even in the U.S., many users didn't have broadband speeds, making much of the web difficult to use. It's still the case that many users don't have broadband speeds, both inside and outside of the U.S. and that much of the modern web isn't usable for people with slow internet, but the exponential increase in bandwidth (Nielsen suggests this is 50% per year for high-end connections) has outpaced web bloat for typical sites, making this less of a problem than it was in 2017, although it's still a serious problem for people with poor connections.",
      "tags": [
        "for-later",
        "web"
      ]
    },
    {
      "id": "7f736c5d-144c-4348-8c93-f91d81c0bc12",
      "title": "Be Well Tuned",
      "url": "http://bewelltuned.com",
      "savedAt": "2024-03-17T13:02:25.000Z",
      "description": "It's is a very unusual guide to improving your brain and your life:",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "a4411486-6ca8-4351-b9db-eadb074c9cf7",
      "title": "Redefining Observability | Hazel Weakly",
      "url": "https://hazelweakly.me/blog/redefining-observability/",
      "savedAt": "2024-03-16T20:51:57.000Z",
      "description": "Observability is a bit of a hot topic, and while it’s increasingly been playing a larger role in engineering strategy, I think the way it’s presented can often...",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "6418e5ae-28e6-4141-a817-88c10a016c5a",
      "title": "What are 1-bit LLMs?. The Era of 1-bit LLMs with BitNet b1.58 | by Mehul Gupta | Data Science in your pocket | Mar, 2024 | Medium",
      "url": "https://medium.com/data-science-in-your-pocket/what-are-1-bit-llms-3f2ae4b40fdf",
      "savedAt": "2024-03-16T20:46:13.000Z",
      "description": "The Generative AI world is racing and the new addition to this fast-evolving space is 1-bit LLMs. You might not believe it, but this can change a lot of things and can help eliminate some of the…",
      "tags": [
        "for-later",
        "cs/ai"
      ]
    },
    {
      "id": "bce17d14-7c7f-4e0e-b97b-bf1a281c3889",
      "title": "Checking Causal Consistency of MongoDB",
      "url": "https://muratbuffalo.blogspot.com/2024/03/checking-causal-consistency-of-mongodb.html",
      "savedAt": "2024-03-16T20:41:12.000Z",
      "description": "This paper  declares the Jepsen testing of MongoDB for causal consistency a bit lacking in rigor, and goes on to test MongoDB  against three...",
      "tags": [
        "for-later",
        "database"
      ]
    },
    {
      "id": "2194f3ae-9ae8-4dc2-adea-02332cdba2a7",
      "title": "First month on a database team | notes.eatonphil.com",
      "url": "https://notes.eatonphil.com/2024-03-11-first-month-on-a-database-team.html",
      "savedAt": "2024-03-16T13:28:29.000Z",
      "description": "First month on a database team",
      "tags": [
        "career"
      ]
    },
    {
      "id": "a1d36868-862d-4168-8a25-671632a63505",
      "title": "How Figma's Databases Team Lived to Tell the Scale | Figma Blog",
      "url": "https://www.figma.com/blog/how-figmas-databases-team-lived-to-tell-the-scale/",
      "savedAt": "2024-03-16T11:48:02.000Z",
      "description": "Our nine month journey to horizontally shard Figma’s Postgres stack, and the key to unlocking (nearly) infinite scalability.",
      "tags": [
        "database"
      ]
    },
    {
      "id": "c3ab46f6-0f44-4049-b26a-0e139983b49c",
      "title": "Nix is a better Docker image builder than Docker's image builder - Xe Iaso",
      "url": "https://xeiaso.net/talks/2024/nix-docker-build/",
      "savedAt": "2024-03-16T05:31:41.000Z",
      "description": "Fri Mar 15 2024",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "9abc7b84-c4c0-47b2-aafb-3a862ba42871",
      "title": "Learning from DNA: a grand challenge in biology · Hazy Research",
      "url": "https://hazyresearch.stanford.edu/blog/2024-03-14-evo",
      "savedAt": "2024-03-16T05:16:26.000Z",
      "description": "Is DNA all you need?",
      "tags": [
        "cool"
      ]
    },
    {
      "id": "016f5f75-836c-4af9-9d63-5eaaef9de5b1",
      "title": "40 years of programming",
      "url": "https://liw.fi/40/",
      "savedAt": "2024-03-16T03:51:31.000Z",
      "description": "In April, 1984, my father bought a computer for his home office, a\nLuxor ABC-802, with a\nZ80 CPU, 64 kilobytes of RAM, a yellow-on-black screen with 80 by 25\ntext mode, or about 160 by 75 pixels in graphics mode, and two floppy\ndrives. It had BASIC in its ROM, and came with absolutely no games. If\nI wanted to play with it, I had to learn how to program, and write my\nown games. I learned BASIC, and over the next few years would learn\nPascal, C, and more. I had found my passion. I was 14 years old and I\nknew what I wanted to do when I grew up.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "265400be-b7fe-44ad-b987-c49d22049f5a",
      "title": "My weekly review habit | benkuhn.net",
      "url": "https://www.benkuhn.net/weekly/",
      "savedAt": "2024-03-14T12:14:52.000Z",
      "description": "how it works • example topics • compounding improvements • what I’ve gotten out of it • tips",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "f2a8b581-45dd-489d-a8c4-a92b23ab5c25",
      "title": "Create More Than You Consume if You Want to Worry Less and Feel More Fulfilled — OMAR ITANI",
      "url": "https://www.omaritani.com/blog/create-more-consume-less",
      "savedAt": "2024-03-14T02:53:57.000Z",
      "description": "The problem with too much consumption is that it can leave us feeling utterly empty inside. Ironically, it creates something: One big void. A small dose of creativity is good for us. It can help us become more present, less anxious, and much more fulfilled. And it doesn't take much to live a creativ",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "60182887-2846-4aea-8b25-4f3e18a99bb1",
      "title": "SQLite Internals: Pages & B-trees · The Fly Blog",
      "url": "https://fly.io/blog/sqlite-internals-btree/",
      "savedAt": "2024-03-13T19:02:50.000Z",
      "description": "Let's open a hex editor and see what this thing is made of",
      "tags": [
        "for-later",
        "database"
      ]
    },
    {
      "id": "8af3a290-d948-4684-89b5-d6bc4ee1847e",
      "title": "Breaking Down Tasks - Jacob Kaplan-Moss",
      "url": "https://jacobian.org/2024/mar/11/breaking-down-tasks/",
      "savedAt": "2024-03-13T11:18:10.000Z",
      "description": "Something missing from this series on estimation, until now, has been a discussion of how to “break down” a project into a well-defined task list. I’d not previously written about this because, to me, it’s largely intuitive. But it isn’t for everyone, so this post fills the gap, and explains in detail how I break down projects into a task list.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "a987df97-e328-40b9-8b78-9a0f7d006d74",
      "title": "CAP is Good, Actually • Buttondown",
      "url": "https://buttondown.email/jaffray/archive/cap-is-good-actually/",
      "savedAt": "2024-03-13T11:16:17.000Z",
      "description": "It seems like there are two main takes regarding the CAP theorem online: In introductory materials, it is presented as a deep, fundamental truth about...",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "99d8d10f-002f-4a53-80c5-d90adcb5a037",
      "title": "“No” Is a Good Default Answer",
      "url": "https://mikegrindle.com/posts/saying-no",
      "savedAt": "2024-03-12T11:50:24.000Z",
      "description": "(Or, how to find things worth saying yes to)",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "ab3f9bbf-8571-44eb-a390-e61e1e55b657",
      "title": "Technical Skills Are Overrated. Focus on Your Attitude.",
      "url": "https://www.scarletink.com/p/technical-skills-are-overrated-focus-on-your-attitude",
      "savedAt": "2024-03-10T17:52:37.000Z",
      "description": "When interviewing, particularly for technical positions, many people over value their technical preparation, and don't consider the importance of personality and leadership preparation.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "90cfb6e9-10b2-432a-ac03-4c41359e9e7f",
      "title": "Vector Clocks Explained",
      "url": "https://riak.com/why-vector-clocks-are-easy/",
      "savedAt": "2024-03-10T00:32:28.000Z",
      "description": "January 29, 2010 Vector clocks are confusing the first time you're introduced to them. It's not clear what their benefits are, nor how it is you derive said benefits. Indeed, each Riak developer has had his own set of false starts in making them behave.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "90b69fd1-0d5e-446a-90a1-b4082b063f52",
      "title": "POV: I'm on my third coffee and you just asked me how the internet works",
      "url": "https://www.youtube.com/watch?t=8s&v=jjKFXlFNR4E",
      "savedAt": "2024-03-09T22:56:58.000Z",
      "description": "POV: I'm on my third coffee and you just asked me how the internet works",
      "tags": [
        "computer-history",
        "networking"
      ]
    },
    {
      "id": "7a6ff909-f168-4916-9fc0-a40d99260f74",
      "title": "How HEAD works in git",
      "url": "https://jvns.ca/blog/2024/03/08/how-head-works-in-git/",
      "savedAt": "2024-03-09T14:47:19.000Z",
      "description": "How HEAD works in git",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "0186be0c-adcb-46ce-8583-3b789afe4f3b",
      "title": "How I read a research paper",
      "url": "https://muratbuffalo.blogspot.com/2013/07/how-i-read-research-paper.html",
      "savedAt": "2024-03-09T14:41:29.000Z",
      "description": "I can't tell you how you should read a research paper.  Probably a different and customized style would work best for you.   But I can t...",
      "tags": [
        "reading",
        "learning"
      ]
    },
    {
      "id": "2181dddb-3f5d-4ad5-befa-6744e203206e",
      "title": "Your attitude determines your success",
      "url": "https://muratbuffalo.blogspot.com/2021/03/your-attitude-determines-your-success.html",
      "savedAt": "2024-03-09T13:52:57.000Z",
      "description": "This may sound like a cliche your dad used to tell, but after many years of going through new areas, ventures, and careers, I find this to b...",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "343bfb5e-41b3-4d05-a6db-86de3ec4c97e",
      "title": "Learning a technical subject",
      "url": "https://muratbuffalo.blogspot.com/2021/12/learning-technical-subject.html",
      "savedAt": "2024-03-09T13:02:25.000Z",
      "description": "I love learning.  I wanted to write about how I learn, so I can analyze if there is a method to this madness. I will first talk about what m...",
      "tags": [
        "learning"
      ]
    },
    {
      "id": "d7268e10-70d3-429c-ac53-9ce48855e4b3",
      "title": "Why I blog",
      "url": "https://muratbuffalo.blogspot.com/2024/03/why-i-blog.html",
      "savedAt": "2024-03-08T22:01:59.000Z",
      "description": "My blog has been going for 14 years now, and has just passed 4 million pageviews. Yay! I remember the 1 million pageviews moment in 2017 ! T...",
      "tags": [
        "writing"
      ]
    },
    {
      "id": "ad07ff84-dd7b-11ee-a4b2-9f3f6b58409d",
      "title": "Coordination Avoidance in Database Systems",
      "url": "https://www.vldb.org/pvldb/vol8/p185-bailis.pdf",
      "savedAt": "2024-03-08T18:42:54.000Z",
      "description": null,
      "tags": [
        "papers"
      ]
    },
    {
      "id": "4738578d-0072-4ffa-9dc2-6ff8b1a2932d",
      "title": "How the First Transistor Worked - IEEE Spectrum",
      "url": "https://spectrum.ieee.org/transistor-history",
      "savedAt": "2024-03-08T12:25:43.000Z",
      "description": "<p>Even its inventors didn’t fully understand the point-contact transistor</p>",
      "tags": [
        "computer-history"
      ]
    },
    {
      "id": "deddf57b-dae4-4fe9-9b88-c941862000b7",
      "title": "The checklist manifesto (Dr. Atul Gawande, 2009)",
      "url": "https://muratbuffalo.blogspot.com/2024/01/the-checklist-manifesto-dr-atul-gawande.html",
      "savedAt": "2024-03-08T00:08:30.000Z",
      "description": "This book  advocates for integrating checklists as potent safety and fault-tolerance tools across diverse domains. Atul Gawande, a prominent...",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "3c2eb792-a250-4541-9bc8-5e1b8275b9c3",
      "title": "The CAP Theorem. The Bad, the Bad, & the Ugly | Dominik Tornow",
      "url": "https://blog.dtornow.com/the-cap-theorem.-the-bad-the-bad-the-ugly/",
      "savedAt": "2024-03-07T12:57:34.000Z",
      "description": "The CAP theorem is too simplistic and too widely misunderstood to be of much use for characterizing systems. Therefore I ask that we retire all references to the CAP theorem, stop talking about the CAP theorem, and put the poor thing to rest\nMartin Kleppmann\nIn 2000, Eric Brewer introduced the CAP Conjecture during his keynote address Towards Robust Distributed Systems at the Principles of Distributed Computing conference. Brewer posited that a distributed system cannot achieve Consistency, Availability, and Partition Tolerance simultaneously.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "1c089b8a-1868-4aee-bf17-cc206f7b9709",
      "title": "O Juro é negativo após 2008 - by 🟩🟩Trezoitão🟩🟩",
      "url": "https://amoedo.substack.com/p/o-juro-e-negativo-apos-2008",
      "savedAt": "2024-03-06T21:31:36.000Z",
      "description": "no legacy só há perda fixa e perda variável",
      "tags": []
    },
    {
      "id": "52302567-88fd-431d-8412-d3a3030b1839",
      "title": "Why (and how) to read books | notes.eatonphil.com",
      "url": "https://notes.eatonphil.com/why-and-how-to-read-books.html",
      "savedAt": "2024-03-05T10:51:49.000Z",
      "description": "Why (and how) to read books",
      "tags": [
        "reading"
      ]
    },
    {
      "id": "9efdc5c3-7a96-4bb1-a377-70967e1a3bc0",
      "title": "Reverse Engineering Protobuf Definitions From Compiled Binaries",
      "url": "https://arkadiyt.com/2024/03/03/reverse-engineering-protobuf-definitiions-from-compiled-binaries/",
      "savedAt": "2024-03-05T00:00:38.000Z",
      "description": "How to extract raw source protobuf definitions from compiled binaries, regardless of the target architecture",
      "tags": [
        "reverse-engineering"
      ]
    },
    {
      "id": "11e26938-8dc5-474d-a66f-0b809df523b4",
      "title": "Anatomy of a NixOS Config - unmoved centre",
      "url": "https://unmovedcentre.com/technology/2024/02/24/anatomy-of-a-nixos-config.html",
      "savedAt": "2024-03-04T16:18:42.000Z",
      "description": "This article provides a structural overview on the anatomy of my personal nix configuration.",
      "tags": [
        "tools/nix"
      ]
    },
    {
      "id": "7e302f76-de4c-44e1-be43-8ee8d0368c1b",
      "title": "Paul Butler – The hater’s guide to Kubernetes",
      "url": "https://paulbutler.org/2024/the-haters-guide-to-kubernetes/",
      "savedAt": "2024-03-04T12:25:44.000Z",
      "description": "Paul Butler – March 3, 2024",
      "tags": [
        "devops"
      ]
    },
    {
      "id": "675ccc98-93a4-4ae2-857a-acdda48ddb28",
      "title": "A Deep Dive into the Underlying Architecture of Groq's LPU",
      "url": "https://codeconfessions.substack.com/p/groq-lpu-design",
      "savedAt": "2024-03-04T12:25:23.000Z",
      "description": "What powers the ground breaking performance of Groq's Langauge Processing Unit?",
      "tags": [
        "for-later",
        "hardware",
        "cs/ai"
      ]
    },
    {
      "id": "b8dfcaf7-ed22-4314-93ab-7244c826ae8c",
      "title": "Byte Interviews the Apple Lisa Dev Team (1983)",
      "url": "https://computeradsfromthepast.substack.com/p/byte-interviews-the-apple-lisa-dev",
      "savedAt": "2024-03-04T12:24:27.000Z",
      "description": "A behind-the-scenes look at the development of Apples Lisa.",
      "tags": [
        "for-later",
        "computer-history"
      ]
    },
    {
      "id": "83badfff-41dc-43af-9675-85bd1acbe088",
      "title": "Internet gardening | James' Coffee Blog",
      "url": "https://jamesg.blog/2024/03/04/internet-gardening/",
      "savedAt": "2024-03-04T12:10:58.000Z",
      "description": "Personal websites are an opportunity to be uniquely you online. Your website can be designed in the way that you want. You can express and connect ideas in a way that is personally meaningful. You can create original content and reply to writing or art that you found thought-provoking. You can make: art, essays, blog posts, reflections, interactive experiences. All on the web.",
      "tags": [
        "writing"
      ]
    },
    {
      "id": "69cb27d1-4367-4c90-b233-4edb18b425cf",
      "title": "Airfoil – Bartosz Ciechanowski",
      "url": "https://ciechanow.ski/airfoil/",
      "savedAt": "2024-03-03T19:43:14.000Z",
      "description": "Interactive article explaining the physics of an airfoil and what makes airplanes fly",
      "tags": [
        "for-later",
        "curiosity"
      ]
    },
    {
      "id": "419d6c07-5f12-4944-a28a-55647d7ba589",
      "title": "Inside the miracle of modern chip manufacturing",
      "url": "https://ig.ft.com/microchips/",
      "savedAt": "2024-03-03T19:29:45.000Z",
      "description": "After coming up against the limits of physics, scientists are rethinking chip architecture like never before",
      "tags": [
        "hardware",
        "computer-history"
      ]
    },
    {
      "id": "25c8c4d8-f62d-4667-8c17-7879bd51a328",
      "title": "How User Groups Made Software Reuse a Reality | ℤ→ℤ",
      "url": "https://ztoz.blog/posts/user-group-reuse/",
      "savedAt": "2024-03-03T18:29:41.000Z",
      "description": "Before the widespread existence of software repositories like CPAN, NPM, and PyPI, developers seeking to reuse an existing algorithm or library of routines would either check books or journals for code, or, they just might post a classified ad:",
      "tags": [
        "computer-history"
      ]
    },
    {
      "id": "779f4054-f785-42ad-92d4-14232d46fd9b",
      "title": "My thoughts on writing a Minecraft server from scratch (in Bash)",
      "url": "https://sdomi.pl/weblog/15-witchcraft-minecraft-server-in-bash/",
      "savedAt": "2024-03-02T16:03:18.000Z",
      "description": "I wrote a working Minecraft server in Bash! wait, why did I do that",
      "tags": [
        "for-later",
        "interesting"
      ]
    },
    {
      "id": "115435b4-68bf-4cdf-b878-290fc9b1c08a",
      "title": "Building a Scalable Accounting Ledger",
      "url": "https://scratchdata.com/blog/building-a-ledger/",
      "savedAt": "2024-03-02T12:41:54.000Z",
      "description": "How to use an analytics database to build a ledger that can handle millions of rows.",
      "tags": [
        "finances",
        "programming"
      ]
    },
    {
      "id": "aa2100d9-0601-44d4-a377-93c3f24bd1a1",
      "title": "Learn CSS Layout The Pedantic Way",
      "url": "https://book.mixu.net/css/",
      "savedAt": "2024-03-01T22:31:40.000Z",
      "description": "Bureaucrat Conrad, you are technically correct - the best kind of correct. I hereby promote you to grade 37. - Number 1.0 (Futurama, S2E15)",
      "tags": [
        "for-later",
        "web"
      ]
    },
    {
      "id": "bca1c5c5-edba-4b98-b1dd-68e10ec64006",
      "title": "Salary Negotiation: Make More Money, Be More Valued | Kalzumeus Software",
      "url": "https://www.kalzumeus.com/2012/01/23/salary-negotiation/",
      "savedAt": "2024-03-01T15:19:57.000Z",
      "description": "Salary negotiation advice, mostly for engineers. Running total of raises negotiated due to this essay: $9M+.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "074ff1d5-6691-4bfa-b2f4-418688d4e302",
      "title": "Understanding GPU caches – RasterGrid",
      "url": "https://www.rastergrid.com/blog/gpu-tech/2021/01/understanding-gpu-caches/",
      "savedAt": "2024-03-01T01:03:57.000Z",
      "description": null,
      "tags": [
        "for-later",
        "hardware"
      ]
    },
    {
      "id": "a0c61427-40fa-41c1-86e3-17cab7794957",
      "title": "Demystifying GPUs for CPU-centric programmers | Medium",
      "url": "https://medium.com/@penberg/demystifying-gpus-for-cpu-centric-programmers-e24934a620f1",
      "savedAt": "2024-03-01T01:03:50.000Z",
      "description": "GPUs are essential for modern AI workloads, but how do they execute code and why are they so much for efficient than CPU for such workloads?",
      "tags": [
        "for-later",
        "hardware"
      ]
    },
    {
      "id": "2111a84b-a6b6-4aa3-842b-ab95b5bf2d12",
      "title": "OBTF Follow-up",
      "url": "https://mikegrindle.com/posts/obtf-follow-up",
      "savedAt": "2024-02-29T15:43:07.000Z",
      "description": "A little while back, I wrote a post about my One Big Text File (OBTF)\nnote-taking “system.” To my surprise, it seemed to strike a chord with a\nlot of you, inspiring some people to try it themselves and many\nconversations on note-taking.",
      "tags": [
        "note-taking"
      ]
    },
    {
      "id": "e0f8d006-31ec-4df6-ba2c-45996827fffd",
      "title": "No one can teach you to have conviction | benkuhn.net",
      "url": "https://www.benkuhn.net/conviction/",
      "savedAt": "2024-02-29T10:35:39.000Z",
      "description": "fast vs slow feedback • modeling people vs. modeling the problem • mentors vs. mistakes • why you should do the hard thing now",
      "tags": [
        "career"
      ]
    },
    {
      "id": "b07e0c71-c22e-4c77-ab9c-c75b81f6a199",
      "title": "Shape Up: Stop Running in Circles and Ship Work that Matters",
      "url": "https://basecamp.com/shapeup",
      "savedAt": "2024-02-28T12:19:52.000Z",
      "description": "Shape Up will help you break free of “best practices” that aren’t really working, think deeper about the right problems, and start shipping meaningful projects your team can celebrate.",
      "tags": [
        "career",
        "for-later"
      ]
    },
    {
      "id": "a5d1741f-c552-4f79-9063-c65e10e07b8a",
      "title": "How I backup | Derek Sivers",
      "url": "https://sive.rs/backup",
      "savedAt": "2024-02-28T12:19:20.000Z",
      "description": "Some people have asked, so here is how I do my backups.\nIt takes me about ten seconds per day and five minutes per month to maintain.",
      "tags": [
        "devops"
      ]
    },
    {
      "id": "c1136ce1-8da3-44c3-8fe5-aa1043bcb4b2",
      "title": "Job titles are bullshit · Jamie Tanna | Software Engineer",
      "url": "https://www.jvt.me/posts/2024/02/26/job-titles-bullshit/",
      "savedAt": "2024-02-26T22:34:02.000Z",
      "description": "When is a Senior Engineer not a Senior Engineer, no standardisation across the industry, and other reasons job titles are frustrating.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "dfcbefff-ae9d-4135-bd0f-2e6ef4facf87",
      "title": "How to change a system (18 ways) – Changeology",
      "url": "https://www.enablingchange.com.au/blog/strategy-2/how-to-change-a-system/",
      "savedAt": "2024-02-26T22:05:52.000Z",
      "description": "“Hunger, poverty, environmental degradation, economic instability, unemployment, chronic disease, drug addiction, and war, for example, persist in spite of the analytical ability and technica…",
      "tags": [
        "systems-theory"
      ]
    },
    {
      "id": "ed1208e7-eab0-4977-a3d0-2c43b7203132",
      "title": "Earth is becoming sentient — Steph Ango",
      "url": "https://stephango.com/earth",
      "savedAt": "2024-02-26T21:57:33.000Z",
      "description": "Humans are not the last level of life’s fractal pattern. The Earth itself is becoming a sentient organism, a new stage of life, a species that exists on a sc...",
      "tags": []
    },
    {
      "id": "754366b8-4ad0-42dc-940b-ef228b6f0d69",
      "title": "2024-02-25 a history of the tty",
      "url": "https://computer.rip/2024-02-25-a-history-of-the-tty.html",
      "savedAt": "2024-02-26T11:24:31.000Z",
      "description": "It's one of those anachronisms that is deeply embedded in modern technology.\nFrom cloud operator servers to embedded controllers in appliances, there\nmust be uncountable devices that think they are connected to a TTY.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "da979f22-4e08-4e5b-8055-019f9439aeb2",
      "title": "Website Refresh 2023",
      "url": "https://ped.ro/writing/website-refresh-2023",
      "savedAt": "2024-02-25T22:10:16.000Z",
      "description": "Redefining myself and my website.",
      "tags": [
        "design"
      ]
    },
    {
      "id": "2daa3fdc-d406-11ee-a9d7-9bcb3850f82a",
      "title": "Nobody Ever Gets Credit for Fixing Problems that Never Happened",
      "url": "https://web.mit.edu/nelsonr/www/Repenning=Sterman_CMR_su01_.pdf",
      "savedAt": "2024-02-25T17:49:12.000Z",
      "description": null,
      "tags": [
        "for-later",
        "systems-theory"
      ]
    },
    {
      "id": "facff966-5f97-4117-9734-8262ddcd6692",
      "title": "Roman Jakobson : The Functions of Language / Signo - Applied Semiotics Theories",
      "url": "http://www.signosemio.com/jakobson/functions-of-language.asp",
      "savedAt": "2024-02-25T17:13:46.000Z",
      "description": "The Functions of Language: a Jakobson's semiotic theory. Abstract, Theory, Application, References and Exercices.",
      "tags": [
        "languages"
      ]
    },
    {
      "id": "b8f288ed-847f-42d0-b93c-faa8b0b9f043",
      "title": "Haskell for all: Unification-free (\"keyword\") type checking",
      "url": "https://www.haskellforall.com/2024/02/unification-free-keyword-type-checking.html",
      "savedAt": "2024-02-25T16:22:30.000Z",
      "description": "A type checking proposal that doesn't employ unification variables.",
      "tags": [
        "programming-languages",
        "type-theory"
      ]
    },
    {
      "id": "682c96c3-08aa-4c7a-b0a6-b654a250adcc",
      "title": "Compiler Theory and Reactivity",
      "url": "https://www.recompiled.dev/blog/ssa/",
      "savedAt": "2024-02-24T14:27:34.000Z",
      "description": "The post describes how the React Compiler uses SSA form for fine grained reactivity",
      "tags": [
        "cs/compilers",
        "framework/react"
      ]
    },
    {
      "id": "f72019a4-42cb-4c31-8c54-3fa1505c8778",
      "title": "ego",
      "url": "https://sigilwen.ca/ego.html",
      "savedAt": "2024-02-24T14:18:21.000Z",
      "description": "Feb 23rd, 2024 by Sigil Wen",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "ebf1a539-64df-4149-bb59-a1ad235b45c1",
      "title": "Build your own Database Index: part 1",
      "url": "https://dx13.co.uk/articles/2023/12/02/byo-index-pt1/",
      "savedAt": "2024-02-24T01:02:50.000Z",
      "description": "I’ve been quiet in November because I’ve been working on a small toy project.\nNow it’s become interesting, I want to write about it. In part, to prove to\nmyself I actually understand what I’ve built, by showing I can explain it in\nwords. I’ve been working through creating a simple database-like index, to\nunderstand the concepts involved more concretely.",
      "tags": [
        "database",
        "for-later"
      ]
    },
    {
      "id": "95968dee-1a01-40af-a70b-2895e6b148d2",
      "title": "williamdemeo/TypeFunc: Resources for type theory, functional programming, etc.",
      "url": "https://github.com/williamdemeo/TypeFunc",
      "savedAt": "2024-02-23T12:21:40.000Z",
      "description": "Resources for type theory, functional programming, etc. - williamdemeo/TypeFunc",
      "tags": [
        "type-theory",
        "functional-programming",
        "resource"
      ]
    },
    {
      "id": "6830458f-ce2d-462c-a6be-dc6de333424f",
      "title": "How MOSFETS Work - Unravel the Mysteries of How mosfets Work!",
      "url": "https://www.youtube.com/watch?v=AwRJsze_9m4",
      "savedAt": "2024-02-22T00:53:42.000Z",
      "description": "How MOSFETS Work - Unravel the Mysteries of How mosfets Work!",
      "tags": [
        "type/video",
        "hardware"
      ]
    },
    {
      "id": "210ff6b6-8bf8-4e97-9619-947db2482f1c",
      "title": "What I Wish Someone Had Told Me - Sam Altman",
      "url": "https://blog.samaltman.com/what-i-wish-someone-had-told-me",
      "savedAt": "2024-02-21T13:14:48.000Z",
      "description": "Optimism, obsession, self-belief, raw horsepower and personal connections are how things get started. Cohesive teams, the right combination of calmness and urgency, and unreasonable commitment are...",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "2ed359ac-688e-4847-baea-9e689d7e066c",
      "title": "Table of Contents | Ultimate Electronics Book",
      "url": "https://ultimateelectronicsbook.com",
      "savedAt": "2024-02-21T00:44:56.000Z",
      "description": "A free, interactive book for electronics hobbyists and electrical engineering students: Practical Circuit Design and Analysis.",
      "tags": [
        "hardware",
        "books"
      ]
    },
    {
      "id": "748db3e2-4879-434e-8953-9dc1877f3d49",
      "title": "Software infrastructure 2.0: a wishlist · Erik Bernhardsson",
      "url": "https://erikbern.com/2021/04/19/software-infrastructure-2.0-a-wishlist.html",
      "savedAt": "2024-02-20T18:53:52.000Z",
      "description": "Erik Bernhardsson",
      "tags": [
        "type/article",
        "for-later"
      ]
    },
    {
      "id": "1a70a07c-df1f-47ad-b22d-a8677abc9748",
      "title": "DRMacIver's Notebook: Writing good programming abstractions",
      "url": "https://notebook.drmaciver.com/posts/2024-01-13-08:28.html",
      "savedAt": "2024-02-20T11:09:40.000Z",
      "description": "Writing good programming abstractions",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "bfa84e4c-9ffa-466c-b087-b61b2f56b14d",
      "title": "Bloom Filters",
      "url": "https://samwho.dev/bloom-filters/",
      "savedAt": "2024-02-19T22:21:21.000Z",
      "description": "A visual, interactive guide to what bloom filters are, when you would use them, and how they work.",
      "tags": [
        "for-later",
        "database"
      ]
    },
    {
      "id": "003ff493-7d40-4803-a0f2-2bcc98a2c59d",
      "title": "Evolution of tree data structures for indexing: more exciting than it sounds · Erthalion's blog",
      "url": "https://erthalion.info/2020/11/28/evolution-of-btree-index-am/",
      "savedAt": "2024-02-17T23:38:02.000Z",
      "description": "I have to admit, my research blog posts are getting longer and longer. From one\nside I find it genuinely encouraging, because if one gets so much information\njust by scratching the topic, imagine what’s hidden beneath the surface! One\nuniversity professor once said “what could be interesting in databases?”, and\nit turns out freaking a lot! On the other side it certainly poses problems for\npotential readers. To overcome them I would suggest an interesting approach:\nprint this blog post out, or open it on your tablet/e-reader, where you can\nmake notes with a pencil or markers. Now while reading it try to spot ideas\nparticularly exciting for you and mark them. Along the way there would be\ndefinitely some obscure parts or questions, write them on the sides as well.\nYou can experiment with the diagrams, changing or extending them, or just\ndrawing funny faces. But do not read everything at once, have no fear of\nputting it aside for a while, and read in chunks that are convenient for you.\nSome parts could be skipped as the text is build out of relatively independent\ntopics. The table of contents can help and guide you. Having said that we’re\nready to embark on the journey.",
      "tags": [
        "database"
      ]
    },
    {
      "id": "4847642b-158e-42d6-ad87-355a911e8fd5",
      "title": "B-trees",
      "url": "https://shachaf.net/w/b-trees",
      "savedAt": "2024-02-17T22:49:50.000Z",
      "description": "Let’s invent B(+)-trees.",
      "tags": [
        "database"
      ]
    },
    {
      "id": "162a8e3e-86d9-481c-8068-8dee4d0faee5",
      "title": "B+-Tree Indexes",
      "url": "https://web.archive.org/web/20080723122307/http://www.cecs.csulb.edu/%7emonge/classes/share/B+TreeIndexes.html",
      "savedAt": "2024-02-17T20:58:32.000Z",
      "description": "The Wayback Machine - https://web.archive.org/web/20080723122307/http://www.cecs.csulb.edu/%7emonge/classes/share/B+TreeIndexes.html",
      "tags": []
    },
    {
      "id": "5686bfb9-4c54-447d-818e-11f2c6ab83c2",
      "title": "Fighting undead documentation",
      "url": "https://softwaredoug.com/blog/2023/10/13/fight-undead-documentation",
      "savedAt": "2024-02-14T22:50:48.000Z",
      "description": "Software documentation that doesn’t suck needs to exist with the living",
      "tags": []
    },
    {
      "id": "5a0c7479-b899-49ec-9473-694dfc510411",
      "title": "Distributed Logical Time",
      "url": "https://longform.asmartbear.com/distributed-logical-time/",
      "savedAt": "2024-02-12T15:05:38.000Z",
      "description": "A simple, decentralized, scalable, constant-memory mechanism for independent replicas to record events in time, preserving the \"happened-before\" relation in almost all cases.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "4ba7d0fc-12f1-462b-952f-77246d40a106",
      "title": "An intuition for distributed consensus in OLTP systems | notes.eatonphil.com",
      "url": "https://notes.eatonphil.com/2024-02-08-an-intuition-for-distributed-consensus-in-oltp-systems.html",
      "savedAt": "2024-02-12T14:30:04.000Z",
      "description": "An intuition for distributed consensus in OLTP systems",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "664ef042-1059-4bbc-aef7-dab42ed9aebb",
      "title": "How to (seriously) read a scientific paper | Science | AAAS",
      "url": "https://www.science.org/content/article/how-seriously-read-scientific-paper",
      "savedAt": "2024-02-11T21:48:43.000Z",
      "description": "Reading becomes easier with experience, but it is up to each scientist to identify the techniques that work best for them.",
      "tags": []
    },
    {
      "id": "6e19864f-9e04-4857-95f6-4d8f4908ab18",
      "title": "A Distributed Systems Reading List",
      "url": "https://ferd.ca/a-distributed-systems-reading-list.html",
      "savedAt": "2024-02-11T20:17:41.000Z",
      "description": "An old document I surfaced with my quick tour of distributed systems theory fundamentals",
      "tags": [
        "type/article",
        "resource",
        "cs/distsys"
      ]
    },
    {
      "id": "d9ea9ccc-f14a-412a-8a1e-0aeba04af7ca",
      "title": "HOW TO STUDY",
      "url": "https://cse.buffalo.edu/~rapaport/howtostudy.html",
      "savedAt": "2024-02-11T20:13:13.000Z",
      "description": "Note:  \n\tor \n    material is highlighted",
      "tags": [
        "self-improvement",
        "study"
      ]
    },
    {
      "id": "e8369fa9-3254-4334-822e-d650ed607523",
      "title": "Tunable Consistency in MongoDB",
      "url": "https://muratbuffalo.blogspot.com/2024/02/tunable-consistency-in-mongodb.html",
      "savedAt": "2024-02-10T20:23:28.000Z",
      "description": "This paper appeared in VLDB 2019.  It discusses the tunable consistency models in MongoDB  and how MongoDB's speculative execution model...",
      "tags": [
        "database"
      ]
    },
    {
      "id": "f2c4e000-5424-4e70-850a-2c52a0a321a9",
      "title": "Teach Yourself Programming in Ten Years",
      "url": "https://norvig.com/21-days.html",
      "savedAt": "2024-02-09T01:08:39.000Z",
      "description": "The conclusion is that either people are in a big rush to learn\nabout programming, or that programming is somehow fabulously easier to\nlearn than anything else.  \nFelleisen et al.\ngive a nod to this trend in their book How to Design Programs, when they say\n\"Bad programming is easy. Idiots can learn it in 21 days,\neven if they are dummies.\" The Abtruse Goose comic also had their take.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "9f62ff3e-beda-4f57-a1b1-c4a442385f89",
      "title": "Demystifying GPU Compute Architectures - by Babbage",
      "url": "https://thechipletter.substack.com/p/demystifying-gpu-compute-architectures",
      "savedAt": "2024-02-09T01:03:41.000Z",
      "description": "Getting 'low level' with Nvidia and AMD GPUs",
      "tags": [
        "programming",
        "for-later"
      ]
    },
    {
      "id": "d7cdd9d1-0f3a-4ba4-9951-b1783cc68226",
      "title": "OKRs are Bullshit - by drmorr",
      "url": "https://blog.appliedcomputing.io/p/okrs-are-bullshit",
      "savedAt": "2024-02-09T00:03:03.000Z",
      "description": "It's a new year, time for a new rant! And yes, before you ask, the post title is deliberately provocative. You might say this is my ploy to get more paid subscribers, because only paid subscribers can leave comments and I expect that the title alone will make many of you want to comment. 😝",
      "tags": []
    },
    {
      "id": "79959e1c-6248-43c0-b6f1-21149e30b7d5",
      "title": "Writing Is Magic - Marc's Blog",
      "url": "https://brooker.co.za/blog/2022/11/08/writing.html",
      "savedAt": "2024-02-08T23:27:40.000Z",
      "description": "Magic can be dangerous.",
      "tags": [
        "type/article"
      ]
    },
    {
      "id": "f96910f5-1992-4cb6-831e-93f3784d6131",
      "title": "Writing For Somebody - Marc's Blog",
      "url": "https://brooker.co.za/blog/2023/09/21/audience.html",
      "savedAt": "2024-02-08T11:42:29.000Z",
      "description": "Who's there?",
      "tags": [
        "writing",
        "self-improvement"
      ]
    },
    {
      "id": "3b73de86-21cd-49af-9dae-121feb7a8d54",
      "title": "How Do You Spend Your Time? - Marc's Blog",
      "url": "https://brooker.co.za/blog/2024/02/06/time",
      "savedAt": "2024-02-07T03:41:56.000Z",
      "description": "Career advice, or something like it.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "50c2329e-7ef8-42d3-99a3-270decec27f2",
      "title": "Why Gödel, Escher, Bach is the most influential book in my life. | by Mark Johnson | Medium",
      "url": "https://philosophygeek.medium.com/why-g%C3%B6del-escher-bach-is-the-most-influential-book-in-my-life-49d785a4e428",
      "savedAt": "2024-02-04T22:19:04.000Z",
      "description": "Gödel, Escher, Bach: An Eternal Golden Braid (henceforth: GEB), the Pulitzer Prize winning book written in 1978 by Douglas Hofstadter, is described in its cryptic tagline as “a metaphorical fugue on…",
      "tags": [
        "math",
        "books"
      ]
    },
    {
      "id": "de61e50b-1117-41e8-b5df-1747a732d5d4",
      "title": "Idea Generation - Sam Altman",
      "url": "https://blog.samaltman.com/idea-generation",
      "savedAt": "2024-02-03T17:32:15.000Z",
      "description": "The most common question prospective startup founders ask is how to get ideas for startups. The second most common question is if you have any ideas for their startup.\n\n\nBut giving founders an idea...",
      "tags": [
        "type/article",
        "startup"
      ]
    },
    {
      "id": "7a45f3d1-5dfd-4402-98c3-81bd2a3cca4e",
      "title": "How Did I Get Here?",
      "url": "https://how-did-i-get-here.net",
      "savedAt": "2024-02-01T01:00:13.000Z",
      "description": "A cool-as-shit dynamic traceroute powered by custom software, married with an informative article about how the BGP routing protocol works and guides the shape of the Internet.",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "20d60fd7-607e-4ea6-93e0-1df6a698ed2b",
      "title": "A Brief Summary of Evolutionary Design | CodingItWrong.com",
      "url": "https://codingitwrong.com/2024/01/29/brief-summary-of-evolutionary-design",
      "savedAt": "2024-02-01T00:19:37.000Z",
      "description": "For years I’ve wanted to write something to advocate for evolutionary design. There is so much that can be said, and I hope to write more in the future. But I wanted to begin with this short definition of what I mean by “evolutionary design” and explanation of why it’s helpful.",
      "tags": [
        "programming"
      ]
    },
    {
      "id": "a81445f2-1dd1-4a83-9d5d-89aa7284a401",
      "title": "The Hacker News Top 40 books of 2023 -",
      "url": "https://hnreads.com/post/top40_2023/",
      "savedAt": "2024-01-31T11:21:24.000Z",
      "description": "Hi, welcome to the brand new website, HN Reads. I enjoy reading Hacker News and I love buying books (and reading), and I also love data, so what better than doing some processing of data about books to find some interesting results?! It also gives me the opportunity to write about books that I find interesting.\nHere are the top 40 books recommended by HN readers in 2023.\nHow I generated this list:",
      "tags": [
        "resource",
        "books"
      ]
    },
    {
      "id": "44acc586-770e-4ba3-9842-eb7d0feb5707",
      "title": "How to do things if you're not that smart and don't have any talent",
      "url": "https://adaobi.substack.com/p/how-to-do-things-if-youre-not-that",
      "savedAt": "2024-01-31T01:33:31.000Z",
      "description": "This is a blog post aimed at people who want to do important work or make meaningful contributions to work, but feel they aren’t that smart and don’t have any talent. Thanks for reading Adaobi’s Newsletter! Subscribe for free to receive new posts and support my work.",
      "tags": [
        "self-improvement",
        "career"
      ]
    },
    {
      "id": "fd71905b-1c8c-4bee-a545-cd3cb475a108",
      "title": "Reverse engineering CMOS, illustrated with a vintage Soviet counter chip",
      "url": "https://www.righto.com/2024/01/reverse-engineering-cmos.html",
      "savedAt": "2024-01-31T00:09:29.000Z",
      "description": "I recently came across an interesting die photo of a Soviet 1  chip, probably designed in the 1970s. This article provides an introductory g...",
      "tags": [
        "programming",
        "hardware"
      ]
    },
    {
      "id": "d67e1e99-8a77-4f9d-85e5-11fb8e3a16d4",
      "title": "Manage like an engineer | Ben Balter",
      "url": "https://ben.balter.com/2023/01/10/manage-like-an-engineer/",
      "savedAt": "2024-01-29T11:44:51.000Z",
      "description": "If issues, pull requests, and project boards are the best way to develop software, should they not also be the best way to manage software development?",
      "tags": [
        "career"
      ]
    },
    {
      "id": "602a7c35-30b9-4de8-89ba-b4b9d07621ea",
      "title": "Axioms of Systemantics",
      "url": "https://www.biodigitaljazz.net/blog/systemantics.html",
      "savedAt": "2024-01-26T01:21:21.000Z",
      "description": "2024 Jan 25",
      "tags": [
        "systems-theory"
      ]
    }
  ]
}